<!DOCTYPE html>
<!-- saved from url=(0064)https://openhome.cc/Gossip/CodeData/GuavaTutorial/Exception.html -->
<html lang="zh-tw"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="【Guava 教學】（4）實作 toString、equals 與 hashCode 的幫手 &lt;&lt; 前情
      這篇是要來談談 Guava 的 Throwables，不過...">

<meta property="og:locale" content="zh_TW">
<meta property="og:title" content="【Guava 教學】（5）程式 90% 比率在管理與處理錯誤">
<meta property="og:type" content="article">
<meta property="og:url" content="https://openhome.cc/Gossip/CodeData/GuavaTutorial/Exception.html">
<meta property="og:image" content="https://openhome.cc/Gossip/images/caterpillar_small.jpg">
<meta property="og:site_name" content="OPENHOME.CC">
<meta property="og:description" content="【Guava 教學】（4）實作 toString、equals 與 hashCode 的幫手 &lt;&lt; 前情
      這篇是要來談談 Guava 的 Throwables，不過...">


    <title>【Guava 教學】（5）程式 90% 比率在管理與處理錯誤</title>

<link rel="stylesheet" href="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/pure-min.css">

    <!--[if lte IE 8]>
        <link rel="stylesheet" href="../../css/layouts/side-menu-old-ie.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
        <link rel="stylesheet" href="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/side-menu.css">
    <!--<![endif]-->
  

     <link rel="stylesheet" href="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/caterpillar.css">
     <script async="" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/async-ads.js"></script><script src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/osd.js"></script><script src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/ca-pub-9750319131714390.js"></script><script async="" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/analytics.js"></script><script type="text/javascript" async="" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/cse.js"></script>
<!-- 網頁層級廣告 --><script async="" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/adsbygoogle.js"></script><script>(adsbygoogle =window.adsbygoogle || []).push({google_ad_client: "ca-pub-9750319131714390",enable_page_level_ads: true });</script><link rel="stylesheet" type="text/css" href="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/prettify.css"><link rel="preload" href="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/integrator.js" as="script"><script type="text/javascript" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/integrator.js"></script><link rel="preload" href="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/integrator(1).js" as="script"><script type="text/javascript" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/integrator(1).js"></script><script src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/jsapi" type="text/javascript"></script><link type="text/css" href="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/default+zh_TW.css" rel="stylesheet"><link type="text/css" href="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/default.css" rel="stylesheet"><script type="text/javascript" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/default+zh_TW.I.js"></script><style type="text/css">.gsc-control-cse{font-family:Arial, sans-serif;border-color:#FFFFFF;background-color:#FFFFFF}.gsc-control-cse .gsc-table-result{font-family:Arial, sans-serif}input.gsc-input{border-color:#BCCDF0}input.gsc-search-button{border-color:#666666;background-color:#CECECE}.gsc-tabHeader.gsc-tabhInactive{border-color:#E9E9E9;background-color:#E9E9E9}.gsc-tabHeader.gsc-tabhActive{border-top-color:#FF9900;border-left-color:#E9E9E9;border-right-color:#E9E9E9;background-color:#FFFFFF}.gsc-tabsArea{border-color:#E9E9E9;}.gsc-webResult.gsc-result,.gsc-results .gsc-imageResult{border-color:#336699;background-color:#FFFFFF}.gsc-webResult.gsc-result:hover,.gsc-imageResult:hover{border-color:#0000CC;background-color:#FFFFFF}.gsc-webResult.gsc-result.gsc-promotion:hover{border-color:#0000CC;background-color:#FFFFFF}.gs-webResult.gs-result a.gs-title:link,.gs-webResult.gs-result a.gs-title:link b,.gs-imageResult a.gs-title:link,.gs-imageResult a.gs-title:link b{color:#0000FF}.gs-webResult.gs-result a.gs-title:visited,.gs-webResult.gs-result a.gs-title:visited b,.gs-imageResult a.gs-title:visited,.gs-imageResult a.gs-title:visited b{color:#663399}.gs-webResult.gs-result a.gs-title:hover,.gs-webResult.gs-result a.gs-title:hover b,.gs-imageResult a.gs-title:hover,.gs-imageResult a.gs-title:hover b{color:#0000CC}.gs-webResult.gs-result a.gs-title:active,.gs-webResult.gs-result a.gs-title:active b,.gs-imageResult a.gs-title:active,.gs-imageResult a.gs-title:active b{color:#0000CC}.gsc-cursor-page{color:#0000FF}a.gsc-trailing-more-results:link{color:#0000FF}.gs-webResult .gs-snippet,.gs-imageResult .gs-snippet,.gs-fileFormatType{color:#000000}.gs-webResult div.gs-visibleUrl,.gs-imageResult div.gs-visibleUrl{color:#008000}.gs-webResult div.gs-visibleUrl-short{color:#008000}.gs-webResult div.gs-visibleUrl-short{display:none}.gs-webResult div.gs-visibleUrl-long{display:block}.gs-promotion div.gs-visibleUrl-short{display:none}.gs-promotion div.gs-visibleUrl-long{display:block}.gsc-cursor-box{border-color:#336699}.gsc-results .gsc-cursor-box .gsc-cursor-page{border-color:#E9E9E9;background-color:#FFFFFF;color:#0000FF}.gsc-results .gsc-cursor-box .gsc-cursor-current-page{border-color:#FF9900;background-color:#FFFFFF;color:#663399}.gsc-webResult.gsc-result.gsc-promotion{border-color:#336699;background-color:#FFFFFF}.gsc-completion-title{color:#0000FF}.gsc-completion-snippet{color:#000000}.gs-promotion a.gs-title:link,.gs-promotion a.gs-title:link *,.gs-promotion .gs-snippet a:link{color:#0000FF}.gs-promotion a.gs-title:visited,.gs-promotion a.gs-title:visited *,.gs-promotion .gs-snippet a:visited{color:#663399}.gs-promotion a.gs-title:hover,.gs-promotion a.gs-title:hover *,.gs-promotion .gs-snippet a:hover{color:#0000FF}.gs-promotion a.gs-title:active,.gs-promotion a.gs-title:active *,.gs-promotion .gs-snippet a:active{color:#0000FF}.gs-promotion .gs-snippet,.gs-promotion .gs-title .gs-promotion-title-right,.gs-promotion .gs-title .gs-promotion-title-right *{color:#000000}.gs-promotion .gs-visibleUrl,.gs-promotion .gs-visibleUrl-short{color:#008000}</style><style type="text/css">.gscb_a{display:inline-block;font:27px/13px arial,sans-serif}.gsst_a .gscb_a{color:#a1b9ed;cursor:pointer}.gsst_a:hover .gscb_a,.gsst_a:focus .gscb_a{color:#36c}.gsst_a{display:inline-block}.gsst_a{cursor:pointer;padding:0 4px}.gsst_a:hover{text-decoration:none!important}.gsst_b{font-size:16px;padding:0 2px;position:relative;user-select:none;-webkit-user-select:none;white-space:nowrap}.gsst_e{opacity:0.55;}.gsst_a:hover .gsst_e,.gsst_a:focus .gsst_e{opacity:0.72;}.gsst_a:active .gsst_e{opacity:1;}.gsst_f{background:white;text-align:left}.gsst_g{background-color:white;border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-webkit-box-shadow:0 2px 4px rgba(0,0,0,0.2);margin:-1px -3px;padding:0 6px}.gsst_h{background-color:white;height:1px;margin-bottom:-1px;position:relative;top:-1px}.gsib_a{width:100%;padding:4px 6px 0}.gsib_a,.gsib_b{vertical-align:top}.gssb_c{border:0;position:absolute;z-index:989}.gssb_e{border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-webkit-box-shadow:0 2px 4px rgba(0,0,0,0.2);cursor:default}.gssb_f{visibility:hidden;white-space:nowrap}.gssb_k{border:0;display:block;position:absolute;top:0;z-index:988}.gsdd_a{border:none!important}.gsq_a{padding:0}.gsq_a{padding:0}.gscsep_a{display:none}.gssb_a{padding:0 7px}.gssb_a,.gssb_a td{white-space:nowrap;overflow:hidden;line-height:22px}#gssb_b{font-size:11px;color:#36c;text-decoration:none}#gssb_b:hover{font-size:11px;color:#36c;text-decoration:underline}.gssb_g{text-align:center;padding:8px 0 7px;position:relative}.gssb_h{font-size:15px;height:28px;margin:0.2em;-webkit-appearance:button}.gssb_i{background:#eee}.gss_ifl{visibility:hidden;padding-left:5px}.gssb_i .gss_ifl{visibility:visible}a.gssb_j{font-size:13px;color:#36c;text-decoration:none;line-height:100%}a.gssb_j:hover{text-decoration:underline}.gssb_l{height:1px;background-color:#e5e5e5}.gssb_m{color:#000;background:#fff}.gsfe_a{border:1px solid #b9b9b9;border-top-color:#a0a0a0;box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);-moz-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);-webkit-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);}.gsfe_b{border:1px solid #4d90fe;outline:none;box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);-moz-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);-webkit-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);}.gssb_a{padding:0 7px}.gssb_e{border:0}.gssb_l{margin:5px 0}input.gsc-input::-webkit-input-placeholder{font-size:14px}input.gsc-input:-moz-placeholder{font-size:14px}input.gsc-input::-moz-placeholder{font-size:14px}input.gsc-input:-ms-input-placeholder{font-size:14px}input.gsc-input:focus::-webkit-input-placeholder{color:transparent}input.gsc-input:focus:-moz-placeholder{color:transparent}input.gsc-input:focus::-moz-placeholder{color:transparent}input.gsc-input:focus:-ms-input-placeholder{color:transparent}.gssb_c .gsc-completion-container{position:static}.gssb_c{z-index:5000}.gsc-completion-container table{background:transparent;font-size:inherit;font-family:inherit}.gssb_c > tbody > tr,.gssb_c > tbody > tr > td,.gssb_d,.gssb_d > tbody > tr,.gssb_d > tbody > tr > td,.gssb_e,.gssb_e > tbody > tr,.gssb_e > tbody > tr > td{padding:0;margin:0;border:0}.gssb_a table,.gssb_a table tr,.gssb_a table tr td{padding:0;margin:0;border:0}</style></head>
<body>

<div id="layout">
    <!-- Menu toggle -->
    <a href="https://openhome.cc/Gossip/CodeData/GuavaTutorial/Exception.html#menu" id="menuLink" class="menu-link">
        <!-- Hamburger icon --><span></span>
        
    </a>
    <div id="menu">
        <div class="pure-menu">
            <a class="pure-menu-heading" href="https://openhome.cc/Gossip/CodeData/GuavaTutorial/index.html">回 Guava Tutorial</a>
            <ul class="pure-menu-list">
                <br><div class="social" style="text-align: center;"><a href="http://twitter.com/caterpillar"><img title="Twitter" alt="Twitter" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/twitter.png"></a> <a href="http://www.facebook.com/openhome.cc"><img title="Facebook" alt="Facebook" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/facebook.png"></a> <a href="https://plus.google.com/+JustinSDK/"><img title="Google+" alt="Google+" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/google.png"></a></div><br><div id="search box"><script>(function() {var cx = 'partner-pub-9750319131714390:3926766884';var gcse = document.createElement('script');gcse.type = 'text/javascript';gcse.async = true;gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(gcse, s);})();</script><div id="___gcse_0"><div class="gsc-control-searchbox-only gsc-control-searchbox-only-zh_TW" dir="ltr"><form class="gsc-search-box" accept-charset="utf-8"><table cellspacing="0" cellpadding="0" class="gsc-search-box"><tbody><tr><td class="gsc-input"><input autocomplete="off" type="text" size="10" class=" gsc-input" name="search" title="搜尋" id="gsc-i-id1" x-webkit-speech="" x-webkit-grammar="builtin:search" lang="zh_TW" dir="ltr" spellcheck="false" placeholder="自訂搜尋" style="outline: none; background: url(&quot;https://www.google.com/cse/static/images/1x/googlelogo_lightgrey_46x16dp.png&quot;) left center no-repeat rgb(255, 255, 255); text-indent: 48px;"></td><td class="gsc-search-button"><input type="button" value="搜尋" class="gsc-search-button" title="搜尋"></td><td class="gsc-clear-button"><div class="gsc-clear-button" title="清除結果">&nbsp;</div></td></tr></tbody></table></form></div></div></div><br><div class="ad" style="text-align: center;"><script async="" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/adsbygoogle.js"></script>
<!-- 2015 新版型 160 x 600 廣告 -->
<ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="3747048883" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px;background-color:transparent;"><iframe width="160" height="600" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;width:160px;height:600px;" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/saved_resource.html"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
            </ul>
        </div>
    </div>

    <main id="main">
        <header class="header">
            <h1>【Guava 教學】（5）程式 90% 比率在管理與處理錯誤</h1>
        </header>

        <article class="content"><br><div class="ad-3" style="text-align: center;"><script async="" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins class="adsbygoogle" style="display: block; height: 90px;" data-ad-client="ca-pub-9750319131714390" data-ad-slot="7104125683" data-ad-format="auto" data-adsbygoogle-status="done"><ins id="aswift_2_expand" style="display:inline-table;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:800px;background-color:transparent;"><ins id="aswift_2_anchor" style="display:block;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:800px;background-color:transparent;"><iframe width="800" height="90" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_2" name="aswift_2" style="left:0;position:absolute;top:0;width:800px;height:90px;" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/saved_resource(1).html"></iframe></ins></ins></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div> 
            <br>
      這篇是要來談談 Guava 的 <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/base/Throwables.html">Throwables</a>，不過正如標題寫的，程式 90% 的比率在管理與處理錯誤，既然如此，那我們還是從頭來認識一些錯誤處理的基礎好了。<br>
      假設你有個提款方法原先是這麼寫的：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">boolean</span><span class="pln"> withdraw</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> money</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">money </span><span class="pun">&gt;=</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">balance </span><span class="pun">&gt;=</span><span class="pln"> money</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">balance </span><span class="pun">-=</span><span class="pln"> money</span><span class="pun">;</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    retrun </span><span class="kwd">false</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></code></pre>
      <code>withdraw</code> 在提款成功時會傳回 <code>true</code>，失敗時傳回 <code>false</code>，為了要確認提款是否成功，客戶端必須主動檢查傳回值，萬一忘記了，執行時也沒有任何機制可以主動通知客戶端，會有什麼結果無從得知。如果使用的是 Java，可以在執行不成功時拋出（throw）錯誤。例如：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> withdraw</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> money</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">Throwable</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">money </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">balance </span><span class="pun">&lt;</span><span class="pln"> money</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Throwable</span><span class="pun">(</span><span class="str">"提款失敗"</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">balance </span><span class="pun">-=</span><span class="pln"> money</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></code></pre>
      可以搭配 <code>throw</code> 語法的物件，必須是 <code>Throwable</code> 的實例，方法上可以使用 <code>throws</code> 聲明會有 <code>Throwable</code> 實例拋出，這會是方法簽署的一部份，如此客戶端只要查看文件，無需查閱原始碼，就知道該用 <code>try-catch</code> 語法處理，實際上編譯器也會強制客戶端必須處理。<br>
      不過，參數 <code>money</code> 似乎不應該傳入負數，這一開始就要規範，如果都規範好不準傳入負數，而客戶端還傳入負數，那一定是客戶端的 Bug，客戶端應該停下來修改他的程式；另外，餘額不足是商務上的邏輯考量，這是客戶端可以處理的錯誤，嗯！至少 Java 當初設計時是這麼想的啦！總之，應該可以將 <code>withdraw</code> 設計成：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> withdraw</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> money</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">money </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IllegalArgumentException</span><span class="pun">(</span><span class="str">"提款額不能傳入負數"</span><span class="pun">);</span><span class="pln">
    </span><span class="kwd">if</span><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">balance </span><span class="pun">&lt;</span><span class="pln"> money</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">Exception</span><span class="pun">(</span><span class="str">"餘額不足"</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">balance </span><span class="pun">-=</span><span class="pln"> money</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></code></pre>
      Java 為 <code>Throwable</code> 定義了兩個 <code>Error</code> 與 <code>Exception</code> 兩個子類別。<code>Error</code> 的實例是指那些發生了你也不能做什麼補救措施的錯誤，<code>Exception</code> 則是 Java 為那些能補救的錯誤而設計的類別，等等！為什麼 <code>IllegalArgumentException</code> 不用使用 <code>throws</code> 宣告在方法上？<br>
      前面講過，編譯器會強制客戶端要處理例外，除了那些 <code>RuntimeException</code> 及 <code>Error</code> 的實例之外。<code>Error</code> 可以理解，都歸類在不可能有補救措施的錯誤了，編譯器還強迫處理就沒有道理，至於 <code>RuntimeException</code>，則是用來通知客戶端他的程式有 Bug 了，才導致方法中會拋出例外，<code>IllegalArgumentException</code> 就是一種 <code>RuntimeException</code>。<br>
      其實學過 Java 的你一定知道，那些編譯器強制檢查的 <code>Exception</code> 叫 Checked Exception，那些編譯器不強制檢查的 <code>RuntimeException</code> 叫 Unchecked Exception。Java 當初想得很美好，也是唯一有 Checked Exception、Unchecked Exception 分別的語言，不過顯然開發者不領情的多，唔！篇幅有限，有興趣可以看看&nbsp;<a href="https://openhome.cc/Gossip/JavaEssence/CheckedException.html">貼心還是造成麻煩？</a> 這篇文章。<br>
      程式中可能會捕捉例外，對例外做些能做的處理，再重新拋出例外，像是 <a href="https://openhome.cc/Gossip/JavaEssence/CatchThrows.html">要抓還是要丟？</a> 中提到的，因此，像這樣的程式碼倒蠻常見的：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> doSomething</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pun">,</span><span class="pln"> </span><span class="typ">SQLException</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        someMethodThatCouldThrowAnything</span><span class="pun">();</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">IKnowWhatToDoWithThisException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        handle</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">SQLException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        log</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
        </span><span class="kwd">throw</span><span class="pln"> e</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">IOException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        log</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
        </span><span class="kwd">throw</span><span class="pln"> e</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">Throwable</span><span class="pln"> t</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        log</span><span class="pun">(</span><span class="pln">t</span><span class="pun">);</span><span class="pln">
        </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">RuntimeException</span><span class="pun">(</span><span class="pln">t</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">  
</span><span class="pun">}</span></code></pre>
      最後一個 <code>catch</code> 照單全收，防禦式地處理其他沒考量到的可能錯誤，因為方法上宣告會拋出 <code>IOExcepton</code> 與 <code>SQLException</code>，為了傳播 <code>Throwable</code> 實例，程式中將之包裹在 <code>RuntimeException</code> 中，編譯器會很高興地忽略它。不過 <code>catch</code> 了 <code>SQLException</code> 及 <code>IOException</code> 的兩個區塊程式碼重複了。如果你使用 JDK7，那可以用新語法改寫為：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> doSomething</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pun">,</span><span class="pln"> </span><span class="typ">SQLException</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        someMethodThatCouldThrowAnything</span><span class="pun">();</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">IKnowWhatToDoWithThisException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        handle</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">SQLException</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> </span><span class="typ">IOException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// JDK7 multi-catch 語法</span><span class="pln">
        log</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
        </span><span class="kwd">throw</span><span class="pln"> e</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">Throwable</span><span class="pln"> t</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        log</span><span class="pun">(</span><span class="pln">t</span><span class="pun">);</span><span class="pln">
        </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">RuntimeException</span><span class="pun">(</span><span class="pln">t</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">  
</span><span class="pun">}</span></code></pre>
      那麼如果是 JDK6 呢？可以使用 Guava 的 <code>Throwables</code> 來改寫為更簡潔的方式：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> doSomething</span><span class="pun">()</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">IOException</span><span class="pun">,</span><span class="pln"> </span><span class="typ">SQLException</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">try</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        someMethodThatCouldThrowAnything</span><span class="pun">();</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">IKnowWhatToDoWithThisException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        handle</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">Throwable</span><span class="pln"> t</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        log</span><span class="pun">(</span><span class="pln">t</span><span class="pun">);</span><span class="pln">
        </span><span class="typ">Throwables</span><span class="pun">.</span><span class="pln">propagateIfInstanceOf</span><span class="pun">(</span><span class="pln">t</span><span class="pun">,</span><span class="pln"> </span><span class="typ">IOException</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">);</span><span class="pln">
        </span><span class="typ">Throwables</span><span class="pun">.</span><span class="pln">propagateIfInstanceOf</span><span class="pun">(</span><span class="pln">t</span><span class="pun">,</span><span class="pln"> </span><span class="typ">SQLException</span><span class="pun">.</span><span class="kwd">class</span><span class="pun">);</span><span class="pln">
        </span><span class="kwd">throw</span><span class="pln"> </span><span class="typ">Throwables</span><span class="pun">.</span><span class="pln">propagate</span><span class="pun">(</span><span class="pln">t</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">  
</span><span class="pun">}</span></code></pre>
      <code>Throwables.propagateIfInstanceOf</code> 作了什麼事？其實就是將 <code>t</code> 轉型為指定的類型並重新拋出：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="pun">...</span><span class="pln">
  </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="pun">&lt;</span><span class="pln">X </span><span class="kwd">extends</span><span class="pln"> </span><span class="typ">Throwable</span><span class="pun">&gt;</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> propagateIfInstanceOf</span><span class="pun">(</span><span class="pln">
      </span><span class="lit">@Nullable</span><span class="pln"> </span><span class="typ">Throwable</span><span class="pln"> throwable</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Class</span><span class="pun">&lt;</span><span class="pln">X</span><span class="pun">&gt;</span><span class="pln"> declaredType</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">throws</span><span class="pln"> X </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">throwable </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pln"> </span><span class="pun">&amp;&amp;</span><span class="pln"> declaredType</span><span class="pun">.</span><span class="pln">isInstance</span><span class="pun">(</span><span class="pln">throwable</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">throw</span><span class="pln"> declaredType</span><span class="pun">.</span><span class="pln">cast</span><span class="pun">(</span><span class="pln">throwable</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">...</span></code></pre>
      而 <code>Throwables.propagate</code> 就是將傳入的 <code>t</code> 包裹為 <code>RuntimeException</code> 傳回罷了：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="pun">...</span><span class="pln">
  </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">RuntimeException</span><span class="pln"> propagate</span><span class="pun">(</span><span class="typ">Throwable</span><span class="pln"> throwable</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    propagateIfPossible</span><span class="pun">(</span><span class="pln">checkNotNull</span><span class="pun">(</span><span class="pln">throwable</span><span class="pun">));</span><span class="pln">
    </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">RuntimeException</span><span class="pun">(</span><span class="pln">throwable</span><span class="pun">);</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">
</span><span class="pun">...</span></code></pre>
      Guava 的 <code>Throwables</code> 使用上很簡單，你可以再看看&nbsp;<a href="https://code.google.com/p/guava-libraries/wiki/ThrowablesExplained">ThrowablesExplained</a> &nbsp;的說明，應該就清楚多了。<br>
      我這邊想再多談一下 JDK7 的 multi-catch，在 multi-catch 時，<code>catch</code> 中的例外型態，不能有上下繼承關係，有沒有想過為什麼呢？<code>catch(IOException | FileNotFoundException e)</code> 或許還可以理解，因為展開為不使用 multi-catch 的寫法的話會變成：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="pun">...</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">IOException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    handle</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">FileNotFoundException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    handle</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="pun">...</span></code></pre>
      只是為什麼 <code>catch(FileNotFoundException | IOException e) 也不行呢？想想看如果不用 multi-catch 的寫法的話會如何？</code>
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="pun">...</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">FileNotFoundException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    handle</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">IOException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    handle</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="pun">...</span></code></pre>
      好像合理耶！其實是因為，還沒使用 multi-catch 前的寫法本來就沒必要，想想你在 <code>FileNotFoundException</code> 與 <code>IOException</code> 的處理本來就相同，那為什麼不直接寫成以下就好？
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="pun">...</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">IOException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    handle</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="pun">...</span></code></pre>
      你知道，Java 的編譯器蠻雞婆的，因此在 <code>catch(FileNotFoundException | IOException e)</code> 時就不讓你過關了。還有一個情況是，有人想在 multi-catch 後，使用 <code>instanceof</code> 判斷是不是某個特定例外型態之實例，像是：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="pun">...</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> </span><span class="typ">SQLException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">e </span><span class="kwd">instanceof</span><span class="pln"> </span><span class="typ">FileNotFoundException</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        doSomethingWhenFileNotFoundException</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    handle</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="pun">...</span></code></pre>
      這完全是不建議，multi-catch 本來就是讓你可以整理相同的例外處理程式碼，如果你用了 <code>instanceof</code> 針對特定型態做特定處理，就表示這個型態不該待在 multi-catch 中，也就是你沒用 multi-catch 的情況下，應該會像是：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="pun">...</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">FileNotFoundException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    doSomethingWhenFileNotFoundException</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">IOException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    handle</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">SQLException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    handle</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="pun">...</span></code></pre>
      那麼用 multi-catch 整理後，應該要是這樣才對：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="pun">...</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">FileNotFoundException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    doSomethingWhenFileNotFoundException</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">catch</span><span class="pun">(</span><span class="typ">IOException</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> </span><span class="typ">SQLException</span><span class="pln"> e</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    handle</span><span class="pun">(</span><span class="pln">e</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">
</span><span class="pun">...</span></code></pre>
      這邊想表達的是，語法的簡便，其實只是讓你省去少打幾個字之類的麻煩，不過如果你不知道本質上該如何處理，那麼也是會發生濫用的情況。同樣地，Guava 的 <code>Throwables</code> 看來是省了一些功夫，不過也別亂用，&nbsp;<a href="https://code.google.com/p/guava-libraries/wiki/ThrowablesExplained">ThrowablesExplained</a>&nbsp;&nbsp;的說明中，有一些不建議的使用方式，建議你瞭解一下，看看原因，最終其實都是有關於，例外或錯誤該怎麼處理與對待的問題。<br><br><br><div class="ad336-280" style="text-align: center;"><script async="" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/adsbygoogle.js"></script><!-- 2015 新版型廣告 336 x 280 --><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="9976409681" data-adsbygoogle-status="done"><ins id="aswift_3_expand" style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent;"><ins id="aswift_3_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent;"><iframe width="336" height="280" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_3" name="aswift_3" style="left:0;position:absolute;top:0;width:336px;height:280px;" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/saved_resource(2).html"></iframe></ins></ins></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div><br><div class="recommend" style="text-align: center;"><hr><script async="" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/adsbygoogle.js"></script><!-- 自動大小回應相符內容 --><ins class="adsbygoogle" style="display: block; height: 480px;" data-ad-client="ca-pub-9750319131714390" data-ad-slot="4953478487" data-ad-format="autorelaxed" data-adsbygoogle-status="done"><ins id="aswift_4_expand" style="display:inline-table;border:none;height:480px;margin:0;padding:0;position:relative;visibility:visible;width:800px;background-color:transparent;"><ins id="aswift_4_anchor" style="display:block;border:none;height:480px;margin:0;padding:0;position:relative;visibility:visible;width:800px;background-color:transparent;"><iframe width="800" height="480" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_4" name="aswift_4" style="left:0;position:absolute;top:0;width:800px;height:480px;" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/saved_resource(3).html"></iframe></ins></ins></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div></article></main></div>
<script src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/ui.js"></script>

<div class="analytics">
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-143766-1', 'auto');
  ga('send', 'pageview');

</script>
</div>
<ins class="adsbygoogle" data-adsbygoogle-status="done" style="display: none;"><ins id="aswift_0_expand" style="display:inline-table;border:none;height:NaNpx;margin:0;padding:0;position:relative;visibility:visible;width:NaNpx;background-color:transparent;"><ins id="aswift_0_anchor" style="display:block;border:none;height:NaNpx;margin:0;padding:0;position:relative;visibility:visible;width:NaNpx;background-color:transparent;"><iframe frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;width:NaNpx;height:NaNpx;" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/saved_resource(4).html"></iframe></ins></ins></ins><script id="wappalyzer" src="chrome-extension://gppongmhjkpfnbhagpmjfkannfbllamg/js/inject.js"></script><iframe id="google_osd_static_frame_2463753264043" name="google_osd_static_frame" style="display: none; width: 0px; height: 0px;" src="./【Guava 教學】（5）程式 90% 比率在管理與處理錯誤_files/saved_resource(5).html"></iframe><table cellspacing="0" cellpadding="0" class="gstl_50 gssb_c" style="width: 122px; display: none; top: 148px; left: 0px; position: absolute;"><tbody><tr><td class="gssb_f"></td><td class="gssb_e" style="width: 100%;"></td></tr></tbody></table></body></html>