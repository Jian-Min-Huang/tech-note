<!DOCTYPE html>
<!-- saved from url=(0064)https://openhome.cc/Gossip/CodeData/GuavaTutorial/Condition.html -->
<html lang="zh-tw"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="【Guava 教學】（1）從避免使用 null 開始 &lt;&lt; 前情
      
      有多少次了呢？你總會對傳入的引數作一些檢查，像是某個管理物件的容器，你也許會有個 ...">

<meta property="og:locale" content="zh_TW">
<meta property="og:title" content="【Guava 教學】（2）命名明確的條件檢查">
<meta property="og:type" content="article">
<meta property="og:url" content="https://openhome.cc/Gossip/CodeData/GuavaTutorial/Condition.html">
<meta property="og:image" content="https://openhome.cc/Gossip/images/caterpillar_small.jpg">
<meta property="og:site_name" content="OPENHOME.CC">
<meta property="og:description" content="【Guava 教學】（1）從避免使用 null 開始 &lt;&lt; 前情
      
      有多少次了呢？你總會對傳入的引數作一些檢查，像是某個管理物件的容器，你也許會有個 ...">


    <title>【Guava 教學】（2）命名明確的條件檢查</title>

<link rel="stylesheet" href="./【Guava 教學】（2）命名明確的條件檢查_files/pure-min.css">

    <!--[if lte IE 8]>
        <link rel="stylesheet" href="../../css/layouts/side-menu-old-ie.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
        <link rel="stylesheet" href="./【Guava 教學】（2）命名明確的條件檢查_files/side-menu.css">
    <!--<![endif]-->
  

     <link rel="stylesheet" href="./【Guava 教學】（2）命名明確的條件檢查_files/caterpillar.css">
     <script async="" src="./【Guava 教學】（2）命名明確的條件檢查_files/async-ads.js"></script><script src="./【Guava 教學】（2）命名明確的條件檢查_files/ca-pub-9750319131714390.js"></script><script async="" src="./【Guava 教學】（2）命名明確的條件檢查_files/analytics.js"></script><script type="text/javascript" async="" src="./【Guava 教學】（2）命名明確的條件檢查_files/cse.js"></script>
<!-- 網頁層級廣告 --><script async="" src="./【Guava 教學】（2）命名明確的條件檢查_files/adsbygoogle.js"></script><script>(adsbygoogle =window.adsbygoogle || []).push({google_ad_client: "ca-pub-9750319131714390",enable_page_level_ads: true });</script><link rel="stylesheet" type="text/css" href="./【Guava 教學】（2）命名明確的條件檢查_files/prettify.css"><link rel="preload" href="./【Guava 教學】（2）命名明確的條件檢查_files/integrator.js" as="script"><script type="text/javascript" src="./【Guava 教學】（2）命名明確的條件檢查_files/integrator.js"></script><link rel="preload" href="./【Guava 教學】（2）命名明確的條件檢查_files/integrator(1).js" as="script"><script type="text/javascript" src="./【Guava 教學】（2）命名明確的條件檢查_files/integrator(1).js"></script><script src="./【Guava 教學】（2）命名明確的條件檢查_files/jsapi" type="text/javascript"></script><link type="text/css" href="./【Guava 教學】（2）命名明確的條件檢查_files/default+zh_TW.css" rel="stylesheet"><link type="text/css" href="./【Guava 教學】（2）命名明確的條件檢查_files/default.css" rel="stylesheet"><script type="text/javascript" src="./【Guava 教學】（2）命名明確的條件檢查_files/default+zh_TW.I.js"></script><style type="text/css">.gsc-control-cse{font-family:Arial, sans-serif;border-color:#FFFFFF;background-color:#FFFFFF}.gsc-control-cse .gsc-table-result{font-family:Arial, sans-serif}input.gsc-input{border-color:#BCCDF0}input.gsc-search-button{border-color:#666666;background-color:#CECECE}.gsc-tabHeader.gsc-tabhInactive{border-color:#E9E9E9;background-color:#E9E9E9}.gsc-tabHeader.gsc-tabhActive{border-top-color:#FF9900;border-left-color:#E9E9E9;border-right-color:#E9E9E9;background-color:#FFFFFF}.gsc-tabsArea{border-color:#E9E9E9;}.gsc-webResult.gsc-result,.gsc-results .gsc-imageResult{border-color:#336699;background-color:#FFFFFF}.gsc-webResult.gsc-result:hover,.gsc-imageResult:hover{border-color:#0000CC;background-color:#FFFFFF}.gsc-webResult.gsc-result.gsc-promotion:hover{border-color:#0000CC;background-color:#FFFFFF}.gs-webResult.gs-result a.gs-title:link,.gs-webResult.gs-result a.gs-title:link b,.gs-imageResult a.gs-title:link,.gs-imageResult a.gs-title:link b{color:#0000FF}.gs-webResult.gs-result a.gs-title:visited,.gs-webResult.gs-result a.gs-title:visited b,.gs-imageResult a.gs-title:visited,.gs-imageResult a.gs-title:visited b{color:#663399}.gs-webResult.gs-result a.gs-title:hover,.gs-webResult.gs-result a.gs-title:hover b,.gs-imageResult a.gs-title:hover,.gs-imageResult a.gs-title:hover b{color:#0000CC}.gs-webResult.gs-result a.gs-title:active,.gs-webResult.gs-result a.gs-title:active b,.gs-imageResult a.gs-title:active,.gs-imageResult a.gs-title:active b{color:#0000CC}.gsc-cursor-page{color:#0000FF}a.gsc-trailing-more-results:link{color:#0000FF}.gs-webResult .gs-snippet,.gs-imageResult .gs-snippet,.gs-fileFormatType{color:#000000}.gs-webResult div.gs-visibleUrl,.gs-imageResult div.gs-visibleUrl{color:#008000}.gs-webResult div.gs-visibleUrl-short{color:#008000}.gs-webResult div.gs-visibleUrl-short{display:none}.gs-webResult div.gs-visibleUrl-long{display:block}.gs-promotion div.gs-visibleUrl-short{display:none}.gs-promotion div.gs-visibleUrl-long{display:block}.gsc-cursor-box{border-color:#336699}.gsc-results .gsc-cursor-box .gsc-cursor-page{border-color:#E9E9E9;background-color:#FFFFFF;color:#0000FF}.gsc-results .gsc-cursor-box .gsc-cursor-current-page{border-color:#FF9900;background-color:#FFFFFF;color:#663399}.gsc-webResult.gsc-result.gsc-promotion{border-color:#336699;background-color:#FFFFFF}.gsc-completion-title{color:#0000FF}.gsc-completion-snippet{color:#000000}.gs-promotion a.gs-title:link,.gs-promotion a.gs-title:link *,.gs-promotion .gs-snippet a:link{color:#0000FF}.gs-promotion a.gs-title:visited,.gs-promotion a.gs-title:visited *,.gs-promotion .gs-snippet a:visited{color:#663399}.gs-promotion a.gs-title:hover,.gs-promotion a.gs-title:hover *,.gs-promotion .gs-snippet a:hover{color:#0000FF}.gs-promotion a.gs-title:active,.gs-promotion a.gs-title:active *,.gs-promotion .gs-snippet a:active{color:#0000FF}.gs-promotion .gs-snippet,.gs-promotion .gs-title .gs-promotion-title-right,.gs-promotion .gs-title .gs-promotion-title-right *{color:#000000}.gs-promotion .gs-visibleUrl,.gs-promotion .gs-visibleUrl-short{color:#008000}</style><style type="text/css">.gscb_a{display:inline-block;font:27px/13px arial,sans-serif}.gsst_a .gscb_a{color:#a1b9ed;cursor:pointer}.gsst_a:hover .gscb_a,.gsst_a:focus .gscb_a{color:#36c}.gsst_a{display:inline-block}.gsst_a{cursor:pointer;padding:0 4px}.gsst_a:hover{text-decoration:none!important}.gsst_b{font-size:16px;padding:0 2px;position:relative;user-select:none;-webkit-user-select:none;white-space:nowrap}.gsst_e{opacity:0.55;}.gsst_a:hover .gsst_e,.gsst_a:focus .gsst_e{opacity:0.72;}.gsst_a:active .gsst_e{opacity:1;}.gsst_f{background:white;text-align:left}.gsst_g{background-color:white;border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-webkit-box-shadow:0 2px 4px rgba(0,0,0,0.2);margin:-1px -3px;padding:0 6px}.gsst_h{background-color:white;height:1px;margin-bottom:-1px;position:relative;top:-1px}.gsib_a{width:100%;padding:4px 6px 0}.gsib_a,.gsib_b{vertical-align:top}.gssb_c{border:0;position:absolute;z-index:989}.gssb_e{border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-webkit-box-shadow:0 2px 4px rgba(0,0,0,0.2);cursor:default}.gssb_f{visibility:hidden;white-space:nowrap}.gssb_k{border:0;display:block;position:absolute;top:0;z-index:988}.gsdd_a{border:none!important}.gsq_a{padding:0}.gsq_a{padding:0}.gscsep_a{display:none}.gssb_a{padding:0 7px}.gssb_a,.gssb_a td{white-space:nowrap;overflow:hidden;line-height:22px}#gssb_b{font-size:11px;color:#36c;text-decoration:none}#gssb_b:hover{font-size:11px;color:#36c;text-decoration:underline}.gssb_g{text-align:center;padding:8px 0 7px;position:relative}.gssb_h{font-size:15px;height:28px;margin:0.2em;-webkit-appearance:button}.gssb_i{background:#eee}.gss_ifl{visibility:hidden;padding-left:5px}.gssb_i .gss_ifl{visibility:visible}a.gssb_j{font-size:13px;color:#36c;text-decoration:none;line-height:100%}a.gssb_j:hover{text-decoration:underline}.gssb_l{height:1px;background-color:#e5e5e5}.gssb_m{color:#000;background:#fff}.gsfe_a{border:1px solid #b9b9b9;border-top-color:#a0a0a0;box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);-moz-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);-webkit-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);}.gsfe_b{border:1px solid #4d90fe;outline:none;box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);-moz-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);-webkit-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);}.gssb_a{padding:0 7px}.gssb_e{border:0}.gssb_l{margin:5px 0}input.gsc-input::-webkit-input-placeholder{font-size:14px}input.gsc-input:-moz-placeholder{font-size:14px}input.gsc-input::-moz-placeholder{font-size:14px}input.gsc-input:-ms-input-placeholder{font-size:14px}input.gsc-input:focus::-webkit-input-placeholder{color:transparent}input.gsc-input:focus:-moz-placeholder{color:transparent}input.gsc-input:focus::-moz-placeholder{color:transparent}input.gsc-input:focus:-ms-input-placeholder{color:transparent}.gssb_c .gsc-completion-container{position:static}.gssb_c{z-index:5000}.gsc-completion-container table{background:transparent;font-size:inherit;font-family:inherit}.gssb_c > tbody > tr,.gssb_c > tbody > tr > td,.gssb_d,.gssb_d > tbody > tr,.gssb_d > tbody > tr > td,.gssb_e,.gssb_e > tbody > tr,.gssb_e > tbody > tr > td{padding:0;margin:0;border:0}.gssb_a table,.gssb_a table tr,.gssb_a table tr td{padding:0;margin:0;border:0}</style></head>
<body>

<div id="layout">
    <!-- Menu toggle -->
    <a href="https://openhome.cc/Gossip/CodeData/GuavaTutorial/Condition.html#menu" id="menuLink" class="menu-link">
        <!-- Hamburger icon --><span></span>
        
    </a>
    <div id="menu">
        <div class="pure-menu">
            <a class="pure-menu-heading" href="https://openhome.cc/Gossip/CodeData/GuavaTutorial/index.html">回 Guava Tutorial</a>
            <ul class="pure-menu-list">
                <br><div class="social" style="text-align: center;"><a href="http://twitter.com/caterpillar"><img title="Twitter" alt="Twitter" src="./【Guava 教學】（2）命名明確的條件檢查_files/twitter.png"></a> <a href="http://www.facebook.com/openhome.cc"><img title="Facebook" alt="Facebook" src="./【Guava 教學】（2）命名明確的條件檢查_files/facebook.png"></a> <a href="https://plus.google.com/+JustinSDK/"><img title="Google+" alt="Google+" src="./【Guava 教學】（2）命名明確的條件檢查_files/google.png"></a></div><br><div id="search box"><script>(function() {var cx = 'partner-pub-9750319131714390:3926766884';var gcse = document.createElement('script');gcse.type = 'text/javascript';gcse.async = true;gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(gcse, s);})();</script><div id="___gcse_0"><div class="gsc-control-searchbox-only gsc-control-searchbox-only-zh_TW" dir="ltr"><form class="gsc-search-box" accept-charset="utf-8"><table cellspacing="0" cellpadding="0" class="gsc-search-box"><tbody><tr><td class="gsc-input"><input autocomplete="off" type="text" size="10" class=" gsc-input" name="search" title="搜尋" id="gsc-i-id1" x-webkit-speech="" x-webkit-grammar="builtin:search" lang="zh_TW" dir="ltr" spellcheck="false" placeholder="自訂搜尋" style="outline: none; background: url(&quot;https://www.google.com/cse/static/images/1x/googlelogo_lightgrey_46x16dp.png&quot;) left center no-repeat rgb(255, 255, 255); text-indent: 48px;"></td><td class="gsc-search-button"><input type="button" value="搜尋" class="gsc-search-button" title="搜尋"></td><td class="gsc-clear-button"><div class="gsc-clear-button" title="清除結果">&nbsp;</div></td></tr></tbody></table></form></div></div></div><br><div class="ad" style="text-align: center;"><script async="" src="./【Guava 教學】（2）命名明確的條件檢查_files/adsbygoogle.js"></script>
<!-- 2015 新版型 160 x 600 廣告 -->
<ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="3747048883" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px;background-color:transparent;"><iframe width="160" height="600" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;width:160px;height:600px;" src="./【Guava 教學】（2）命名明確的條件檢查_files/saved_resource.html"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
            </ul>
        </div>
    </div>

    <main id="main">
        <header class="header">
            <h1>【Guava 教學】（2）命名明確的條件檢查</h1>
        </header>

        <article class="content"><br><div class="ad-3" style="text-align: center;"><script async="" src="./【Guava 教學】（2）命名明確的條件檢查_files/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins class="adsbygoogle" style="display: block; height: 90px;" data-ad-client="ca-pub-9750319131714390" data-ad-slot="7104125683" data-ad-format="auto" data-adsbygoogle-status="done"><ins id="aswift_2_expand" style="display:inline-table;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:800px;background-color:transparent;"><ins id="aswift_2_anchor" style="display:block;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:800px;background-color:transparent;"><iframe width="800" height="90" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_2" name="aswift_2" style="left:0;position:absolute;top:0;width:800px;height:90px;" src="./【Guava 教學】（2）命名明確的條件檢查_files/saved_resource(1).html"></iframe></ins></ins></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div> 
             
      <br>
      有多少次了呢？你總會對傳入的引數作一些檢查，像是某個管理物件的容器，你也許會有個 <code>add</code> 方法，可將傳入的 <code>List</code> 中元素逐一收納，你不希望傳入 <code>null</code>，或者傳入的 <code>List</code> 是空的…
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> add</span><span class="pun">(</span><span class="typ">List</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> lt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">lt </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IllegalArgumentException</span><span class="pun">(</span><span class="str">"不能傳入 null"</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">lt</span><span class="pun">.</span><span class="pln">isEmpty</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IllegalArgumentException</span><span class="pun">(</span><span class="str">"List 不能是空"</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="com">// 繼續辦事...</span><span class="pln">
</span><span class="pun">}</span></code></pre>
      每次都得為了做這類的檢查而撰寫類似程式碼的話，為什麼不把它封裝起來呢？像是寫個 <code>checkArgument</code>：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> checkArgument</span><span class="pun">(</span><span class="kwd">boolean</span><span class="pln"> expression</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Object</span><span class="pln"> errorMessage</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">expression</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IllegalArgumentException</span><span class="pun">(</span><span class="pln">errorMessage</span><span class="pun">.</span><span class="pln">toString</span><span class="pun">());</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span></code></pre>
      那麼你原本的方法就可以修改為：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> add</span><span class="pun">(</span><span class="typ">List</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> lt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    checkArgument</span><span class="pun">(</span><span class="pln">lt </span><span class="pun">!=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">,</span><span class="pln"> </span><span class="str">"不能傳入 null"</span><span class="pun">);</span><span class="pln">
    checkArgument</span><span class="pun">(!</span><span class="pln">lt</span><span class="pun">.</span><span class="pln">isEmpty</span><span class="pun">(),</span><span class="pln"> </span><span class="str">"List 不能是空"</span><span class="pun">);</span><span class="pln">
    </span><span class="com">// 繼續辦事...</span><span class="pln">
</span><span class="pun">}</span></code></pre>
      看來不錯，那為什麼不用 <code>assert</code> 呢？當然，我們可以用 <code>assert</code>，不過 <code>assert</code> 可以被停用，但這不是不使用 <code>assert</code> 的真正理由，真正的理由是為了「可讀性」，無論如何，使用 <code>checkArgument</code> 這樣的名稱，我們可以一目瞭然地知道，這是在檢查傳入引數，使用 <code>assert</code> 的話，總是要稍微想一下。<br>
      在 Guava 中對這類前置檢查的工作，實際上在 <code>com.google.common.base.Preconditions</code> 上提供了一些公用方法可以使用，為了方便，建議你使用 <code>import static com.google.common.base.Preconditions.*</code>，這樣你就可以不用使用 <code>Preconditions</code> 作為前置。事實上，如果你正在使用 Guava，那麼上面的方法最好還可以修改為以下內容：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> add</span><span class="pun">(</span><span class="typ">List</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> lt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    checkNotNull</span><span class="pun">(</span><span class="pln">lt</span><span class="pun">,</span><span class="pln"> </span><span class="str">"不能傳入 null"</span><span class="pun">);</span><span class="pln">
    checkArgument</span><span class="pun">(!</span><span class="pln">lt</span><span class="pun">.</span><span class="pln">isEmpty</span><span class="pun">(),</span><span class="pln"> </span><span class="str">"List 不能是空"</span><span class="pun">);</span><span class="pln">
    </span><span class="com">// 繼續辦事...</span><span class="pln">
</span><span class="pun">}</span></code></pre>
      這就是 Bob 大叔在《Clean Code》中一直強調的概念「有意義的命名（Meaningful Names）」，只要有助於可讀性，流程中某個區塊都可以使用函式並「使用具描述能力的名稱（Use Descriptive Names）」來取代。比方說，如果某個方法要檢查物件內部狀態：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> doSome</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">container</span><span class="pun">.</span><span class="pln">size</span><span class="pun">()</span><span class="pln"> </span><span class="pun">&gt;</span><span class="pln"> </span><span class="lit">100</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IllegalStateException</span><span class="pun">(</span><span class="str">"超過負載"</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="com">// 繼續辦事...</span><span class="pln">
</span><span class="pun">}</span></code></pre>
      那麼可以直接使用 Guava 的 <code>checkState</code> 方法來修改為：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> doSome</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    checkState</span><span class="pun">(</span><span class="pln">container</span><span class="pun">.</span><span class="pln">size</span><span class="pun">()</span><span class="pln"> </span><span class="pun">&lt;=</span><span class="pln"> </span><span class="lit">100</span><span class="pun">,</span><span class="pln"> </span><span class="str">"超過負載"</span><span class="pun">);</span><span class="pln">
    </span><span class="com">// 繼續辦事...</span><span class="pln">
</span><span class="pun">}</span></code></pre>
      乍看 <code>checkArgument</code> 與 <code>checkState</code> 感覺會有點像，是的！如果你只使用 <code>assert</code> 的話，基本上都是給個判斷條件，然後在不成立時產生錯誤。使用 <code>checkArgument</code> 與 <code>checkState</code> 的差別除了一個會丟出 <code>IllegalArgumentException</code>，一個是丟出 <code>IllegalStateException</code> 之外，最主要的是在語義差別，<code>checkArgument</code> 名稱表明這個方法是用於檢查引數，而 <code>checkState</code> 名稱表明，這個方法是用於檢查物件的狀態。<br>
      把語義清晰納入考量的話，你會怎麼修改這段程式碼呢？
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">public</span><span class="pln"> T </span><span class="kwd">get</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> index</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">index </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IllegalArgumentException</span><span class="pun">(</span><span class="str">"索引不得小於 0"</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">index </span><span class="pun">&gt;=</span><span class="pln"> container</span><span class="pun">.</span><span class="pln">size</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IllegalArgumentException</span><span class="pun">(</span><span class="str">"索引超出範圍"</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="com">// 繼續辦事...</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">...;</span><span class="pln">
</span><span class="pun">}</span></code></pre>
      用 <code>checkArgument</code>？
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">public</span><span class="pln"> T </span><span class="kwd">get</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> index</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    checkArgument</span><span class="pun">(</span><span class="pln">index </span><span class="pun">&gt;=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">,</span><span class="pln"> </span><span class="str">"索引不得小於 0"</span><span class="pun">);</span><span class="pln">
    checkArgument</span><span class="pun">(</span><span class="pln">index </span><span class="pun">&lt;</span><span class="pln"> container</span><span class="pun">.</span><span class="pln">size</span><span class="pun">(),</span><span class="pln"> </span><span class="str">"索引超出範圍"</span><span class="pun">);</span><span class="pln">
    </span><span class="com">// 繼續辦事...</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">...;</span><span class="pln">
</span><span class="pun">}</span></code></pre>
      還不錯！不過如果可以更明確地丟出 <code>IndexOutOfBoundsException</code> 的話，會比拋出 <code>IllegalArgumentException</code> 好些。由於檢查索引是很常見的需求，像是檢查 <code>Collection</code>、<code>String</code>、陣列等等，Guava 提供了 <code>checkElementIndex</code> 方法，你可以告訴它索引，以及要被存取的容器之大小。
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">public</span><span class="pln"> T </span><span class="kwd">get</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> index</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    checkElementIndex</span><span class="pun">(</span><span class="pln">index</span><span class="pun">,</span><span class="pln"> container</span><span class="pun">.</span><span class="pln">size</span><span class="pun">());</span><span class="pln">
    </span><span class="com">// 繼續辦事...</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">...;</span><span class="pln">
</span><span class="pun">}</span></code></pre>
      至於 <code>checkElementIndex</code> 會做什麼事，我想，直接看看它的原始碼就可以瞭解了：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="pln">  </span><span class="pun">...</span><span class="pln">

  </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> checkElementIndex</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> index</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> size</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> checkElementIndex</span><span class="pun">(</span><span class="pln">index</span><span class="pun">,</span><span class="pln"> size</span><span class="pun">,</span><span class="pln"> </span><span class="str">"index"</span><span class="pun">);</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> checkElementIndex</span><span class="pun">(</span><span class="pln">
      </span><span class="kwd">int</span><span class="pln"> index</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> size</span><span class="pun">,</span><span class="pln"> </span><span class="lit">@Nullable</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> desc</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="com">// Carefully optimized for execution by hotspot (explanatory comment above)</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">index </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> index </span><span class="pun">&gt;=</span><span class="pln"> size</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IndexOutOfBoundsException</span><span class="pun">(</span><span class="pln">badElementIndex</span><span class="pun">(</span><span class="pln">index</span><span class="pun">,</span><span class="pln"> size</span><span class="pun">,</span><span class="pln"> desc</span><span class="pun">));</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> index</span><span class="pun">;</span><span class="pln">
  </span><span class="pun">}</span><span class="pln">

  </span><span class="kwd">private</span><span class="pln"> </span><span class="kwd">static</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> badElementIndex</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> index</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> size</span><span class="pun">,</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> desc</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">index </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">return</span><span class="pln"> format</span><span class="pun">(</span><span class="str">"%s (%s) must not be negative"</span><span class="pun">,</span><span class="pln"> desc</span><span class="pun">,</span><span class="pln"> index</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">size </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IllegalArgumentException</span><span class="pun">(</span><span class="str">"negative size: "</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> size</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="com">// index &gt;= size</span><span class="pln">
      </span><span class="kwd">return</span><span class="pln"> format</span><span class="pun">(</span><span class="str">"%s (%s) must be less than size (%s)"</span><span class="pun">,</span><span class="pln"> desc</span><span class="pun">,</span><span class="pln"> index</span><span class="pun">,</span><span class="pln"> size</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">}</span></code></pre>
      與 <code>checkElementIndex</code> 類似的另一方法是 <code>checkPositionIndex</code>，後者在指定的索引大於 <code>size</code> 時才會丟出例外。那麼如果想檢查一段範圍呢？例如若原本有這樣一段程式碼：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">public</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> slice</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> start</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> </span><span class="kwd">end</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   </span><span class="kwd">if</span><span class="pun">(</span><span class="pln">start </span><span class="pun">&lt;</span><span class="pln"> </span><span class="lit">0</span><span class="pln"> </span><span class="pun">||</span><span class="pln"> </span><span class="kwd">end</span><span class="pln"> </span><span class="pun">&lt;</span><span class="pln"> start </span><span class="pun">||</span><span class="pln"> </span><span class="kwd">end</span><span class="pln"> </span><span class="pun">&gt;</span><span class="pln"> container</span><span class="pun">.</span><span class="pln">size</span><span class="pun">())</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">throw</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">IllegalArgumentException</span><span class="pun">(</span><span class="str">"索引超出範圍"</span><span class="pun">);</span><span class="pln">
   </span><span class="pun">}</span><span class="pln">        
   </span><span class="com">// 繼續辦事...</span><span class="pln">
   </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></code></pre>
      那麼就可以使用 Guava 提供的 <code>checkPositionIndexes</code> 改為：
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">public</span><span class="pln"> </span><span class="typ">List</span><span class="pun">&lt;</span><span class="pln">T</span><span class="pun">&gt;</span><span class="pln"> slice</span><span class="pun">(</span><span class="kwd">int</span><span class="pln"> start</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">int</span><span class="pln"> </span><span class="kwd">end</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   checkPositionIndexes</span><span class="pun">(</span><span class="pln">start</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">end</span><span class="pun">,</span><span class="pln"> container</span><span class="pun">.</span><span class="pln">size</span><span class="pun">());</span><span class="pln"> 
   </span><span class="com">// 繼續辦事...</span><span class="pln">
   </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
</span><span class="pun">}</span></code></pre>
      有時候，<code>if</code> 中的檢查如果太多，其實就建議用個 <code>isXxx</code> 方法將之封裝起來。當然，你不一定要用 Guava 的 <code>Preconditions</code>，我想 Guava 中存在這玩意的目的，或許也在提醒開發者，對某些檢查情況，或者說對某些功能來說，使用個明確、具描述性的函式，會對程式碼的可讀性有所幫助。<br><br><br><div class="ad336-280" style="text-align: center;"><script async="" src="./【Guava 教學】（2）命名明確的條件檢查_files/adsbygoogle.js"></script><!-- 2015 新版型廣告 336 x 280 --><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="9976409681" data-adsbygoogle-status="done"><ins id="aswift_3_expand" style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent;"><ins id="aswift_3_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent;"><iframe width="336" height="280" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_3" name="aswift_3" style="left:0;position:absolute;top:0;width:336px;height:280px;" src="./【Guava 教學】（2）命名明確的條件檢查_files/saved_resource(2).html"></iframe></ins></ins></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div><br><div class="recommend" style="text-align: center;"><hr><script async="" src="./【Guava 教學】（2）命名明確的條件檢查_files/adsbygoogle.js"></script><!-- 自動大小回應相符內容 --><ins class="adsbygoogle" style="display: block; height: 480px;" data-ad-client="ca-pub-9750319131714390" data-ad-slot="4953478487" data-ad-format="autorelaxed" data-adsbygoogle-status="done"><ins id="aswift_4_expand" style="display:inline-table;border:none;height:480px;margin:0;padding:0;position:relative;visibility:visible;width:800px;background-color:transparent;"><ins id="aswift_4_anchor" style="display:block;border:none;height:480px;margin:0;padding:0;position:relative;visibility:visible;width:800px;background-color:transparent;"><iframe width="800" height="480" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_4" name="aswift_4" style="left:0;position:absolute;top:0;width:800px;height:480px;" src="./【Guava 教學】（2）命名明確的條件檢查_files/saved_resource(3).html"></iframe></ins></ins></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div></article></main></div>
<script src="./【Guava 教學】（2）命名明確的條件檢查_files/ui.js"></script>

<div class="analytics">
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-143766-1', 'auto');
  ga('send', 'pageview');

</script>
</div>
<ins class="adsbygoogle" data-adsbygoogle-status="done" style="display: none;"><ins id="aswift_0_expand" style="display:inline-table;border:none;height:NaNpx;margin:0;padding:0;position:relative;visibility:visible;width:NaNpx;background-color:transparent;"><ins id="aswift_0_anchor" style="display:block;border:none;height:NaNpx;margin:0;padding:0;position:relative;visibility:visible;width:NaNpx;background-color:transparent;"><iframe frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;width:NaNpx;height:NaNpx;" src="./【Guava 教學】（2）命名明確的條件檢查_files/saved_resource(4).html"></iframe></ins></ins></ins><script id="wappalyzer" src="chrome-extension://gppongmhjkpfnbhagpmjfkannfbllamg/js/inject.js"></script><table cellspacing="0" cellpadding="0" class="gstl_50 gssb_c" style="width: 122px; display: none; top: 148px; left: 0px; position: absolute;"><tbody><tr><td class="gssb_f"></td><td class="gssb_e" style="width: 100%;"></td></tr></tbody></table></body></html>