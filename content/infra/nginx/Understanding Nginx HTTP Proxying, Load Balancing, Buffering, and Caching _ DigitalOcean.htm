<!DOCTYPE html>
<!-- saved from url=(0148)https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching#general-proxying-information -->
<html lang="en" class="wf-proximanova-n6-inactive wf-proximanova-n4-inactive wf-proximanova-i4-inactive wf-proximanova-n3-inactive wf-inactive" style=""><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching | DigitalOcean</title>

<meta name="description" content="Nginx is a high performance reverse proxy server and web server. In this guide, we will explore Nginx&#39;s http proxying and load balancing capabilities. We will cover how Nginx can use buffers and caching to improve the proxying experience for clients.">
<meta name="keywords" content="Load Balancing Caching Scaling Nginx">

<meta name="og:title" content="Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching | DigitalOcean">
<meta name="og:description" content="Nginx is a high performance reverse proxy server and web server. In this guide, we will explore Nginx&#39;s http proxying and load balancing capabilities. We will cover how Nginx can use buffers and caching to improve the proxying experience for clients.">
<meta name="og:site_name" content="DigitalOcean">
<meta name="og:type" content="article">

<meta name="twitter:site" content="DigitalOcean">
<meta name="twitter:title" content="Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching | DigitalOcean">
<meta name="twitter:description" content="Nginx is a high performance reverse proxy server and web server. In this guide, we will explore Nginx&#39;s http proxying and load balancing capabilities. We will cover how Nginx can use buffers and caching to improve the proxying experience for clients.">
<meta name="twitter:creator" content="DigitalOcean">
<meta name="twitter:card" content="photo">
<meta name="twitter:url" content="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching">

<meta property="og:image" content="https://community-cdn-digitalocean-com.global.ssl.fastly.net/assets/tutorials/images/large/NGINX_tw.png?1426699777">
<meta name="twitter:image" content="https://community-cdn-digitalocean-com.global.ssl.fastly.net/assets/tutorials/images/large/NGINX_tw.png?1426699777">

  <link rel="canonical" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching">


    <link rel="stylesheet" media="all" href="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/application-a2cee2dda4908f423a67f86a1f36e49d.css">

    
    <meta name="csrf-param" content="authenticity_token">
<meta name="csrf-token" content="ttp2LLjI4GxrlpsDgsNfs5vzTImfISYt2P/yfmPhV3BF+uOaDXcAQV8nEbdKfsq/7tli1CntjsN4QS4B0/w3ww==">
      <script type="text/javascript" async="" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/linkid.js"></script><script type="text/javascript" async="" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/munchkin.js"></script><script async="" id="demandbase_js_lib" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/014ab3bd.min.js"></script><script type="text/javascript" async="" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/analytics.js"></script><script async="" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/gtm.js"></script><script type="text/javascript" async="" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/analytics.min.js"></script><script src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/izu1uqu.js"></script>
      <style type="text/css">.tk-proxima-nova{font-family:"proxima-nova",sans-serif;}</style><style type="text/css">@font-face{font-family:tk-proxima-nova-n6;src:url(https://use.typekit.net/af/752410/00000000000000003b9ad1bb/27/l?subset_id=2&fvd=n6&v=3) format("woff2"),url(https://use.typekit.net/af/752410/00000000000000003b9ad1bb/27/d?subset_id=2&fvd=n6&v=3) format("woff"),url(https://use.typekit.net/af/752410/00000000000000003b9ad1bb/27/a?subset_id=2&fvd=n6&v=3) format("opentype");font-weight:600;font-style:normal;}@font-face{font-family:tk-proxima-nova-n4;src:url(https://use.typekit.net/af/a3ca77/00000000000000003b9ad1b9/27/l?subset_id=2&fvd=n4&v=3) format("woff2"),url(https://use.typekit.net/af/a3ca77/00000000000000003b9ad1b9/27/d?subset_id=2&fvd=n4&v=3) format("woff"),url(https://use.typekit.net/af/a3ca77/00000000000000003b9ad1b9/27/a?subset_id=2&fvd=n4&v=3) format("opentype");font-weight:400;font-style:normal;}@font-face{font-family:tk-proxima-nova-i4;src:url(https://use.typekit.net/af/98849f/00000000000000003b9ad1ba/27/l?subset_id=2&fvd=i4&v=3) format("woff2"),url(https://use.typekit.net/af/98849f/00000000000000003b9ad1ba/27/d?subset_id=2&fvd=i4&v=3) format("woff"),url(https://use.typekit.net/af/98849f/00000000000000003b9ad1ba/27/a?subset_id=2&fvd=i4&v=3) format("opentype");font-weight:400;font-style:italic;}@font-face{font-family:tk-proxima-nova-n3;src:url(https://use.typekit.net/af/0e059c/00000000000000003b9ad1b5/27/l?subset_id=2&fvd=n3&v=3) format("woff2"),url(https://use.typekit.net/af/0e059c/00000000000000003b9ad1b5/27/d?subset_id=2&fvd=n3&v=3) format("woff"),url(https://use.typekit.net/af/0e059c/00000000000000003b9ad1b5/27/a?subset_id=2&fvd=n3&v=3) format("opentype");font-weight:300;font-style:normal;}</style><script>try{Typekit.load({ async: true });}catch(e){}</script>
    <script src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/bugsnag-2.min.js" data-apikey="9ffc01bc3e1fa7891bfd20909d1bfb0e">
    </script>
    <!--<script src="//cdn.optimizely.com/js/701281621.js"></script>-->
    <script type="text/javascript">
      if(window.analytics=window.analytics||[],window.analytics.included)window.console&&console.error&&console.error("analytics.js included twice");else{window.analytics.included=!0,window.analytics.methods=["identify","group","track","page","pageview","alias","ready","on","once","off","trackLink","trackForm","trackClick","trackSubmit"],window.analytics.factory=function(a){return function(){var n=Array.prototype.slice.call(arguments);return n.unshift(a),window.analytics.push(n),window.analytics}};for(var i=0;i<window.analytics.methods.length;i++){var key=window.analytics.methods[i];window.analytics[key]=window.analytics.factory(key)}window.analytics.load=function(a){var n=document.createElement("script");n.type="text/javascript",n.async=!0,n.src=("https:"===document.location.protocol?"https://":"http://")+"cdn.segment.com/analytics.js/v1/"+a+"/analytics.min.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(n,t)},window.analytics.SNIPPET_VERSION="2.0.9",
      window.analytics.load("puo3uv968t")}
      window.analytics.page();
    </script>
    <meta name="viewport" content="initial-scale=1, maximum-scale=1">
    <link rel="alternate" type="application/rss+xml" title="RSS" href="https://www.digitalocean.com/community/tutorials/feed">
    <script src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/polyfill.min.js"></script>
    <script>
      window.comApp = {
        prefix: '/community',
        svgIconPath: 'https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg',
        railsEnv: 'production',
        rootUrl: 'https://www.digitalocean.com/community'
      };
    </script>
      <script src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/forms2.min.js"></script>

    <script src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/application-53f5f8a4487416e090c7a50e4caed16f.js"></script>
  <style>.fluidvids {width: 100%; max-width: 100%; position: relative;}.fluidvids-item {position: absolute; top: 0px; left: 0px; width: 100%; height: 100%;}</style><script id="twitter-wjs" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/widgets.js"></script><style type="text/css">@font-face{font-family:proxima-nova;src:url(https://use.typekit.net/af/752410/00000000000000003b9ad1bb/27/l?subset_id=2&fvd=n6&v=3) format("woff2"),url(https://use.typekit.net/af/752410/00000000000000003b9ad1bb/27/d?subset_id=2&fvd=n6&v=3) format("woff"),url(https://use.typekit.net/af/752410/00000000000000003b9ad1bb/27/a?subset_id=2&fvd=n6&v=3) format("opentype");font-weight:600;font-style:normal;}@font-face{font-family:proxima-nova;src:url(https://use.typekit.net/af/a3ca77/00000000000000003b9ad1b9/27/l?subset_id=2&fvd=n4&v=3) format("woff2"),url(https://use.typekit.net/af/a3ca77/00000000000000003b9ad1b9/27/d?subset_id=2&fvd=n4&v=3) format("woff"),url(https://use.typekit.net/af/a3ca77/00000000000000003b9ad1b9/27/a?subset_id=2&fvd=n4&v=3) format("opentype");font-weight:400;font-style:normal;}@font-face{font-family:proxima-nova;src:url(https://use.typekit.net/af/98849f/00000000000000003b9ad1ba/27/l?subset_id=2&fvd=i4&v=3) format("woff2"),url(https://use.typekit.net/af/98849f/00000000000000003b9ad1ba/27/d?subset_id=2&fvd=i4&v=3) format("woff"),url(https://use.typekit.net/af/98849f/00000000000000003b9ad1ba/27/a?subset_id=2&fvd=i4&v=3) format("opentype");font-weight:400;font-style:italic;}@font-face{font-family:proxima-nova;src:url(https://use.typekit.net/af/0e059c/00000000000000003b9ad1b5/27/l?subset_id=2&fvd=n3&v=3) format("woff2"),url(https://use.typekit.net/af/0e059c/00000000000000003b9ad1b5/27/d?subset_id=2&fvd=n3&v=3) format("woff"),url(https://use.typekit.net/af/0e059c/00000000000000003b9ad1b5/27/a?subset_id=2&fvd=n3&v=3) format("opentype");font-weight:300;font-style:normal;}</style><script id="facebook-jssdk" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/all.js"></script><link id="mktoForms2BaseStyle" rel="stylesheet" type="text/css" href="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/forms2.css"><link id="mktoForms2ThemeStyle" rel="stylesheet" type="text/css" href="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/forms2-theme-simple.css"><style type="text/css">.fb_hidden{position:absolute;top:-10000px;z-index:10001}.fb_reposition{overflow:hidden;position:relative}.fb_invisible{display:none}.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:"lucida grande", tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}.fb_reset>div{overflow:hidden}.fb_link img{border:none}@keyframes fb_transform{from{opacity:0;transform:scale(.95)}to{opacity:1;transform:scale(1)}}.fb_animate{animation:fb_transform .3s forwards}
.fb_dialog{background:rgba(82, 82, 82, .7);position:absolute;top:-10000px;z-index:10001}.fb_reset .fb_dialog_legacy{overflow:visible}.fb_dialog_advanced{padding:10px;-moz-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}.fb_dialog_content{background:#fff;color:#333}.fb_dialog_close_icon{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px}.fb_dialog_mobile .fb_dialog_close_icon{top:5px;left:5px;right:auto}.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}.fb_dialog_close_icon:hover{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent}.fb_dialog_close_icon:active{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent}.fb_dialog_loader{background-color:#f6f7f9;border:1px solid #606060;font-size:24px;padding:20px}.fb_dialog_top_left,.fb_dialog_top_right,.fb_dialog_bottom_left,.fb_dialog_bottom_right{height:10px;width:10px;overflow:hidden;position:absolute}.fb_dialog_top_left{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 0;left:-10px;top:-10px}.fb_dialog_top_right{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -10px;right:-10px;top:-10px}.fb_dialog_bottom_left{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -20px;bottom:-10px;left:-10px}.fb_dialog_bottom_right{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -30px;right:-10px;bottom:-10px}.fb_dialog_vert_left,.fb_dialog_vert_right,.fb_dialog_horiz_top,.fb_dialog_horiz_bottom{position:absolute;background:#525252;filter:alpha(opacity=70);opacity:.7}.fb_dialog_vert_left,.fb_dialog_vert_right{width:10px;height:100%}.fb_dialog_vert_left{margin-left:-10px}.fb_dialog_vert_right{right:0;margin-right:-10px}.fb_dialog_horiz_top,.fb_dialog_horiz_bottom{width:100%;height:10px}.fb_dialog_horiz_top{margin-top:-10px}.fb_dialog_horiz_bottom{bottom:0;margin-bottom:-10px}.fb_dialog_iframe{line-height:0}.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #365899;color:#fff;font-size:14px;font-weight:bold;margin:0}.fb_dialog_content .dialog_title>span{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yd/r/Cou7n-nqK52.gif) no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}body.fb_hidden{-webkit-transform:none;height:100%;margin:0;overflow:visible;position:absolute;top:-10000px;left:0;width:100%}.fb_dialog.fb_dialog_mobile.loading{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ya/r/3rhSv5V8j3o.gif) white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}.fb_dialog.fb_dialog_mobile.loading.centered{width:auto;height:auto;min-height:initial;min-width:initial;background:none}.fb_dialog.fb_dialog_mobile.loading.centered #fb_dialog_loader_spinner{width:100%}.fb_dialog.fb_dialog_mobile.loading.centered .fb_dialog_content{background:none}.loading.centered #fb_dialog_loader_close{color:#fff;display:block;padding-top:20px;clear:both;font-size:18px}#fb-root #fb_dialog_ipad_overlay{background:rgba(0, 0, 0, .45);position:absolute;bottom:0;left:0;right:0;top:0;width:100%;min-height:100%;z-index:10000}#fb-root #fb_dialog_ipad_overlay.hidden{display:none}.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}.fb_dialog_content .dialog_header{-webkit-box-shadow:white 0 1px 1px -1px inset;background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#738ABA), to(#2C4987));border-bottom:1px solid;border-color:#1d4088;color:#fff;font:14px Helvetica, sans-serif;font-weight:bold;text-overflow:ellipsis;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0;vertical-align:middle;white-space:nowrap}.fb_dialog_content .dialog_header table{-webkit-font-smoothing:subpixel-antialiased;height:43px;width:100%}.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px}.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px}.fb_dialog_content .touchable_button{background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#4966A6), color-stop(.5, #355492), to(#2A4887));border:1px solid #29487d;-webkit-background-clip:padding-box;-webkit-border-radius:3px;-webkit-box-shadow:rgba(0, 0, 0, .117188) 0 1px 1px inset, rgba(255, 255, 255, .167969) 0 1px 0;display:inline-block;margin-top:3px;max-width:85px;line-height:18px;padding:4px 12px;position:relative}.fb_dialog_content .dialog_header .touchable_button input{border:none;background:none;color:#fff;font:12px Helvetica, sans-serif;font-weight:bold;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}.fb_dialog_content .dialog_content{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #555;border-bottom:0;border-top:0;height:150px}.fb_dialog_content .dialog_footer{background:#f6f7f9;border:1px solid #555;border-top-color:#ccc;height:40px}#fb_dialog_loader_close{float:left}.fb_dialog.fb_dialog_mobile .fb_dialog_close_button{text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}#fb_dialog_loader_spinner{animation:rotateSpinner 1.2s linear infinite;background-color:transparent;background-image:url(https://static.xx.fbcdn.net/rsrc.php/v3/yD/r/t-wz8gw1xG1.png);background-repeat:no-repeat;background-position:50% 50%;height:24px;width:24px}@keyframes rotateSpinner{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}
.fb_iframe_widget{display:inline-block;position:relative}.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}.fb_iframe_widget iframe{position:absolute}.fb_iframe_widget_fluid_desktop,.fb_iframe_widget_fluid_desktop span,.fb_iframe_widget_fluid_desktop iframe{max-width:100%}.fb_iframe_widget_fluid_desktop iframe{min-width:220px;position:relative}.fb_iframe_widget_lift{z-index:1}.fb_hide_iframes iframe{position:relative;left:-10000px}.fb_iframe_widget_loader{position:relative;display:inline-block}.fb_iframe_widget_fluid{display:inline}.fb_iframe_widget_fluid span{width:100%}.fb_iframe_widget_loader iframe{min-height:32px;z-index:2;zoom:1}.fb_iframe_widget_loader .FB_Loader{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/y9/r/jKEcVPZFk-2.gif) no-repeat;height:32px;width:32px;margin-left:-16px;position:absolute;left:50%;z-index:4}</style><script type="text/javascript" async="" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/munchkin(1).js"></script></head>
  <body class="feature-filter-bar feature-upvotes tutorials-controller tutorial-single" data-env="production" data-prefix="/community" data-user-id="" data-facebook-app-id="694818843983011" data-completed-tutorial-id="" data-tutorial-id="1395" data-js="tutorial">
    <script>
//<![CDATA[

//]]>
</script>
<!-- Google Tag Manager -->
<noscript>&lt;iframe src="//www.googletagmanager.com/ns.html?id=GTM-KHWBBT"
height="0" width="0" style="display:none;visibility:hidden"&gt;&lt;/iframe&gt;</noscript>
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-KHWBBT');</script>
<!-- End Google Tag Manager -->

    

    <div class="outside_viewport">
        <div id="contents-modal" class="modal fade mini-modal" style="display: none;">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h1>Contents</h1>
          <button class="close-button icon icon-close-light" data-dismiss="modal" aria-label="close"></button>
        </div>
        <div class="modal-body">
          <div class="table-of-contents-modal tocify"><ul id="tocify-header0" class="tocify-header"><li class="tocify-item tocify-focus" data-unique="general-proxying-information"><a>General Proxying Information</a></li></ul><ul id="tocify-header1" class="tocify-header"><li class="tocify-item" data-unique="deconstructing-a-basic-http-proxy-pass"><a>Deconstructing a Basic HTTP Proxy Pass</a></li></ul><ul id="tocify-header2" class="tocify-header"><li class="tocify-item" data-unique="understanding-how-nginx-processes-headers"><a>Understanding How Nginx Processes Headers</a></li></ul><ul id="tocify-header3" class="tocify-header"><li class="tocify-item" data-unique="setting-or-resetting-headers"><a>Setting or Resetting Headers</a></li></ul><ul id="tocify-header4" class="tocify-header"><li class="tocify-item" data-unique="defining-an-upstream-context-for-load-balancing-proxied-connections"><a>Defining an Upstream Context for Load Balancing Proxied Connections</a></li></ul><ul id="tocify-header5" class="tocify-header"><li class="tocify-item" data-unique="using-buffers-to-free-up-backend-servers"><a>Using Buffers to Free Up Backend Servers</a></li></ul><ul id="tocify-header6" class="tocify-header"><li class="tocify-item" data-unique="configuring-proxy-caching-to-decrease-response-times"><a>Configuring Proxy Caching to Decrease Response Times</a></li></ul><ul id="tocify-header7" class="tocify-header"><li class="tocify-item" data-unique="conclusion"><a>Conclusion</a></li></ul></div>
        </div>
      </div>
    </div>
  </div>
  <div id="share-modal" class="modal fade mini-modal" style="display: none;">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1>Share</h1>
        <button type="button" class="close-button icon icon-close-light" aria-label="close" data-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <div class="social-sharing social-sharing-container">
          <ul class="top ">
            <li class="shareBtn" id="sbTwitter">
              <a href="http://twitter.com/share?text=Understanding%20Nginx%20HTTP%20Proxying,%20Load%20Balancing,%20Buffering,%20and%20Caching&amp;url=https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?utm_content=understanding-nginx-http-proxying-load-balancing-buffering-and-caching&amp;utm_medium=community&amp;utm_source=twshare" class="share-icon share-popup" title="Share on Twitter">
                <span class="sIcon icon-bird"></span>
              </a>
              <a href="http://twitter.com/share?text=Understanding%20Nginx%20HTTP%20Proxying,%20Load%20Balancing,%20Buffering,%20and%20Caching&amp;url=https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?utm_content=understanding-nginx-http-proxying-load-balancing-buffering-and-caching&amp;utm_medium=community&amp;utm_source=twshare" class="share-link share-popup" title="Share on Twitter">
                Twitter
              </a>
            </li>
            <li class="shareBtn" id="sbFacebook">
              <a class="share-icon facebook-share" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?utm_content=understanding-nginx-http-proxying-load-balancing-buffering-and-caching&amp;utm_medium=community&amp;utm_source=fbshare" onclick="" title="Share on Facebook">
                <span class="sIcon icon-facebook-B"></span>
              </a>

              <a class="share-link facebook-share" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?utm_content=understanding-nginx-http-proxying-load-balancing-buffering-and-caching&amp;utm_medium=community&amp;utm_source=fbshare" onclick="" title="Share on Facebook">
                Facebook
              </a>
            </li>
            <li class="shareBtn" id="sbGoogle">
              <a href="https://plus.google.com/share?url=https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?utm_content=understanding-nginx-http-proxying-load-balancing-buffering-and-caching&amp;utm_medium=community&amp;utm_source=gpshare" class="share-icon share-popup" title="Share on Google+">
                <span class="sIcon icon-google-plus-B"></span>
              </a>
              <a href="https://plus.google.com/share?url=https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?utm_content=understanding-nginx-http-proxying-load-balancing-buffering-and-caching&amp;utm_medium=community&amp;utm_source=gpshare" class="share-link share-popup" title="Share on Google+">
                Google+
              </a>
            </li>
            <li class="shareBtn" id="sbYC">
              <a href="https://news.ycombinator.com/submitlink?t=Understanding%20Nginx%20HTTP%20Proxying,%20Load%20Balancing,%20Buffering,%20and%20Caching&amp;u=https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?utm_content=understanding-nginx-http-proxying-load-balancing-buffering-and-caching&amp;utm_medium=community&amp;utm_source=hnshare" class="share-icon share-popup" target="_blank" title="Submit to Hacker News">
                <span class="sIcon icon-hacker-news"></span>
              </a>
              <a href="https://news.ycombinator.com/submitlink?t=Understanding%20Nginx%20HTTP%20Proxying,%20Load%20Balancing,%20Buffering,%20and%20Caching&amp;u=https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?utm_content=understanding-nginx-http-proxying-load-balancing-buffering-and-caching&amp;utm_medium=community&amp;utm_source=hnshare" class="share-link share-popup" target="_blank" title="Submit to Hacker News">
                Hacker News
              </a>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>

  <div class="table-of-contents has-init" style="top: 198px;">
    <div data-js="tableOfContentsDesktop" class="tocify"><ul id="tocify-header0" class="tocify-header"><li class="tocify-item tocify-focus" data-unique="general-proxying-information" style="cursor: pointer;"><a>General Proxying Information</a></li></ul><ul id="tocify-header1" class="tocify-header"><li class="tocify-item" data-unique="deconstructing-a-basic-http-proxy-pass" style="cursor: pointer;"><a>Deconstructing a Basic HTTP Proxy Pass</a></li></ul><ul id="tocify-header2" class="tocify-header"><li class="tocify-item" data-unique="understanding-how-nginx-processes-headers" style="cursor: pointer;"><a>Understanding How Nginx Processes Headers</a></li></ul><ul id="tocify-header3" class="tocify-header"><li class="tocify-item" data-unique="setting-or-resetting-headers" style="cursor: pointer;"><a>Setting or Resetting Headers</a></li></ul><ul id="tocify-header4" class="tocify-header"><li class="tocify-item" data-unique="defining-an-upstream-context-for-load-balancing-proxied-connections" style="cursor: pointer;"><a>Defining an Upstream Context for Load Balancing Proxied Connections</a></li></ul><ul id="tocify-header5" class="tocify-header"><li class="tocify-item" data-unique="using-buffers-to-free-up-backend-servers" style="cursor: pointer;"><a>Using Buffers to Free Up Backend Servers</a></li></ul><ul id="tocify-header6" class="tocify-header"><li class="tocify-item" data-unique="configuring-proxy-caching-to-decrease-response-times" style="cursor: pointer;"><a>Configuring Proxy Caching to Decrease Response Times</a></li></ul><ul id="tocify-header7" class="tocify-header"><li class="tocify-item" data-unique="conclusion"><a>Conclusion</a></li></ul></div>
    <button type="button" class="Button--reset Tutorial-button " data-js="markAsComplete" data-tutorialinteraction="" data-tutorialsingle=""><svg class="svg-icon svg-icon-completed"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-completed"></use></svg><span>Mark as Complete</span></button>
  </div>
  
  <div id="share-modal" class="modal fade mini-modal" style="display: none;">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1>Share</h1>
        <button type="button" class="close-button icon icon-close-light" aria-label="close" data-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <div class="social-sharing social-sharing-container">
          <ul class="bottom ">
            <li class="shareBtn" id="sbTwitter">
              <a href="http://twitter.com/share?text=Understanding%20Nginx%20HTTP%20Proxying,%20Load%20Balancing,%20Buffering,%20and%20Caching&amp;url=https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?utm_content=understanding-nginx-http-proxying-load-balancing-buffering-and-caching&amp;utm_medium=community&amp;utm_source=twshare" class="share-icon share-popup" title="Share on Twitter">
                <span class="sIcon icon-bird"></span>
              </a>
              <a href="http://twitter.com/share?text=Understanding%20Nginx%20HTTP%20Proxying,%20Load%20Balancing,%20Buffering,%20and%20Caching&amp;url=https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?utm_content=understanding-nginx-http-proxying-load-balancing-buffering-and-caching&amp;utm_medium=community&amp;utm_source=twshare" class="share-link share-popup" title="Share on Twitter">
                Twitter
              </a>
            </li>
            <li class="shareBtn" id="sbFacebook">
              <a class="share-icon facebook-share" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?utm_content=understanding-nginx-http-proxying-load-balancing-buffering-and-caching&amp;utm_medium=community&amp;utm_source=fbshare" onclick="" title="Share on Facebook">
                <span class="sIcon icon-facebook-B"></span>
              </a>

              <a class="share-link facebook-share" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?utm_content=understanding-nginx-http-proxying-load-balancing-buffering-and-caching&amp;utm_medium=community&amp;utm_source=fbshare" onclick="" title="Share on Facebook">
                Facebook
              </a>
            </li>
            <li class="shareBtn" id="sbGoogle">
              <a href="https://plus.google.com/share?url=https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?utm_content=understanding-nginx-http-proxying-load-balancing-buffering-and-caching&amp;utm_medium=community&amp;utm_source=gpshare" class="share-icon share-popup" title="Share on Google+">
                <span class="sIcon icon-google-plus-B"></span>
              </a>
              <a href="https://plus.google.com/share?url=https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?utm_content=understanding-nginx-http-proxying-load-balancing-buffering-and-caching&amp;utm_medium=community&amp;utm_source=gpshare" class="share-link share-popup" title="Share on Google+">
                Google+
              </a>
            </li>
            <li class="shareBtn" id="sbYC">
              <a href="https://news.ycombinator.com/submitlink?t=Understanding%20Nginx%20HTTP%20Proxying,%20Load%20Balancing,%20Buffering,%20and%20Caching&amp;u=https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?utm_content=understanding-nginx-http-proxying-load-balancing-buffering-and-caching&amp;utm_medium=community&amp;utm_source=hnshare" class="share-icon share-popup" target="_blank" title="Submit to Hacker News">
                <span class="sIcon icon-hacker-news"></span>
              </a>
              <a href="https://news.ycombinator.com/submitlink?t=Understanding%20Nginx%20HTTP%20Proxying,%20Load%20Balancing,%20Buffering,%20and%20Caching&amp;u=https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?utm_content=understanding-nginx-http-proxying-load-balancing-buffering-and-caching&amp;utm_medium=community&amp;utm_source=hnshare" class="share-link share-popup" target="_blank" title="Submit to Hacker News">
                Hacker News
              </a>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</div>

    


      
    </div>

      <div class="mobile-nav">
  
<div class="account-buttons">
    <div id="entrance">
      <a id="sign-up" class="button" href="https://www.digitalocean.com/community/auth/digitalocean?display=sessionless+register">Sign Up</a>
      <a id="log-in" class="button" href="https://www.digitalocean.com/community/auth/digitalocean">Log In</a>
    </div>
</div>

  <button type="button" aria-label="close" class="close-panel icon-close"></button>

  <form class="mobile-search" role="search" action="https://www.digitalocean.com/community/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="✓">
    <span class="icon icon-search-thin"></span>
    <input type="text" name="q" id="q" title="Search" placeholder="Search">
    <button name="button" type="submit" class="icon-btn">submit</button>
</form>
  
<nav>

  <ul>
    <li><a class="active" href="https://www.digitalocean.com/community/tutorials">Tutorials</a></li>
    <li><a href="https://www.digitalocean.com/community/questions">Questions</a></li>
    <li><a href="https://www.digitalocean.com/community/projects">Projects</a></li>
    <li><a href="https://www.meetup.com/pro/digitalocean/?utm_source=do_community" target="_blank">Meetups</a></li>
    <li class="mobile-nav-only"><a href="https://www.digitalocean.com/">Main Site</a></li>
  </ul>
</nav>

  
</div>

      
      <header>
  <div class="flash-container"></div>

  <div class="main-menu-container">
    <div class="wrapper">
      <div class="logo">
        <a class="logo-icon" href="https://www.digitalocean.com/">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 190 32" class="do-icon">
<title>DigitalOcean</title>
<path class="path1" d="M16.016 32v-6.204c6.584 0 11.648-6.52 9.147-13.42-0.95-2.564-2.975-4.59-5.539-5.539-6.9-2.501-13.42 2.564-13.42 9.147 0 0 0 0 0 0l-6.204 0.032c0-10.477 10.129-18.643 21.112-15.225 4.811 1.488 8.609 5.317 10.097 10.097 3.418 10.983-4.716 21.112-15.193 21.112z"></path>
<path class="path2" d="M16.016 25.828h-6.172v-6.172h6.172z"></path>
<path class="path3" d="M9.844 30.576h-4.748v-4.748h4.748v4.748z"></path>
<path class="path4" d="M5.096 25.828h-3.988v-3.988h3.988z"></path>
<path class="path5" d="M56.973 9.242c-1.836-1.266-4.115-1.931-6.773-1.931h-5.792v18.39h5.792c2.659 0 4.938-0.665 6.773-2.026 1.013-0.696 1.804-1.709 2.342-2.944s0.823-2.69 0.823-4.336c0-1.614-0.285-3.070-0.823-4.305-0.538-1.203-1.329-2.152-2.342-2.849zM47.794 10.445h1.836c2.026 0 3.703 0.411 4.969 1.171 1.393 0.855 2.121 2.469 2.121 4.779 0 2.406-0.728 4.083-2.121 5.001v0c-1.203 0.791-2.88 1.203-4.938 1.203h-1.867v-12.154z"></path>
<path class="path6" d="M64.19 7.122c-0.57 0-1.044 0.19-1.424 0.57s-0.601 0.855-0.601 1.393c0 0.57 0.19 1.044 0.601 1.424 0.38 0.38 0.855 0.601 1.424 0.601s1.044-0.19 1.424-0.601c0.38-0.38 0.601-0.886 0.601-1.424 0-0.57-0.19-1.044-0.601-1.393-0.38-0.38-0.886-0.57-1.424-0.57z"></path>
<path class="path7" d="M62.512 12.787h3.26v12.977h-3.26v-12.977z"></path>
<path class="path8" d="M77.642 13.864c-0.981-0.886-2.089-1.393-3.26-1.393-1.804 0-3.292 0.633-4.463 1.836s-1.741 2.785-1.741 4.653c0 1.836 0.57 3.387 1.741 4.653 1.171 1.203 2.659 1.836 4.463 1.836 1.266 0 2.342-0.348 3.228-1.044v0.285c0 1.076-0.285 1.899-0.855 2.5-0.57 0.57-1.361 0.855-2.342 0.855-1.519 0-2.437-0.601-3.608-2.152l-2.216 2.121 0.063 0.095c0.475 0.665 1.203 1.329 2.184 1.962s2.184 0.95 3.64 0.95c1.931 0 3.513-0.601 4.653-1.773 1.171-1.171 1.741-2.754 1.741-4.716v-11.743h-3.197v1.076zM76.787 21.523c-0.57 0.633-1.298 0.95-2.247 0.95s-1.678-0.317-2.216-0.95c-0.57-0.633-0.855-1.488-0.855-2.532s0.285-1.931 0.855-2.564c0.57-0.633 1.298-0.981 2.216-0.981 0.95 0 1.678 0.317 2.247 0.981 0.57 0.633 0.855 1.519 0.855 2.564s-0.317 1.899-0.855 2.532z"></path>
<path class="path9" d="M83.624 12.787h3.26v12.977h-3.26v-12.977z"></path>
<path class="path10" d="M85.302 7.122c-0.57 0-1.044 0.19-1.424 0.57s-0.601 0.855-0.601 1.393c0 0.57 0.19 1.044 0.601 1.424 0.38 0.38 0.855 0.601 1.424 0.601s1.044-0.19 1.424-0.601c0.38-0.38 0.601-0.886 0.601-1.424 0-0.57-0.19-1.044-0.601-1.393-0.38-0.38-0.886-0.57-1.424-0.57z"></path>
<path class="path11" d="M94.038 9.274h-3.197v3.513h-1.867v2.975h1.867v5.381c0 1.678 0.348 2.88 1.013 3.577s1.836 1.044 3.513 1.044c0.538 0 1.076-0.032 1.583-0.063h0.158v-2.975l-1.108 0.063c-0.791 0-1.298-0.127-1.551-0.411s-0.38-0.855-0.38-1.709v-4.906h3.039v-2.975h-3.039v-3.513z"></path>
<path class="path12" d="M112.364 7.343h3.26v18.39h-3.26v-18.39z"></path>
<path class="path13" d="M148.574 21.112c-0.57 0.665-1.171 1.234-1.646 1.519v0c-0.443 0.285-1.013 0.443-1.678 0.443-0.95 0-1.741-0.348-2.374-1.076s-0.95-1.646-0.95-2.754 0.317-2.026 0.918-2.722c0.633-0.728 1.393-1.076 2.342-1.076 1.044 0 2.152 0.665 3.102 1.773l2.152-2.057c-1.393-1.836-3.197-2.69-5.349-2.69-1.804 0-3.355 0.665-4.621 1.931s-1.899 2.912-1.899 4.843 0.633 3.545 1.899 4.843c1.266 1.298 2.817 1.931 4.621 1.931 2.374 0 4.273-1.013 5.539-2.88l-2.057-2.026z"></path>
<path class="path14" d="M161.962 14.591c-0.475-0.633-1.108-1.171-1.867-1.551-0.791-0.38-1.678-0.57-2.69-0.57-1.836 0-3.323 0.665-4.431 1.994-1.076 1.329-1.646 2.944-1.646 4.874 0 1.962 0.601 3.577 1.804 4.843 1.171 1.234 2.785 1.867 4.716 1.867 2.184 0 4.020-0.886 5.349-2.659l0.063-0.095-2.121-2.057c-0.19 0.253-0.475 0.506-0.728 0.76-0.317 0.317-0.633 0.538-0.95 0.696-0.475 0.253-1.044 0.348-1.646 0.348-0.918 0-1.646-0.253-2.216-0.791-0.538-0.475-0.855-1.139-0.918-1.962h8.641l0.032-1.203c0-0.855-0.127-1.646-0.348-2.406-0.222-0.728-0.57-1.456-1.044-2.089zM154.841 17.63c0.158-0.633 0.443-1.139 0.855-1.551 0.443-0.443 1.013-0.665 1.709-0.665 0.791 0 1.393 0.222 1.804 0.665 0.38 0.411 0.601 0.918 0.665 1.519h-5.033z"></path>
<path class="path15" d="M174.497 13.737v0c-0.981-0.855-2.342-1.266-4.051-1.266-1.076 0-2.089 0.253-3.007 0.696-0.855 0.443-1.678 1.139-2.216 2.089l0.032 0.032 2.089 1.994c0.855-1.361 1.804-1.836 3.070-1.836 0.696 0 1.234 0.19 1.678 0.538s0.633 0.823 0.633 1.393v0.633c-0.823-0.253-1.614-0.38-2.406-0.38-1.614 0-2.944 0.38-3.925 1.139s-1.488 1.867-1.488 3.229c0 1.203 0.411 2.216 1.266 2.944 0.855 0.696 1.899 1.076 3.134 1.076s2.406-0.506 3.45-1.361v1.076h3.197v-8.324c0.063-1.583-0.443-2.817-1.456-3.672zM168.704 20.795c0.38-0.253 0.886-0.38 1.551-0.38 0.791 0 1.614 0.158 2.469 0.475v1.266c-0.696 0.665-1.646 0.981-2.817 0.981-0.57 0-1.013-0.127-1.298-0.38s-0.443-0.538-0.443-0.95c0-0.443 0.19-0.76 0.538-1.013z"></path>
<path class="path16" d="M188.55 13.99c-0.918-1.013-2.184-1.519-3.798-1.519-1.298 0-2.342 0.38-3.134 1.108v-0.791h-3.197v12.977h3.26v-7.185c0-0.981 0.222-1.773 0.696-2.311 0.475-0.57 1.076-0.823 1.931-0.823 0.728 0 1.298 0.253 1.709 0.728 0.411 0.506 0.633 1.171 0.633 2.026v7.501h3.26v-7.47c0-1.804-0.443-3.229-1.361-4.241z"></path>
<path class="path17" d="M108.281 13.737v0c-0.981-0.855-2.342-1.266-4.051-1.266-1.076 0-2.089 0.253-3.007 0.696-0.855 0.443-1.678 1.139-2.216 2.089l0.032 0.032 2.089 1.994c0.855-1.361 1.804-1.836 3.070-1.836 0.696 0 1.234 0.19 1.678 0.538s0.633 0.823 0.633 1.393v0.633c-0.823-0.253-1.614-0.38-2.406-0.38-1.614 0-2.944 0.38-3.925 1.139s-1.488 1.867-1.488 3.229c0 1.203 0.411 2.216 1.266 2.944 0.855 0.696 1.899 1.076 3.134 1.076s2.406-0.506 3.45-1.361v1.076h3.197v-8.324c0.032-1.583-0.475-2.817-1.456-3.672zM102.489 20.795c0.38-0.253 0.886-0.38 1.551-0.38 0.791 0 1.614 0.158 2.469 0.475v1.266c-0.696 0.665-1.646 0.981-2.817 0.981-0.57 0-1.013-0.127-1.298-0.38s-0.443-0.538-0.443-0.95c0-0.443 0.158-0.76 0.538-1.013z"></path>
<path class="path18" d="M127.462 26.018c-5.223 0-9.496-4.241-9.496-9.496s4.241-9.496 9.496-9.496 9.496 4.241 9.496 9.496-4.273 9.496-9.496 9.496zM127.462 10.382c-3.387 0-6.14 2.754-6.14 6.14s2.754 6.14 6.14 6.14 6.14-2.754 6.14-6.14-2.754-6.14-6.14-6.14z"></path>
</svg>

          <span class="sr-only">DigitalOcean</span>
</a>
        <span class="logo-separator"></span>

        <a class="home-link" href="https://www.digitalocean.com/community">
          <span class="logo-community-text">Community</span>
</a>      </div>

      <a class="mobile-nav-toggle icon-menu-thin" data-role="left">
        <span>Menu</span>
      </a>

      
<nav>

  <ul>
    <li><a class="active" href="https://www.digitalocean.com/community/tutorials">Tutorials</a></li>
    <li><a href="https://www.digitalocean.com/community/questions">Questions</a></li>
    <li><a href="https://www.digitalocean.com/community/projects">Projects</a></li>
    <li><a href="https://www.meetup.com/pro/digitalocean/?utm_source=do_community" target="_blank">Meetups</a></li>
    <li class="mobile-nav-only"><a href="https://www.digitalocean.com/">Main Site</a></li>
  </ul>
</nav>


      
<div class="account-buttons">
    <div id="entrance">
      <a id="sign-up" class="button" href="https://www.digitalocean.com/community/auth/digitalocean?display=sessionless+register">Sign Up</a>
      <a id="log-in" class="button" href="https://www.digitalocean.com/community/auth/digitalocean">Log In</a>
    </div>
</div>
      <div class="header-search open">
  <form action="https://www.digitalocean.com/community/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="✓">
    <span class="icon icon-search-thin"></span>
    <input type="text" name="q" id="q" title="Search" placeholder="Search" autocomplete="off" spellcheck="false" class="header-search__input" data-algolia-application-id="6ZHEUVKJ88" data-algolia-api-key="c5470567eae7fa1177d43222e18ba086">
    <button name="button" type="submit" class="icon-btn">submit</button>
</form></div>

<div class="search-results-dropdown dropdown" data-root-path="https://www.digitalocean.com/community">
  <div class="container">
    <div class="header-search-results-list"></div>

    <div id="btn-wrap">
      <a class="more-search-results" data-search-path="/community/search" href="https://www.digitalocean.com/community/search">
        <span class="icon-mag"></span>
        View All Results
</a>    </div>
  </div>
</div>

<script type="text/template" id="autocomplete-hits-template">
  <div class="inner-search">
    <ul>
        {{#hits}}
          <li>
            <span class='icon icon-{{type}}'></span>
            <a href='{{url}}'>{{title}}</a>
          </li>
        {{/hits}}
    </ul>
  </div>
</script>


      <div class="clearfix"></div>
    </div>
  </div>

  <div class="wrapper">
    
  </div>
</header>


      

      <div class="wrapper layout-wrapper">

        









<div class="section-content section-content-growable content Tutorial-content content-has-mobile-image">
  <div class="postable-info-bar-container">
  <div class="postable-info-bar">
    <div class="left-section">
        <div class="tutorial-author-avatar">
    <a href="https://www.digitalocean.com/community/users/jellingwood"><div class="mod-avatar mod-avatar-small"><img alt="jellingwood" class="avatar avatar-small" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/60d901f61a6146e14a3e989bc1f4ef11" width="80" height="80"><span class="mod-star" title="" data-toggle="tooltip" data-container="body" data-original-title="MOD"><span class="mod-star-icon"></span></span></div></a>
  </div>
  <div class="author-and-date">
    <div class="tutorial-author">
      <div class="by">By: </div>
      <a href="https://www.digitalocean.com/community/users/jellingwood">Justin Ellingwood</a>
    </div>
  </div>

      
    </div>

    <div class="right-section">
      


      <div class="section-item section-item-subscribe">
  <span class="opt-in-switch off signed-out-subscribe">
    <span class="subscribe-label">
      <span class="icon icon-subscribe"></span>
      <span class="subscription-label subscribe">Subscribe</span>
      <span class="icon icon-subscribed"></span>
      <span class="subscription-label subscribed">Subscribed</span>
    </span>
    <a data-toggle="modal" data-target="#sign-in-modal" class="mini-switch-container" href="javascript:void(0);"><div class="mini-switch off signed-out-subscribe"><div class="switch-handle"></div></div></a>
  </span>
</div>

<div class="section-item social-sharing-item">
  <div class="sharing">
  <a class="share-button" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching#" data-toggle="modal" data-target="#share-modal">
    <span class="icon icon-share-square"></span>
    <span class="share-button-text">Share</span>
  </a>
</div>

</div>

        <div class="section-item table-of-contents-triggers"><div class="toc-trigger-mobile" data-toggle="modal" data-target="#contents-modal">
  <a href="javascript:void(0);">
    <span class="icon icon-contents"></span>
    <span class="title">Contents</span>
    <span class="icon icon-arrow-down"></span>
  </a>
</div>

</div>

    </div>
  </div>
</div>


    <img alt="Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching" title="Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching" class="tutorial-image-mobile" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/NGINX_tw.png">

  <div class="container tutorial-header">
      <img alt="Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching" title="Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching" class="tutorial-image" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/NGINX_tw.png">

      <div class="info-cta">
    <a class="icon-close-light" href="javascript:void();"></a>
    We hope you find this tutorial helpful. In addition to guides like this one, we provide simple cloud infrastructure for developers. <a href="https://www.digitalocean.com/?utm_medium=community&amp;utm_source=community_gencta&amp;utm_campaign=needaserver&amp;utm_content=understanding-nginx-http-proxying-load-balancing-buffering-and-caching">
        Learn more →
</a>  </div>


    <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="1395" data-upvotable-type="Tutorial"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">167</span></button>

    <h1 class="content-title Tutorial-header">
      <button type="button" class="Button--reset Tutorial-headerButton " data-toggle="tooltip" title="" data-js="markAsComplete" data-tutorialinteraction="" data-tutorialsingle="" data-original-title="Mark as Complete">
        <svg class="svg-icon svg-icon-completed"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-completed"></use></svg>
      </button> Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching
    </h1>

    <span class="meta-section timestamp"><span class="tutorial-date-text">Posted</span><span class="tutorial-date">November 25, 2014</span></span>

    <span class="meta-section pageviews"><span class="icon icon-eye v-mid"></span><span class="views-count v-mid">389.3k</span><span class="sr-only"> views</span></span>

    <span class="meta-section tags">
      <a class="tag" href="https://www.digitalocean.com/community/tags/load-balancing?type=tutorials">Load Balancing</a> <a class="tag" href="https://www.digitalocean.com/community/tags/caching?type=tutorials">Caching</a> <a class="tag" href="https://www.digitalocean.com/community/tags/scaling?type=tutorials">Scaling</a> <a class="tag" href="https://www.digitalocean.com/community/tags/nginx?type=tutorials">Nginx</a>
      
    </span>
  </div>

    <div class="content-body tutorial-content" data-growable-markdown="">
      <h3 id="introduction">Introduction</h3>

<p>In this guide, we will discuss Nginx's http proxying capabilities, which allow Nginx to pass requests off to backend http servers for further processing. Nginx is often set up as a reverse proxy solution to help scale out infrastructure or to pass requests to other servers that are not designed to handle large client loads.</p>

<p>Along the way, we will discuss how to scale out using Nginx's built-in load balancing capabilities.  We will also explore buffering and caching to improve the performance of proxying operations for clients.</p>

<div name="general-proxying-information" data-unique="general-proxying-information"></div><h2 id="general-proxying-information">General Proxying Information</h2>

<p>If you have only used web servers in the past for simple, single server configurations, you may be wondering why you would need to proxy requests.</p>

<p>One reason to proxy to other servers from Nginx is the ability to scale out your infrastructure.  Nginx is built to handle many concurrent connections at the same time.  This makes it ideal for being the point-of-contact for clients.  The server can pass requests to any number of backend servers to handle the bulk of the work, which spreads the load across your infrastructure.  This design also provides you with flexibility in easily adding backend servers or taking them down as needed for maintenance.</p>

<p>Another instance where an http proxy might be useful is when using an application servers that might not be built to handle requests directly from clients in production environments.  Many frameworks include web servers, but most of them are not as robust as servers designed for high performance like Nginx.  Putting Nginx in front of these servers can lead to a better experience for users and increased security.</p>

<p>Proxying in Nginx is accomplished by manipulating a request aimed at the Nginx server and passing it to other servers for the actual processing.  The result of the request is passed back to Nginx, which then relays the information to the client.  The other servers in this instance can be remote machines, local servers, or even other virtual servers defined within Nginx.  The servers that Nginx proxies requests to are known as <em>upstream servers</em>.</p>

<p>Nginx can proxy requests to servers that communicate using the http(s), FastCGI, SCGI, and uwsgi, or memcached protocols through separate sets of directives for each type of proxy.  In this guide, we will be focusing on the http protocol.  The Nginx instance is responsible for passing on the request and massaging any message components into a format that the upstream server can understand.</p>

<div name="deconstructing-a-basic-http-proxy-pass" data-unique="deconstructing-a-basic-http-proxy-pass"></div><h2 id="deconstructing-a-basic-http-proxy-pass">Deconstructing a Basic HTTP Proxy Pass</h2>

<p>The most straight-forward type of proxy involves handing off a request to a single server that can communicate using http.  This type of proxy is known as a generic "proxy pass" and is handled by the aptly named <code>proxy_pass</code> directive.</p>

<p>The <code>proxy_pass</code> directive is mainly found in location contexts.  It is also valid in <code>if</code> blocks within a location context and in <code>limit_except</code> contexts.  When a request matches a location with a <code>proxy_pass</code> directive inside, the request is forwarded to the URL given by the directive.</p>

<p>Let's take a look at an example:</p>
<pre class="code-pre "><code class="code-highlight language-nginx hljs "><span class="hljs-comment"># server context</span>

<span class="hljs-title">location</span> /match/here {
    <span class="hljs-title">proxy_pass</span> <span class="hljs-url">http://example.com</span>;
}

. . .

</code></pre>
<p>In the above configuration snippet, no URI is given at the end of the server in the <code>proxy_pass</code> definition.  For definitions that fit this pattern, the URI requested by the client will be passed to the upstream server as-is.</p>

<p>For example, when a request for <code>/match/here/please</code> is handled by this block, the request URI will be sent to the <code>example.com</code> server as <code>http://example.com/match/here/please</code>.</p>

<p>Let's take a look at the alternative scenario:</p>
<pre class="code-pre "><code class="code-highlight language-nginx hljs "><span class="hljs-comment"># server context</span>

<span class="hljs-title">location</span> /match/here {
    <span class="hljs-title">proxy_pass</span> <span class="hljs-url">http://example.com/new/prefix</span>;
}

. . .
</code></pre>
<p>In the above example, the proxy server is defined with a URI segment on the end (<code>/new/prefix</code>).  When a URI is given in the <code>proxy_pass</code> definition, the portion of the request that matches the <em>location</em> definition is replaced by this URI during the pass.</p>

<p>For example, a request for <code>/match/here/please</code> on the Nginx server will be passed to the upstream server as <code>http://example.com/new/prefix/please</code>.  The <code>/match/here</code> is replaced by <code>/new/prefix</code>.  This is an important point to keep in mind.</p>

<p>Sometimes, this kind of replacement is impossible.  In these cases, the URI at the end of the <code>proxy_pass</code> definition is ignored and either the original URI from the client or the URI as modified by other directives will be passed to the upstream server.</p>

<p>For instance, when the location is matched using regular expressions, Nginx cannot determine which part of the URI matched the expression, so it sends the original client request URI.  Another example is when a rewrite directive is used within the same location, causing the client URI to be rewritten, but still handled in the same block.  In this case, the rewritten URI will be passed.</p>

<div name="understanding-how-nginx-processes-headers" data-unique="understanding-how-nginx-processes-headers"></div><h2 id="understanding-how-nginx-processes-headers">Understanding How Nginx Processes Headers</h2>

<p>One thing that might not be immediately clear is that it is important to pass more than just the URI if you expect the upstream server handle the request properly.  The request coming from Nginx on behalf of a client will look different than a request coming directly from a client.  A big part of this is the headers that go along with the request.</p>

<p>When Nginx proxies a request, it automatically makes some adjustments to the request headers it receives from the client:</p>

<ul>
<li>Nginx gets rid of any empty headers.  There is no point of passing along empty values to another server; it would only serve to bloat the request.</li>
<li>Nginx, by default, will consider any header that contains underscores as invalid.  It will remove these from the proxied request.  If you wish to have Nginx interpret these as valid, you can set the <code>underscores_in_headers</code> directive to "on", otherwise your headers will never make it to the backend server.</li>
<li>The "Host" header is re-written to the value defined by the <code>$proxy_host</code> variable.  This will be the IP address or name and port number of the upstream, directly as defined by the <code>proxy_pass</code> directive.</li>
<li>The "Connection" header is changed to "close".  This header is used to signal information about the particular connection established between two parties.  In this instance, Nginx sets this to "close" to indicate to the upstream server that this connection will be closed once the original request is responded to.  The upstream should not expect this connection to be persistent.</li>
</ul>

<p>The first point that we can extrapolate from the above is that any header that you <em>do not</em> want passed should be set to an empty string.  Headers with empty values are completely removed from the passed request.</p>

<p>The next point to glean from the above information is that if your backend application will be processing non-standard headers, you must make sure that they <em>do not</em> have underscores.  If you need headers that use an underscore, you can set the <code>underscores_in_headers</code> directive to "on" further up in your configuration (valid either in the http context or in the context of the default server declaration for the IP address/port combination).  If you do not do this, Nginx will flag these headers as invalid and silently drop them before passing to your upstream.</p>

<p>The "Host" header is of particular importance in most proxying scenarios.  As stated above, by default, this will be set to the value of <code>$proxy_host</code>, a variable that will contain the domain name or IP address and port taken directly from the <code>proxy_pass</code> definition.  This is selected by default as it is the only address Nginx can be sure the upstream server responds to (as it is pulled directly from the connection info).</p>

<p>The most common values for the "Host" header are below:</p>

<ul>
<li><code>$proxy_host</code>: This sets the "Host" header to the domain name or IP address and port combo taken from the <code>proxy_pass</code> definition.  This is the default and "safe" from Nginx's perspective, but not usually what is needed by the proxied server to correctly handle the request.</li>
<li><code>$http_host</code>: Sets the "Host" header to the "Host" header from the client request.  The headers sent by the client are always available in Nginx as variables.  The variables will start with an <code>$http_</code> prefix, followed by the header name in lowercase, with any dashes replaced by underscores.  Although the <code>$http_host</code> variable works most of the time, when the client request does not have a valid "Host" header, this can cause the pass to fail.</li>
<li><code>$host</code>: This variable is set, in order of preference to: the host name from the request line itself, the "Host" header from the client request, or the server name matching the request.</li>
</ul>

<p>In most cases, you will want to set the "Host" header to the <code>$host</code> variable.  It is the most flexible and will usually provide the proxied servers with a "Host" header filled in as accurately as possible.</p>

<div name="setting-or-resetting-headers" data-unique="setting-or-resetting-headers"></div><h2 id="setting-or-resetting-headers">Setting or Resetting Headers</h2>

<p>To adjust or set headers for proxy connections, we can use the <code>proxy_set_header</code> directive.  For instance, to change the "Host" header as we have discussed, and add some additional headers common with proxied requests, we could use something like this:</p>
<pre class="code-pre "><code class="code-highlight language-nginx hljs "><span class="hljs-comment"># server context</span>

<span class="hljs-title">location</span> /match/here {
    <span class="hljs-title">proxy_set_header</span> HOST <span class="hljs-variable">$host</span>;
    <span class="hljs-title">proxy_set_header</span> X-Forwarded-Proto <span class="hljs-variable">$scheme</span>;
    <span class="hljs-title">proxy_set_header</span> X-Real-IP <span class="hljs-variable">$remote_addr</span>;
    <span class="hljs-title">proxy_set_header</span> X-Forwarded-For <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;

    <span class="hljs-title">proxy_pass</span> <span class="hljs-url">http://example.com/new/prefix</span>;
}

. . .
</code></pre>
<p>The above request sets the "Host" header to the <code>$host</code> variable, which should contain information about the original host being requested.  The <code>X-Forwarded-Proto</code> header gives the proxied server information about the schema of the original client request (whether it was an http or an https request).</p>

<p>The <code>X-Real-IP</code> is set to the IP address of the client so that the proxy can correctly make decisions or log based on this information.  The <code>X-Forwarded-For</code> header is a list containing the IP addresses of every server the client has been proxied through up to this point.  In the example above, we set this to the <code>$proxy_add_x_forwarded_for</code> variable.  This variable takes the value of the original <code>X-Forwarded-For</code> header retrieved from the client and adds the Nginx server's IP address to the end.</p>

<p>Of course, we could move the <code>proxy_set_header</code> directives out to the server or http context, allowing it to be referenced in more than one location:</p>
<pre class="code-pre "><code class="code-highlight language-nginx hljs "><span class="hljs-comment"># server context</span>

<span class="hljs-title">proxy_set_header</span> HOST <span class="hljs-variable">$host</span>;
<span class="hljs-title">proxy_set_header</span> X-Forwarded-Proto <span class="hljs-variable">$scheme</span>;
<span class="hljs-title">proxy_set_Header</span> X-Real-IP <span class="hljs-variable">$remote_addr</span>;
<span class="hljs-title">proxy_set_header</span> X-Forwarded-For <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;

<span class="hljs-title">location</span> /match/here {
    <span class="hljs-title">proxy_pass</span> <span class="hljs-url">http://example.com/new/prefix</span>;
}

<span class="hljs-title">location</span> /different/match {
    <span class="hljs-title">proxy_pass</span> <span class="hljs-url">http://example.com</span>;
}
</code></pre>
<div name="defining-an-upstream-context-for-load-balancing-proxied-connections" data-unique="defining-an-upstream-context-for-load-balancing-proxied-connections"></div><h2 id="defining-an-upstream-context-for-load-balancing-proxied-connections">Defining an Upstream Context for Load Balancing Proxied Connections</h2>

<p>In the previous examples, we demonstrated how to do a simple http proxy to a single backend server.  Nginx allows us to easily scale this configuration out by specifying entire pools of backend servers that we can pass requests to.</p>

<p>We can do this by using the <code>upstream</code> directive to define a pool of servers.  This configuration assumes that any one of the listed servers is capable of handling a client's request.  This allows us to scale out our infrastructure with almost no effort.  The <code>upstream</code> directive must be set in the http context of your Nginx configuration.</p>

<p>Let's look at a simple example:</p>
<pre class="code-pre "><code class="code-highlight language-nginx hljs "><span class="hljs-comment"># http context</span>

<span class="hljs-title">upstream</span> <span class="highlight">backend_hosts</span> {
    <span class="hljs-title">server</span> host1.example.com;
    <span class="hljs-title">server</span> host2.example.com;
    <span class="hljs-title">server</span> host3.example.com;
}

<span class="hljs-title">server</span> {
    <span class="hljs-title">listen</span> <span class="hljs-number">80</span>;
    <span class="hljs-title">server_name</span> example.com;

    <span class="hljs-title">location</span> /proxy-me {
        <span class="hljs-title">proxy_pass</span> <span class="hljs-url">http://</span><span class="highlight"><span class="hljs-url">backend_hosts</span></span>;
    }
}
</code></pre>
<p>In the above example, we've set up an upstream context called <code>backend_hosts</code>.  Once defined, this name will be available for use within proxy passes as if it were a regular domain name.  As you can see, within our server block we pass any request made to <code>example.com/proxy-me/...</code> to the pool we defined above.  Within that pool, a host is selected by applying a configurable algorithm.  By default, this is just a simple round-robin selection process (each request will be routed to a different host in turn).</p>

<h3 id="changing-the-upstream-balancing-algorithm">Changing the Upstream Balancing Algorithm</h3>

<p>You can modify the balancing algorithm used by the upstream pool by including directives or flags within the upstream context:</p>

<ul>
<li><strong>(round robin)</strong>: The default load balancing algorithm that is used if no other balancing directives are present.  Each server defined in the upstream context is passed requests sequentially in turn.</li>
<li><strong><code>least_conn</code></strong>: Specifies that new connections should always be given to the backend that has the least number of active connections.  This can be especially useful in situations where connections to the backend may persist for some time.</li>
<li><strong><code>ip_hash</code></strong>: This balancing algorithm distributes requests to different servers based on the client's IP address.  The first three octets are used as a key to decide on the server to handle the request.  The result is that clients tend to be served by the same server each time, which can assist in session consistency.</li>
<li><strong><code>hash</code></strong>: This balancing algorithm is mainly used with memcached proxying.  The servers are divided based on the value of an arbitrarily provided hash key.  This can be text, variables, or a combination.  This is the only balancing method that requires the user to provide data, which is the key that should be used for the hash.</li>
</ul>

<p>When changing the balancing algorithm, the block may look something like this:</p>
<pre class="code-pre "><code class="code-highlight language-nginx hljs "><span class="hljs-comment"># http context</span>

<span class="hljs-title">upstream</span> <span class="highlight">backend_hosts</span> {

    least_conn;

    <span class="hljs-title">server</span> host1.example.com;
    <span class="hljs-title">server</span> host2.example.com;
    <span class="hljs-title">server</span> host3.example.com;
}

. . .

</code></pre>
<p>In the above example, the server will be selected based on which one has the least connections.  The <code>ip_hash</code> directive could be set in the same way to get a certain amount of session "stickiness".</p>

<p>As for the <code>hash</code> method, you must provide the key to hash against.  This can be whatever you wish:</p>
<pre class="code-pre "><code class="code-highlight language-nginx hljs "><span class="hljs-comment"># http context</span>

<span class="hljs-title">upstream</span> <span class="highlight">backend_hosts</span> {

    <span class="hljs-title">hash</span> <span class="hljs-variable">$remote_addr</span><span class="hljs-variable">$remote_port</span> consistent;

    <span class="hljs-title">server</span> host1.example.com;
    <span class="hljs-title">server</span> host2.example.com;
    <span class="hljs-title">server</span> host3.example.com;
}

. . .

</code></pre>
<p>The above example will distribute requests based on the value of the client ip address and port.  We also added the optional parameter <code>consistent</code>, which implements the ketama consistent hashing algorithm.  Basically, this means that if your upstream servers change, there will be minimal impact on your cache.</p>

<h3 id="setting-server-weight-for-balancing">Setting Server Weight for Balancing</h3>

<p>In declarations of the backend servers, by default, each servers is equally "weighted".  This assumes that each server can and should handle the same amount of load (taking into account the effects of the balancing algorithms).  However, you can also set an alternative weight to servers during the declaration:</p>
<pre class="code-pre "><code class="code-highlight language-nginx hljs "><span class="hljs-comment"># http context</span>

<span class="hljs-title">upstream</span> <span class="highlight">backend_hosts</span> {
    <span class="hljs-title">server</span> host1.example.com weight=<span class="hljs-number">3</span>;
    <span class="hljs-title">server</span> host2.example.com;
    <span class="hljs-title">server</span> host3.example.com;
}

. . .

</code></pre>
<p>In the above example, <code>host1.example.com</code> will receive three times the traffic as the other two servers.  By default, each server is assigned a weight of one.</p>

<div name="using-buffers-to-free-up-backend-servers" data-unique="using-buffers-to-free-up-backend-servers"></div><h2 id="using-buffers-to-free-up-backend-servers">Using Buffers to Free Up Backend Servers</h2>

<p>One issue with proxying that concerns many users is the performance impact of adding an additional server to the process.  In most cases, this can be largely mitigated by taking advantage of Nginx's buffering and caching capabilities.</p>

<p>When proxying to another server, the speed of two different connections will affect the client's experience:</p>

<ul>
<li>The connection from the client to the Nginx proxy.</li>
<li>The connection from the Nginx proxy to the backend server.</li>
</ul>

<p>Nginx has the ability to adjust its behavior based on whichever one of these connections you wish to optimize. </p>

<p>Without buffers, data is sent from the proxied server and immediately begins to be transmitted to the client.  If the clients are assumed to be fast, buffering can be turned off in order to get the data to the client as soon as possible.  With buffers, the Nginx proxy will temporarily store the backend's response and then feed this data to the client.  If the client is slow, this allows the Nginx server to close the connection to the backend sooner.  It can then handle distributing the data to the client at whatever pace is possible.</p>

<p>Nginx defaults to a buffering design since clients tend to have vastly different connection speeds.  We can adjust the buffering behavior with the following directives.  These can be set in the http, server, or location contexts.  It is important to keep in mind that the sizing directives are configured <em>per request</em>, so increasing them beyond your need can affect your performance when there are many client requests:</p>

<ul>
<li><strong><code>proxy_buffering</code></strong>: This directive controls whether buffering for this context and child contexts is enabled.  By default, this is "on".</li>
<li><strong><code>proxy_buffers</code></strong>: This directive controls the number (first argument) and size (second argument) of buffers for proxied responses.  The default is to configure 8 buffers of a size equal to one memory page (either <code>4k</code> or <code>8k</code>).  Increasing the number of buffers can allow you to buffer more information.</li>
<li><strong><code>proxy_buffer_size</code></strong>: The initial portion of the response from a backend server, which contains headers, is buffered separately from the rest of the response.  This directive sets the size of the buffer for this portion of the response.  By default, this will be the same size as <code>proxy_buffers</code>, but since this is used for header information, this can usually be set to a lower value.</li>
<li><strong><code>proxy_busy_buffers_size</code></strong>: This directive sets the maximum size of buffers that can be marked "client-ready" and thus busy.  While a client can only read the data from one buffer at a time, buffers are placed in a queue to send to the client in bunches.  This directive controls the size of the buffer space allowed to be in this state.</li>
<li><strong><code>proxy_max_temp_file_size</code></strong>: This is the maximum size, per request, for a temporary file on disk. These are created when the upstream response is too large to fit into a buffer.</li>
<li><strong><code>proxy_temp_file_write_size</code></strong>: This is the amount of data Nginx will write to the temporary file at one time when the proxied server's response is too large for the configured buffers.</li>
<li><strong><code>proxy_temp_path</code></strong>: This is the path to the area on disk where Nginx should store any temporary files when the response from the upstream server cannot fit into the configured buffers.</li>
</ul>

<p>As you can see, Nginx provides quite a few different directives to tweak the buffering behavior.  Most of the time, you will not have to worry about the majority of these, but it can be useful to adjust some of these values.  Probably the most useful to adjust are the <code>proxy_buffers</code> and <code>proxy_buffer_size</code> directives.</p>

<p>An example that increases the number of available proxy buffers for each upstream request, while trimming down the buffer that likely stores the headers would look like this:</p>
<pre class="code-pre "><code class="code-highlight language-nginx hljs "><span class="hljs-comment"># server context</span>

<span class="hljs-title">proxy_buffering</span> <span class="hljs-built_in">on</span>;
<span class="hljs-title">proxy_buffer_size</span> <span class="hljs-number">1k</span>;
<span class="hljs-title">proxy_buffers</span> <span class="hljs-number">24</span> <span class="hljs-number">4k</span>;
<span class="hljs-title">proxy_busy_buffers_size</span> <span class="hljs-number">8k</span>;
<span class="hljs-title">proxy_max_temp_file_size</span> <span class="hljs-number">2048m</span>;
<span class="hljs-title">proxy_temp_file_write_size</span> <span class="hljs-number">32k</span>;

<span class="hljs-title">location</span> / {
    <span class="hljs-title">proxy_pass</span> <span class="hljs-url">http://example.com</span>;
}
</code></pre>
<p>In contrast, if you have fast clients that you want to immediately serve data to, you can turn buffering off completely.  Nginx will actually still use buffers if the upstream is faster than the client, but it will immediately try to flush data to the client instead of waiting for the buffer to pool.  If the client is slow, this can cause the upstream connection to remain open until the client can catch up.  When buffering is "off" only the buffer defined by the <code>proxy_buffer_size</code> directive will be used:</p>
<pre class="code-pre "><code class="code-highlight language-nginx hljs "><span class="hljs-comment"># server context</span>

<span class="hljs-title">proxy_buffering</span> <span class="hljs-built_in">off</span>;
<span class="hljs-title">proxy_buffer_size</span> <span class="hljs-number">4k</span>;

<span class="hljs-title">location</span> / {
    <span class="hljs-title">proxy_pass</span> <span class="hljs-url">http://example.com</span>;
}
</code></pre>
<h3 id="high-availability-optional">High Availability (Optional)</h3>

<p>Nginx proxying can be made more robust by adding in a redundant set of load balancers, creating a high availability infrastructure. </p>

<p>A <em>high availability</em> (HA) setup is an infrastructure without a single point of failure, and your load balancers are a part of this configuration. By having more than one load balancer, you prevent potential downtime if your load balancer is unavailable or if you need to take them down for maintenance.</p>

<p>Here is a diagram of a basic high availability setup:</p>

<p class="growable"><img src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/ha-diagram-animated.gif" alt="HA Setup"></p>

<p>In this example, you have multiple load balancers (one active and one or more passive) behind a static IP address that can be remapped from one server to another. Client requests are routed from the static IP to the active load balancer, then on to your backend servers. To learn more, read <a href="https://www.digitalocean.com/community/tutorials/how-to-use-floating-ips-on-digitalocean#how-to-implement-an-ha-setup">this section of How To Use Floating IPs</a>.</p>

<div name="configuring-proxy-caching-to-decrease-response-times" data-unique="configuring-proxy-caching-to-decrease-response-times"></div><h2 id="configuring-proxy-caching-to-decrease-response-times">Configuring Proxy Caching to Decrease Response Times</h2>

<p>While buffering can help free up the backend server to handle more requests, Nginx also provides a way to cache content from backend servers, eliminating the need to connect to the upstream at all for many requests.</p>

<h3 id="configuring-a-proxy-cache">Configuring a Proxy Cache</h3>

<p>To set up a cache to use for proxied content, we can use the <code>proxy_cache_path</code> directive.  This will create an area where data returned from the proxied servers can be kept.  The <code>proxy_cache_path</code> directive must be set in the http context.</p>

<p>In the example below, we will configure this and some related directives to set up our caching system.</p>
<pre class="code-pre "><code class="code-highlight language-nginx hljs "><span class="hljs-comment"># http context</span>

<span class="hljs-title">proxy_cache_path</span> /var/lib/nginx/cache levels=<span class="hljs-number">1</span>:<span class="hljs-number">2</span> keys_zone=backcache:<span class="hljs-number">8m</span> max_size=<span class="hljs-number">50m</span>;
<span class="hljs-title">proxy_cache_key</span> <span class="hljs-string">"<span class="hljs-variable">$scheme</span><span class="hljs-variable">$request_method</span><span class="hljs-variable">$host</span><span class="hljs-variable">$request_uri</span><span class="hljs-variable">$is_args</span><span class="hljs-variable">$args</span>"</span>;
<span class="hljs-title">proxy_cache_valid</span> <span class="hljs-number">200</span> <span class="hljs-number">302</span> <span class="hljs-number">10m</span>;
<span class="hljs-title">proxy_cache_valid</span> <span class="hljs-number">404</span> <span class="hljs-number">1m</span>;
</code></pre>
<p>With the <code>proxy_cache_path</code> directive, we have have defined a directory on the filesystem where we would like to store our cache.  In this example, we've chosen the <code>/var/lib/nginx/cache</code> directory.  If this directory does not exist, you can create it with the correct permission and ownership by typing:</p>
<pre class="code-pre "><code langs="">sudo mkdir -p /var/lib/nginx/cache
sudo chown www-data /var/lib/nginx/cache
sudo chmod 700 /var/lib/nginx/cache
</code></pre>
<p>The <code>levels=</code> parameter specifies how the cache will be organized.  Nginx will create a cache key by hashing the value of a key (configured below).  The levels we selected above dictate that a single character directory (this will be the last character of the hashed value) with a two character subdirectory (taken from the next two characters from the end of the hashed value) will be created.  You usually won't have to be concerned with the specifics of this, but it helps Nginx quickly find the relevant values.</p>

<p>The <code>keys_zone=</code> parameter defines the name for this cache zone, which we have called <code>backcache</code>.  This is also where we define how much metadata to store.  In this case, we are storing 8 MB of keys.  For each megabyte, Nginx can store around 8000 entries.  The <code>max_size</code> parameter sets the maximum size of the actual cached data.</p>

<p>Another directive we use above is <code>proxy_cache_key</code>.  This is used to set the key that will be used to store cached values.  This same key is used to check whether a request can be served from the cache.  We are setting this to a combination of the scheme (http or https), the HTTP request method, as well as the requested host and URI.</p>

<p>The <code>proxy_cache_valid</code> directive can be specified multiple times.  It allows us to configure how long to store values depending on the status code.  In our example, we store successes and redirects for 10 minutes, and expire the cache for 404 responses every minute.</p>

<p>Now, we have configured the cache zone, but we still need to tell Nginx when to use the cache.</p>

<p>In locations where we proxy to a backend, we can configure the use of this cache:</p>
<pre class="code-pre "><code class="code-highlight language-nginx hljs "><span class="hljs-comment"># server context</span>

<span class="hljs-title">location</span> /proxy-me {
    <span class="hljs-title">proxy_cache</span> backcache;
    <span class="hljs-title">proxy_cache_bypass</span> <span class="hljs-variable">$http_cache_control</span>;
    <span class="hljs-title">add_header</span> X-Proxy-Cache <span class="hljs-variable">$upstream_cache_status</span>;

    <span class="hljs-title">proxy_pass</span> <span class="hljs-url">http://backend</span>;
}

. . .

</code></pre>
<p>Using the <code>proxy_cache</code> directive, we can specify that the <code>backcache</code> cache zone should be used for this context.  Nginx will check here for a valid entry before passing to the backend.</p>

<p>The <code>proxy_cache_bypass</code> directive is set to the <code>$http_cache_control</code> variable.  This will contain an indicator as to whether the client is explicitly requesting a fresh, non-cached version of the resource.  Setting this directive allows Nginx to correctly handle these types of client requests.  No further configuration is required.</p>

<p>We also added an extra header called <code>X-Proxy-Cache</code>.  We set this header to the value of the <code>$upstream_cache_status</code> variable.  Basically, this sets a header that allows us to see if the request resulted in a cache hit, a cache miss, or if the cache was explicitly bypassed.  This is especially valuable for debugging, but is also useful information for the client.</p>

<h3 id="notes-about-caching-results">Notes about Caching Results</h3>

<p>Caching can improve the performance of your proxy enormously.  However, there are definitely considerations to keep in mind when configuring cache.</p>

<p>First, any user-related data should <em>not</em> be cached.  This could result in one user's data being presented to another user.  If your site is completely static, this is probably not an issue. </p>

<p>If your site has some dynamic elements, you will have to account for this in the backend servers.  How you handle this depends on what application or server is handling the backend processing.  For private content, you should set the <code>Cache-Control</code> header to "no-cache", "no-store", or "private" depending on the nature of the data:</p>

<ul>
<li><strong>no-cache</strong>: Indicates that the response shouldn't be served again without first checking that the data hasn't changed on the backend.  This can be used if the data is dynamic and important.  An ETag hashed metadata header is checked on each request and the previous value can be served if the backend returns the same hash value.</li>
<li><strong>no-store</strong>: Indicates that at no point should the data received ever be cached.  This is the safest option for private data, as it means that the data must be retrieved from the server every time.</li>
<li><strong>private</strong>: This indicates that no shared cache space should cache this data.  This can be useful for indicating that a user's browser can cache the data, but the proxy server shouldn't consider this data valid for subsequent requests.</li>
<li><strong>public</strong>: This indicates that the response is public data that can be cached at any point in the connection.</li>
</ul>

<p>A related header that can control this behavior is the <code>max-age</code> header, which indicates the number of seconds that any resource should be cached.</p>

<p>Setting these headers correctly, depending on the sensitivity of the content, will help you take advantage of cache while keeping your private data safe and your dynamic data fresh.</p>

<p>If your backend also uses Nginx, you can set some of this using the <code>expires</code> directive, which will set the <code>max-age</code> for <code>Cache-Control</code>:</p>
<pre class="code-pre "><code class="code-highlight language-nginx hljs "><span class="hljs-title">location</span> / {
    <span class="hljs-title">expires</span> <span class="hljs-number">60m</span>;
}

<span class="hljs-title">location</span> /check-me {
    <span class="hljs-title">expires</span> -<span class="hljs-number">1</span>;
}
</code></pre>
<p>In the above example, the first block allows content to be cached for an hour.  The second block sets the <code>Cache-Control</code> header to "no-cache".  To set other values, you can use the <code>add_header</code> directive, like this:</p>
<pre class="code-pre "><code class="code-highlight language-nginx hljs "><span class="hljs-title">location</span> /private {
    <span class="hljs-title">expires</span> -<span class="hljs-number">1</span>;
    <span class="hljs-title">add_header</span> Cache-Control <span class="hljs-string">"no-store"</span>;
}
</code></pre>
<div name="conclusion" data-unique="conclusion"></div><h2 id="conclusion">Conclusion</h2>

<p>Nginx is first and foremost a reverse proxy, which also happens to have the ability to work as a web server.  Because of this design decision, proxying requests to other servers is fairly straight forward.  Nginx is very flexible though, allowing for more complex control over your proxying configuration if desired.</p>

    </div>
</div>

<div class="tutorial-footer">
  <div class="tutorial-footer-details">

  <div class="postable-info-bar-container">
  <div class="postable-info-bar">
    <div class="left-section">
        <div class="tutorial-author-avatar">
    <a href="https://www.digitalocean.com/community/users/jellingwood"><div class="mod-avatar mod-avatar-small"><img alt="jellingwood" class="avatar avatar-small" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/60d901f61a6146e14a3e989bc1f4ef11" width="80" height="80"><span class="mod-star" title="" data-toggle="tooltip" data-container="body" data-original-title="MOD"><span class="mod-star-icon"></span></span></div></a>
  </div>
  <div class="author-and-date">
    <div class="tutorial-author">
      <div class="by">By: </div>
      <a href="https://www.digitalocean.com/community/users/jellingwood">Justin Ellingwood</a>
    </div>
  </div>

    </div>
    <div class="right-section">
      <div class="upvote-container">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="false" data-upvotable-id="1395" data-upvotable-type="Tutorial"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-heart"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-heart"></use></svg></span><span class="new-upvote-text">Upvote</span><span class="new-upvote-count">167</span></button>
      </div>
      <div class="section-item section-item-subscribe">
  <span class="opt-in-switch off signed-out-subscribe">
    <span class="subscribe-label">
      <span class="icon icon-subscribe"></span>
      <span class="subscription-label subscribe">Subscribe</span>
      <span class="icon icon-subscribed"></span>
      <span class="subscription-label subscribed">Subscribed</span>
    </span>
    <a data-toggle="modal" data-target="#sign-in-modal" class="mini-switch-container" href="javascript:void(0);"><div class="mini-switch off signed-out-subscribe"><div class="switch-handle"></div></div></a>
  </span>
</div>

<div class="section-item social-sharing-item">
  <div class="sharing">
  <a class="share-button" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching#" data-toggle="modal" data-target="#share-modal">
    <span class="icon icon-share-square"></span>
    <span class="share-button-text">Share</span>
  </a>
</div>

</div>

    </div>
  </div>
</div>


  <div class="section-content tutorial-contributors one">


  </div>
</div>


  
  <div class="tutorial-ctas" style="background-image:url(https://assets.digitalocean.com/labs/btp/objectstorage.png), linear-gradient(to right, #04338b, #040434); background-position:bottom center; padding-top:-10px;">
  <div class="section-content">
    <div class="cta-description">
      <h2 style="color: rgb(255, 255, 255);">Introducing Object Storage</h2>

      <p style="color: rgb(255, 255, 255); padding: 15px 0px; line-height: 1.3em;">Store and serve a virtually unlimited amount of data. Sign up for early access and receive 1TB of free usage until October 31, 2017.</p>

      <a class="cloud-tutorial-cta" href="https://www.digitalocean.com/products/storage/object-storage/?utm_medium=btp_everyone_else_objectstorage" style="background:#FFF;color:#0069FF;">Learn More</a>
    </div>
  </div>
</div>
    <div class="related-tutorials">
    <div class="section-content">
      <h2>Related Tutorials</h2>

      <ul>
        <li><a class="related-link" href="https://www.digitalocean.com/community/tutorials/5-digitalocean-load-balancer-use-cases">5 DigitalOcean Load Balancer Use Cases</a></li>
<li><a class="related-link" href="https://www.digitalocean.com/community/tutorials/how-to-organize-digitalocean-cloud-firewalls">How To Organize DigitalOcean Cloud Firewalls</a></li>
<li><a class="related-link" href="https://www.digitalocean.com/community/tutorials/how-to-work-with-digitalocean-load-balancers-using-doctl">How To Work with DigitalOcean Load Balancers Using Doctl</a></li>
<li><a class="related-link" href="https://www.digitalocean.com/community/tutorials/how-to-configure-mysql-group-replication-on-ubuntu-16-04">How To Configure MySQL Group Replication on Ubuntu 16.04</a></li>
<li><a class="related-link" href="https://www.digitalocean.com/community/tutorials/how-to-configure-ssl-passthrough-on-digitalocean-load-balancers">How To Configure SSL Passthrough on DigitalOcean Load Balancers</a></li>

      </ul>
    </div>
  </div>

</div>

<div class="content-comments">
  <div class="section-content">
    <div class="tutorial commentable" id="tutorial_1395">

  <div class="comments-header">
    <h4 class="comments-count"><span>37 Comments</span></h4>
  </div>

  <div class="response response-form no-avatar">
  <div class="js-display-on-error flash error hidden"></div>


  <form class="content-form disabled-form" id="new_comment" action="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching/comments" accept-charset="UTF-8" data-remote="true" method="post"><input name="utf8" type="hidden" value="✓" disabled="disabled">

    <div class="meltdown_wrap" style="height: auto;"><div class="meltdown_topmargin"></div><div class="meltdown_bar"><ul class="meltdown_controls meltdown_controls_preview"><li class="meltdown_control-preview meltdown_control meltdown_controlbutton disabled" title="" data-original-title="Toggle Preview"><span>Preview</span></li></ul><div class="preview-header">Markdown Preview</div><ul class="meltdown_controls meltdown_controls_main"><li class="meltdown_control-bold meltdown_control meltdown_controlbutton disabled" title="" data-original-title="Bold"><span unselectable="on">B</span></li><li class="meltdown_control-italics meltdown_control meltdown_controlbutton disabled" title="" data-original-title="Italics"><span unselectable="on">I</span></li><li class="meltdown_control-h1 meltdown_control meltdown_controlbutton disabled" title="" data-original-title="Header 1"><span unselectable="on">H1</span></li><li class="meltdown_control-h2 meltdown_control meltdown_controlbutton disabled" title="" data-original-title="Header 2"><span unselectable="on">H2</span></li><li class="meltdown_control-h3 meltdown_control meltdown_controlbutton disabled" title="" data-original-title="Header 3"><span unselectable="on">H3</span></li><li class="meltdown_control-ul meltdown_control meltdown_controlbutton disabled" title="" data-original-title="Unordered List"><span unselectable="on">UL</span></li><li class="meltdown_control-ol meltdown_control meltdown_controlbutton disabled" title="" data-original-title="Ordered List"><span unselectable="on">OL</span></li><li class="meltdown_control-link meltdown_control meltdown_controlbutton disabled" title="" data-original-title="Link"><span unselectable="on">Link</span></li><li class="meltdown_control-code meltdown_control meltdown_controlbutton disabled" title="" data-original-title="Code"><span unselectable="on">Code</span></li><li class="meltdown_control-highlight meltdown_control meltdown_controlbutton disabled" title="" data-original-title="Highlight"><span unselectable="on">Highlight</span></li><li class="meltdown_control-table meltdown_control meltdown_controlbutton disabled" title="" data-original-title="Table"><span unselectable="on">Table</span></li></ul></div><div class="meltdown_editor-wrap"><div class="meltdown_editor-deco"><textarea name="comment[content]" id="comment_content" placeholder="Leave a comment..." class="js-comment-content tutorial-comment-field meltdown_editor" data-markdown="true" disabled="disabled" style="overflow: hidden; word-wrap: break-word; resize: none; height: 120px;"></textarea></div></div><div class="meltdown_preview-wrap"><div class="meltdown_preview-wrap2"><div class="meltdown_preview-error-message">Could not load preview. <a href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching#">Try again</a></div><div class="meltdown_preview-loading-message">Loading preview...</div><div class="meltdown_preview content-body"></div></div></div><div class="meltdown_bottommargin"></div></div>

      <div class="log-in-notice "><a href="https://www.digitalocean.com/community/auth/digitalocean">Log In to Comment</a></div>

    <div class="clearfix"></div>
</form>
</div>


  <div class="comments">
    <ul class="response-list">
          <a class="hidden" rel="nofollow" data-remote="true" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching/comments">Load</a>
    <li id="comment_23302" data-level="0" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container ">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="23302" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">7</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/chrishaas">chrishaas</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=23302">November 26, 2014</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>Very, very, very well written and thorough!</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_23302">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_23302"></div>
</div>
    </div>

  </li>

    
      <li id="comment_23681" data-level="0" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container ">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="23681" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/ivanmaglica">IvanMaglica</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=23681">December  3, 2014</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>Little correction: "key<em>zone" must be corrected to "keys</em>zone". Nginx does not very much information in errors.log</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_23681">


  <div class="comments">
    <ul class="response-list">
      

      <li id="comment_23682" data-level="1" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container comment-reply-container">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="23682" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/ivanmaglica">IvanMaglica</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=23682">December  3, 2014</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>with underscores between keys and zone</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_23682">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_23682"></div>
</div>
    </div>

  </li>

      <li id="comment_23683" data-level="1" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container comment-reply-container">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="23683" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/jellingwood">jellingwood</a></span>
          <span class="mod-badge">MOD</span>
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=23683">December  3, 2014</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>Ah, nice catch.  I've updated the article.  Thanks <a href="https://www.digitalocean.com/community/users/ivanmaglica" class="username-tag">@IvanMaglica</a>!</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_23683">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_23683"></div>
</div>
    </div>

  </li>



    </ul>
  </div>


  <div id="reply_anchor_comment_23681"></div>
</div>
    </div>

  </li>

      <li id="comment_24669" data-level="0" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container ">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="24669" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/jonathanwexler">jonathanwexler</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=24669">December 21, 2014</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>Hi Justin - really great tutorial.</p>

<p>Actually, what I am specifically trying to get running well is <em>NGINX server blocks using Docker containers</em> - with NGINX as both the host reverse proxy, and the web server inside the Docker containers - which are in turn all running Wordpress.</p>

<p>It would be great for me - and I suspect a lot of Digital Ocean users - if you could write such a tutorial - so basically <em>we could run many Wordpress Docker containers inside a single Droplet</em>.</p>

<p>If this can add some good luck - my best friend is also a technical writer named Justin - though he is from Montreal. Thanks profusely.</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_24669">


  <div class="comments">
    <ul class="response-list">
      

      <li id="comment_24736" data-level="1" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container comment-reply-container">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="24736" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">1</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/jellingwood">jellingwood</a></span>
          <span class="mod-badge">MOD</span>
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=24736">December 22, 2014</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p><a href="https://www.digitalocean.com/community/users/jonathanwexler" class="username-tag">@jonathanwexler</a>:  Although we don't have a guide for that configuration specifically, we do have one that covers <a href="https://www.digitalocean.com/community/tutorials/docker-explained-how-to-containerize-and-use-nginx-as-a-proxy" rel="nofollow">how to use Nginx as a containerized reverse proxy</a>.</p>

<p>Take a look through that guide and let us know what parts of the setup you want to try still need explanation.  That would help us try to narrow the scope for a potential article.</p>
</div>
            <div class="snippet"><img class="snippet-image" alt="" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/default_community_sharing-65c1cc547375d6e37cc45195b3686769.png"><div class="snippet-content"><div class="snippet-title"><a href="https://www.digitalocean.com/community/tutorials/docker-explained-how-to-containerize-and-use-nginx-as-a-proxy">Docker Explained: How To Containerize and Use Nginx as a Proxy</a></div><div class="snippet-author">by O.S Tezer</div><div class="snippet-description">In this DigitalOcean article, our goal is to learn about creating a docker container from a base image and building it to run Nginx (layer by layer). Later, following the steps from the beginning, we create a Dockerfile to automate the process using a custom input file for configurations. In the end, using this Nginx docker image, it becomes possible to create self-contained sandboxes running Nginx, which can be used to serve "dockerised" applications.</div></div></div>
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_24736">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_24736"></div>
</div>
    </div>

  </li>

      <li id="comment_24783" data-level="1" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container comment-reply-container">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="24783" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/jonathanwexler">jonathanwexler</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=24783">December 22, 2014</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>Thanks <a href="https://www.digitalocean.com/community/users/jellingwood" class="username-tag">@jellingwood</a> —  I am working on notes to send you (I too am a technical writer!) - can you tell me where it is best to post them?</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_24783">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_24783"></div>
</div>
    </div>

  </li>

      <li id="comment_24822" data-level="1" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container comment-reply-container">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="24822" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/jellingwood">jellingwood</a></span>
          <span class="mod-badge">MOD</span>
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=24822">December 23, 2014</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p><a href="https://www.digitalocean.com/community/users/jonathanwexler" class="username-tag">@jonathanwexler</a>: Oh, that's awesome! We have a page for suggestions <a href="https://www.digitalocean.com/community/tutorials/digitalocean-community-article-suggestions-and-ideas" rel="nofollow">here</a>.  We have a bit of a backlog at the moment, but that's the best way to get your idea onto our list of topics to cover.</p>

<p>Thanks again for the suggestions!</p>
</div>
            <div class="snippet"><img class="snippet-image" alt="" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/default_community_sharing-65c1cc547375d6e37cc45195b3686769.png"><div class="snippet-content"><div class="snippet-title"><a href="https://www.digitalocean.com/community/tutorials/digitalocean-community-article-suggestions-and-ideas">DigitalOcean Community Article Suggestions and Ideas</a></div><div class="snippet-description">&lt;h2&gt;Our Article List&lt;/h2&gt;&lt;hr&gt;Since we invited our developer community to &lt;a href="https://www.digitalocean.com/write-for-digitalocean"&gt;write articles&lt;/a&gt; for our knowledge base, we have had many people ask for a list of in-demand articles.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Let us know what you'd like to see in...</div></div></div>
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_24822">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_24822"></div>
</div>
    </div>

  </li>

      <li id="comment_25815" data-level="1" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container comment-reply-container">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="25815" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/jonathanwexler">jonathanwexler</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=25815">January 11, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>FYI  <a href="https://www.digitalocean.com/community/users/jellingwood" class="username-tag">@jellingwood</a> I sort of figured this all out myself.</p>

<p>I will try to compose an article on wordpress-docker containers-and DNS soon.</p>

<p>I am figuring out the last kinks, then would love to share it with the DigitalOcean community :)</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_25815">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_25815"></div>
</div>
    </div>

  </li>

      <li id="comment_25820" data-level="1" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container comment-reply-container">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="25820" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/jellingwood">jellingwood</a></span>
          <span class="mod-badge">MOD</span>
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=25820">January 11, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p><a href="https://www.digitalocean.com/community/users/jonathanwexler" class="username-tag">@jonathanwexler</a>: Awesome! I'm glad you got that sorted. A+! </p>

<p>If you plan on having it on DigitalOcean, make sure you go through the proper channels <em>before</em> you begin writing.</p>

<p><a href="https://www.digitalocean.com/community/get-paid-to-write" rel="nofollow">This</a> page will explain more of the details. Thanks again for the heads up and good luck! </p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_25820">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_25820"></div>
</div>
    </div>

  </li>



    </ul>
  </div>


  <div id="reply_anchor_comment_24669"></div>
</div>
    </div>

  </li>

      <li id="comment_25813" data-level="0" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container ">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="25813" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/nadavkav">nadavkav</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=25813">January 11, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>Thank you! illuminating and easy to read :-)</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_25813">


  <div class="comments">
    <ul class="response-list">
      

    


    </ul>
  </div>


  <div id="reply_anchor_comment_25813"></div>
</div>
    </div>

  </li>

      <li id="comment_26728" data-level="0" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container ">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="26728" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/jcyrss">jcyrss</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=26728">January 27, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>Very good article, Justin. Thank you, that's what I've been looking for.</p>

<p>And I have another question about buffering. </p>

<p>Does Nginx also buffer http request from client? I mean, if Nginx get a http request from client, does it create connection with upstream server immediatly? Or it will create connection after it get a whole http request?</p>

<p>You know, many application server frameworks use worker-thread-pool model. If the client machine is far from Nginx and upstream server, without buffering http request in Nginx side, upstream server will waste pretty much CPU resource on waiting for completing a http request.</p>

<p>Thanks.</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_26728">


  <div class="comments">
    <ul class="response-list">
      

      <li id="comment_26864" data-level="1" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container comment-reply-container">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="26864" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/jellingwood">jellingwood</a></span>
          <span class="mod-badge">MOD</span>
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=26864">January 28, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p><a href="https://www.digitalocean.com/community/users/jcyrss" class="username-tag">@jcyrss</a>: Nginx will buffer the data until the entire POST is received.</p>

<p>It keeps this data in a buffer (in RAM), which can be configured through the <code>client_body_buffer_size</code> directive.  If the client request exceeds the value of this directive, it will be written to a temporary file until the entire file is received.  Afterwards, it will relay the entire request to the upstream server.</p>

<p>I hope that helps.</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_26864">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_26864"></div>
</div>
    </div>

  </li>



    </ul>
  </div>


  <div id="reply_anchor_comment_26728"></div>
</div>
    </div>

  </li>

      <li id="comment_29017" data-level="0" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container ">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="29017" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/pravinlogicap">pravinlogicap</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=29017">March  4, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>Awesome, It's very useful for me to use with NODE.JS also for the new learner, Fantastic :)</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_29017">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_29017"></div>
</div>
    </div>

  </li>

      <li id="comment_30247" data-level="0" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container ">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="30247" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/myemailum14">myemailum14</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=30247">March 26, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>Hi, i've been trying to find this for hours. How do i get the server name chosen in upstream group at request. Thanks. $upstream_addr returns ip address</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_30247">


  <div class="comments">
    <ul class="response-list">
      

      <li id="comment_30248" data-level="1" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container comment-reply-container">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="30248" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/jellingwood">jellingwood</a></span>
          <span class="mod-badge">MOD</span>
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=30248">March 26, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p><a href="https://www.digitalocean.com/community/users/myemailum14" class="username-tag">@myemailum14</a>: I'm not sure if I'm parsing your question correctly, but I think you may be looking for some of the variables available with the <code>upstream</code> module <a href="http://nginx.org/en/docs/http/ngx_http_upstream_module.html#variables" rel="nofollow">here</a>.  If not, can you give some more detail about exact information you are looking for?</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_30248">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_30248"></div>
</div>
    </div>

  </li>



    </ul>
  </div>


  <div id="reply_anchor_comment_30247"></div>
</div>
    </div>

  </li>

      <li id="comment_30249" data-level="0" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container ">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="30249" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/myemailum14">myemailum14</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=30249">March 26, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p><a href="https://www.digitalocean.com/community/users/jellingwood" class="username-tag">@jellingwood</a>  hi this is what i want to do</p>

<p>say i have<br><br>
upstream myapp1 {<br>
        server <a href="http://www.abc.com/" rel="nofollow">www.abc.com:80</a>;<br>
        server <a href="http://www.asd.com/" rel="nofollow">www.asd.com:80</a>;<br>
}</p>
<pre class="code-pre "><code langs="">server {
    listen 80;
    location / {
        proxy_set_header Host            XXxXXX;  //this
</code></pre>
<p>..<br>
}</p>

<p>i want to set XXxxXXX as <a href="http://www.abc.com/" rel="nofollow">www.abc.com</a> or <a href="http://www.asd.com/" rel="nofollow">www.asd.com</a> based on whatever upstream server is chosen. I've been trying using conditonals, map, etc. But i'm new so im not getting anywhere.</p>

<p>the var upstreamd_addr gives ip not the domain name.</p>

<p>thanks for helping me out..</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_30249">


  <div class="comments">
    <ul class="response-list">
      

      <li id="comment_30252" data-level="1" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container comment-reply-container">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="30252" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/jellingwood">jellingwood</a></span>
          <span class="mod-badge">MOD</span>
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=30252">March 26, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p><a href="https://www.digitalocean.com/community/users/myemailum14" class="username-tag">@myemailum14</a>:  I'm having trouble thinking of a situation where you'd want to be doing domain-sensitive things during the load balancing process.  Typically, if you have separate domains, you don't want to be using an <code>upstream</code> block to pass traffic between them.  Instead, you'd want to set up a separate <code>server</code> block for each domain name and leave out the <code>upstream</code> block.</p>

<p>Basically, the issue that you're having is that <code>proxy_set_header</code> sets a header to pass to the upstream server <em>before</em> the upstream server is selected.  So you're not going to be able to modify the <code>Host</code> header based on the chosen upstream server because one hasn't been selected yet.</p>

<p>At least from what you've described, it sounds like you'd be better off with something simple like this:</p>
<pre class="code-pre "><code langs="">server {
    listen 80;
    server_name www.abc.com abc.com;

    . . .

}

server {
    listen 80;
    server_name www.asd.com asd.com;

    . . .

}
</code></pre>
<p>This allows you to serve two different sites with distinct content (or with the same content, if that's desired).</p>

<p>The <code>upstream</code> directive is more useful if 1) you have one domain name where all of your content will be requested and 2) you have multiple backend servers that each serve the same content, in order to spread out the load.</p>

<p>Hopefully I haven't misunderstood the problem.</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_30252">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_30252"></div>
</div>
    </div>

  </li>



    </ul>
  </div>


  <div id="reply_anchor_comment_30249"></div>
</div>
    </div>

  </li>

      <li id="comment_30256" data-level="0" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container ">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="30256" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/myemailum14">myemailum14</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=30256">March 27, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>if server hasn't been selected then how come i can get $upstream<em>addr right. I just wish i could get $upstream</em>url or something. </p>

<p>What i want to do is do load balancing AND use different sites. It's weird. But that's what i'm trying to do.</p>

<p>for reasons beyond my control however both asd.com and abc.com only respond if host header has their url in them. </p>

<p>therefore using map, conditional, variable, directive, default or whatever goes. I'm trying to set host header to the same domain. I can get upstream addr but not upstream url. </p>

<p>is there a way to program conditions in here or define default headers for each upstream. </p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_30256">


  <div class="comments">
    <ul class="response-list">
      

      <li id="comment_30275" data-level="1" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container comment-reply-container">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="30275" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/jellingwood">jellingwood</a></span>
          <span class="mod-badge">MOD</span>
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=30275">March 27, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p><a href="https://www.digitalocean.com/community/users/myemailum14" class="username-tag">@myemailum14</a>: I think <a href="http://mailman.nginx.org/pipermail/nginx/2011-June/027617.html" rel="nofollow">this link</a> is your best bet at getting something like that working.  I don't really have any ideas that go beyond that.  Maxim Dounin is an Nginx contributor and is incredibly knowledgeable about Nginx, so I would follow his advice closely.</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_30275">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_30275"></div>
</div>
    </div>

  </li>



    </ul>
  </div>


  <div id="reply_anchor_comment_30256"></div>
</div>
    </div>

  </li>

      <li id="comment_31778" data-level="0" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container ">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="31778" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/jptoinf">jptoinf</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=31778">April 30, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>Is nginx free to use? And can we drop other caching like redis or varnish relying on nginx caching? And which is better Apache or nginx for handling high load?</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_31778">


  <div class="comments">
    <ul class="response-list">
      

      <li id="comment_34398" data-level="1" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container comment-reply-container">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="34398" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/newhosting2015">newhosting2015</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=34398">June 30, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p><em>Is nginx free to use?</em> ... Yes, it's a free open source web server. <br>
<em>And can we drop other caching like redis or varnish relying on nginx caching?</em> Yes. Have a read of this tutorial for fastcgi caching. <a href="https://www.digitalocean.com/community/tutorials/how-to-setup-fastcgi-caching-with-nginx-on-your-vps" rel="nofollow">https://www.digitalocean.com/community/tutorials/how-to-setup-fastcgi-caching-with-nginx-on-your-vps</a><br>
<em>And which is better Apache or nginx for handling high load?</em> It's a largely debated matter of opinion and of course depends on the multitude of configurations, but IMO Nginx rules the roost! Hope that helps and good luck.</p>
</div>
            <div class="snippet"><img class="snippet-image" alt="" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/default_community_sharing-65c1cc547375d6e37cc45195b3686769.png"><div class="snippet-content"><div class="snippet-title"><a href="https://www.digitalocean.com/community/tutorials/how-to-setup-fastcgi-caching-with-nginx-on-your-vps">How to Setup FastCGI Caching with Nginx on your VPS</a></div><div class="snippet-author">by Jesin A</div><div class="snippet-description">Here's how to setup FastCGI caching with Nginx on your VPS.</div></div></div>
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_34398">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_34398"></div>
</div>
    </div>

  </li>



    </ul>
  </div>


  <div id="reply_anchor_comment_31778"></div>
</div>
    </div>

  </li>

    
      <li id="comment_33533" data-level="0" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container ">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="33533" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/hoangdoan">hoangdoan</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=33533">June 10, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>Thanks for your great article!</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_33533">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_33533"></div>
</div>
    </div>

  </li>

    
      <li id="comment_34666" data-level="0" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container ">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="34666" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/rhaynel">rhaynel</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=34666">July  6, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>Thank for the article, really help me!</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_34666">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_34666"></div>
</div>
    </div>

  </li>

      <li id="comment_34832" data-level="0" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container ">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="34832" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/adamachibo">adamachibo</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=34832">July  9, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>so sorry. I wanted to ask. whether this digitalocean service could breach the restriction speed my internet data plan after my internet data plan exceeded limit.?</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_34832">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_34832"></div>
</div>
    </div>

  </li>

      <li id="comment_36070" data-level="0" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container ">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="36070" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/simerng">simerng</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=36070">August  8, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p><a href="https://www.digitalocean.com/community/users/jellingwood" class="username-tag">@jellingwood</a> this is an awesome very well written article, probably the best available resource. </p>

<ol>
<li><p>U mention nginx caching can replace redis caching. But since we shouldn't cache user data, wouldn't it be more beneficial to cache database results with redis and the sort as opposed to caching full url responses?</p></li>
<li><p>Can we define cache control in global/http context and then specify within location context a different value as an override?</p></li>
<li><p>How do the values specified in the proxy<em>cache</em>valid section affect the cache control directive?</p></li>
<li><p>Does the cache control header directive apply to just the server, or does the browser use this information for its own caching decisions?</p></li>
</ol>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_36070">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_36070"></div>
</div>
    </div>

  </li>

      <li id="comment_36339" data-level="0" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container ">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="36339" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/moefar">moefar</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=36339">August 15, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>Well done!</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_36339">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_36339"></div>
</div>
    </div>

  </li>

      <li id="comment_36737" data-level="0" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container ">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="36737" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/mgvarley">mgvarley</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=36737">August 25, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>Thanks for the excellent article.  I am building a SaaS offering and will have different types of client - some dedicated and some multi-tenant.  I am considering using NGINX as an API Gateway and would like to isolate my dedicated clients on different servers / containers to my multi-tenant customers.  Does NGINX allow you to route to different servers by API key?</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_36737">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_36737"></div>
</div>
    </div>

  </li>

      <li id="comment_37482" data-level="0" class="comment-container">
    <div class="response comment-body-container    " data-highlight="">
      <div class="comment-upvote-container ">
        <button name="button" type="button" class="new-upvote-button" data-include-caret="true" data-upvotable-id="37482" data-upvotable-type="Comment"><span class="icon new-upvote-icon"><svg class="svg-icon svg-icon-upvote-empty"><use xlink:href="https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-upvote-empty"></use></svg></span><span class="new-upvote-count">0</span></button>
      </div>
      <div class="ox-auto">
        <div class="comment-header">
          <span class="response-name"><a class="username" href="https://www.digitalocean.com/community/users/kevinyu">KevinYu</a></span>
          
          <span class="response-time"><a rel="nofollow" class="post-time-link" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching?comment=37482">September 16, 2015</a></span>

          
        </div>

          <div class="response-body content-body">
            <div class=""><p>Great tutorial.<br>
I really appreciate it!</p>
</div>
            
          </div>

        

        <div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>


        <div class="content-actions">
  <div class="comment-actions">

    

    
  </div>

  <div class="comment-moderation-actions">
    <ul class="comment-moderation-actions-list ">
      







    </ul>
  </div>
</div>

      </div>
      <div class="clear"></div>
    </div>
    <div class="response-comments">
      <div class="response_comment commentable comment" id="response_comment_37482">


  <div class="comments">
    <ul class="response-list">
      



    </ul>
  </div>


  <div id="reply_anchor_comment_37482"></div>
</div>
    </div>

  </li></ul><div class="comment-pagination"><span class="previous_page disabled">Previous</span> <em class="current">1</em> <a rel="next nofollow" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching/comments?page=2">2</a> <a class="next_page" rel="next nofollow" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching/comments?page=2">Next</a></div>

      <div class="comments-spinner" style="display: none;"><div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>
</div>
  </div>

  <div class="load-more-container"><a class="load-more" href="javascript:void(0);"><span class="load-more-text">Load More Comments</span><div class="comments-spinner" style="display: none;"><div class="spinner spinner-large">
  <div class="bounce1"></div>
  <div class="bounce2"></div>
  <div class="bounce3"></div>
  
</div>
</div></a></div>
</div>


  </div>
</div>

<div class="creative-commons">
  <a class="creative-commons-image" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"><img rel="license" alt="Creative Commons License" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/creativecommons-08b32a9279fcd47fcd78ac6a26331389.png"></a>
    <div class="license-text">This work is licensed under a <a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.</div>
</div>





        <div class="clearfix"></div>
      </div>


      <footer class="Footer">
  <span class="Footer-logo icon-sammy"></span>

  <div>Copyright © 2017 DigitalOcean™ Inc.</div>

  <ul class="Footer-nav">
    <li><a href="https://www.digitalocean.com/community">Community</a></li>
    <li><a href="https://www.digitalocean.com/community/tutorials">Tutorials</a></li>
    <li><a href="https://www.digitalocean.com/community/questions">Questions</a></li>
    <li><a href="https://www.digitalocean.com/community/projects">Projects</a></li>
    <li><a href="https://www.digitalocean.com/community/tags">Tags</a></li>
    <li><a href="https://www.digitalocean.com/community/newsletter">Newsletter</a></li>
    <li>
      <a href="https://www.digitalocean.com/community/tutorials/feed">
        RSS <span class="icon-rss"></span>
</a>    </li>
  </ul>

  <br>

  <ul class="Footer-nav Footer-nav--secondary">
    <li><a href="https://www.digitalocean.com/features/one-click-apps/">Distros &amp; One-Click Apps</a></li>
    <li><a href="https://www.digitalocean.com/legal/terms/">Terms, Privacy, &amp; Copyright</a></li>
    <li><a href="https://www.digitalocean.com/security/">Security</a></li>
      <li><a data-toggle="modal" data-target="#sign-in-modal" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching#">Report a Bug</a></li>
    <li><a href="https://www.digitalocean.com/community/write-for-digitalocean">Write for DigitalOcean</a></li>
    <li><a href="http://store.digitalocean.com/">Shop</a></li>
  </ul>
</footer>





      <div id="sign-in-modal" class="modal fade mini-modal" style="display: none;">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1>Almost there!</h1>
        <a class="close-button" data-dismiss="modal" aria-label="close" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching"><span class="icon icon-close-light"></span></a>
      </div>
      <div class="modal-body">
        <div class="sign-in-message">Sign into your account, or create a new one, to start interacting.</div>

        <div class="sign-in-modal-actions">
          <a class="sign-in-link button blue-button" data-default-url="/community/auth/digitalocean" href="https://www.digitalocean.com/community/auth/digitalocean">Log In</a>
          <a class="sign-up-link button green-button" data-default-url="/community/auth/digitalocean?display=sessionless+register" href="https://www.digitalocean.com/community/auth/digitalocean?display=sessionless+register">Sign Up</a>
        </div>
      </div>
    </div>
  </div>
</div>



    
  <script>
    $(function() {
      if (!!window.init_sharing) {
        window.init_sharing();
      }
      new window.NewsletterSignup();
      new window.GrowableMarkdown({ target: '[data-growable-markdown]' });

      window.Bugsnag.beforeNotify = function(payload, metaData) {
        // custom logic to determine groupingHash
        metaData.groupingHash = "tutorialShow";
      }
    });
  </script>

  <div id="report-a-bug-modal" class="modal fade mini-modal" style="display: none;">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h1>Report a Bug</h1>
          <a class="close-button" data-dismiss="modal" aria-label="close" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching"><span class="icon icon-close-light"></span></a>
        </div>
        <div class="modal-body">
          <div class="report-a-bug-message text-center">Use this form to report bugs related to the Community</div>
          <div class="report-a-bug-actions do-form">
            <div class="form-wrap">
              <form class="new_bug_report" id="new_bug_report" action="https://www.digitalocean.com/community/bug_reports" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="✓"><input type="hidden" name="authenticity_token" value="ttp2LLjI4GxrlpsDgsNfs5vzTImfISYt2P/yfmPhV3BF+uOaDXcAQV8nEbdKfsq/7tli1CntjsN4QS4B0/w3ww==">
                <fieldset name="report-a-bug-info">
                <legend class="sr-only">Report a bug:</legend>
                  <div class="field">
                    <label for="bug_reporter_name" class="sr-only">Name</label>
                    <input placeholder="Name" id="bug_reporter_name" type="text" name="bug_report[name]">
                  </div>
                  <div class="field">
                    <label for="bug_reporter_email" class="sr-only">Email</label>
                    <input name="Email" placeholder="Email" id="bug_reporter_email" required="required" type="text">
                  </div>
                  <div class="field">
                    <label for="bug_reporter_message" class="sr-only">Message</label>
                    <textarea name="Message" placeholder="Message" id="bug_reporter_message" required="required" style="overflow: hidden; word-wrap: break-word; resize: none; height: 125px;"></textarea>
                  </div>

                  <div class="field actions">
                    <input type="submit" name="commit" value="Submit" class="button">
                  </div>
                </fieldset>
</form>            </div>
          </div>
        </div>
      </div>
    </div>
  </div>


    
  

<textarea tabindex="-1" aria-hidden="true" ,="" style="position: absolute; top: -999px; left: 0px; right: auto; bottom: auto; border: 0px; padding: 0px; box-sizing: content-box; word-wrap: break-word; overflow: hidden; transition: none; height: 0px !important; min-height: 0px !important; font-family: proxima-nova, sans-serif; font-size: 17px; font-weight: 400; font-style: normal; letter-spacing: 0px; text-transform: none; word-spacing: 0px; text-indent: 0px; line-height: normal; width: 58px;" class="autosizejs" id="autosizejs"></textarea><a id="scrollUp" href="https://www.digitalocean.com/community/tutorials/understanding-nginx-http-proxying-load-balancing-buffering-and-caching#top" style="position: fixed; z-index: 1000; display: none;">Scroll to top</a><div id="scrollUp-active" style="position: absolute; top: 300px; width: 100%; border-top: 1px dotted rgb(0, 255, 255); z-index: 1000;"></div><script type="text/javascript" id="">var wait_count=0,jQWait=window.setInterval(function(){window.jQuery&&function(){window.clearInterval(window.jQWait);var f=window.BelowTutorialPanel=function(b){$.extend(this,{activeTest:"default",panelBodyTarget:"div.tutorial-ctas",panelContentTarget:"div.cta-description",relatedLinksTarget:"div.related-tutorials",tagSelector:'a.tag:contains("$TAG")',experimentName:"Below Tutorial Panel",tutorialRecommendationPath:"https://assets.digitalocean.com/labs/tutorial_recommendations/",scrollCheckInterval:1E3},
b||{},{event_fired:!1});this.initialize()};$.extend(f.prototype,{initialize:function(){this.$panelBody=$($(this.panelBodyTarget).get(0));this.$relatedLinks=$(this.relatedLinksTarget);this.userTraits={};this.analyticsActive()&&(this.userTraits=window.analytics.user().traits());this.audience=this.getAudience(Object.keys(this.panelData),this.parseCookies(document.cookie),this.userTraits);this.panel=this.getPanel(this.panelData[this.audience]);this.panelContent=this.panel.content[Math.floor(Math.random()*
this.panel.content.length)];this.$panelBody.attr("style",this.panel.style||"").find("h2").text(this.panelContent.title||"").css({color:this.panel.darkBG?"#FFF":"inherit"}).end().find("p").html(this.panelContent.desc||"").css({color:this.panel.darkBG?"#FFF":"inherit",padding:"15px 0","line-height":"1.3em"}).end().find(".cloud-tutorial-cta").text(this.panelContent.cta||"").attr("style",this.panel.darkBG?"background:#FFF;color:#0069FF;":"").attr("href",this.panelContent.url+(0<this.panelContent.url.indexOf("?")?
"\x26":"?")+"utm_medium\x3dbtp_"+this.audience+"_"+this.panel.name);"recommendation_algo"===this.panel.name?this.loadRecommendations($("body").data("tutorial-id"),this.panel.template,this.panel.template_short):this.initTracking(this.$panelBody.offset().top,this.$panelBody.height(),this.audience+" \x3e "+this.panel.name+" \x3e "+this.panelContent.cta||"",this.$panelBody.find("a"))},loadRecommendations:function(b,e,a){$.getJSON(this.tutorialRecommendationPath+b+".json",function(a){var b=a.length,c,
g,f="{SLUG} {TITLE} {DESC} {LIKES} {DATE} {COMMENTS}".split(" "),k="";if(0<b){for(c=0;c<b&&2>c;c++){var h=e;for(g=0;g<f.length;g++)h=h.replace(f[g],a[c][g]);k+=h.replace("{FIRST}",0==c?"margin-right:15px;":"")}this.$panelBody.find("h2").after('\x3cdiv style\x3d"text-align:center; padding:15px 0;"\x3e'+k+"\x3c/div\x3e").end().find("p, .cloud-tutorial-cta").remove();this.$relatedLinks.remove();this.initTracking(this.$panelBody.offset().top,this.$panelBody.height(),this.audience+" \x3e "+this.panel.name+
" \x3e "+this.panelContent.cta||"",this.$panelBody.find("a"))}}.bind(this)).error(function(){var b="",d;for(d=0;4>d;d++)b+=a.replace("{FIRST}",0==d%2?"margin-right:15px;":"").replace("{TITLE}",this.$relatedLinks.find(".related-link").eq(d).text()).replace("{SLUG}",this.$relatedLinks.find(".related-link").eq(d).attr("href"));this.$panelBody.find("h2").after('\x3cdiv style\x3d"text-align:center; padding:15px 0;"\x3e'+b+"\x3c/div\x3e").end().find("p, .cloud-tutorial-cta").remove();this.$relatedLinks.remove();
this.initTracking(this.$panelBody.offset().top,this.$panelBody.height(),this.audience+" (fallback) \x3e "+this.panel.name+" \x3e "+this.panelContent.cta||"",this.$panelBody.find("a"))}.bind(this))},getPanel:function(b){var e=b.length,a,c,d=[];for(a=0;a<e;a++){if("tags"in b[a])for(c=0;c<b[a].tags.length;c++)if(0<$(this.tagSelector.replace("$TAG",b[a].tags[c])).length)return b[a];"priority"in b[a]&&d.push({panel:a,priority:b[a].priority})}if(0<d.length)for(a=0;a<d.length;a++)if(Math.random()<d[a].priority)return b[d[a].panel];
return b[Math.floor(Math.random()*e)]},getAudience:function(b,e,a){return-1<b.indexOf("customers")&&("signed_in"in e||"ajs_user_id"in e&&10<e.ajs_user_id.length)?"customers":-1<b.indexOf("refcode")&&"refcode"in e?"refcode":-1<b.indexOf("buildmode")&&"recent"in a&&a.recent instanceof Array&&4===a.recent.length&&2===a.recent[3].length&&8>Math.round(+new Date/864E5)-a.recent[3][1]?"buildmode":-1<b.indexOf("regulars")&&"recent"in a&&a.recent instanceof Array&&4===a.recent.length&&2===a.recent[3].length&&
30>Math.round(+new Date/864E5)-a.recent[3][1]?"regulars":"everyone_else"},analyticsActive:function(){return"object"===typeof window.analytics},parseCookies:function(b){b=b.split(";");var e={},a;for(a=0;a<b.length;a++){var c=b[a].split("\x3d");e[c[0].trim()]=c[1].trim()}return e},convertToId:function(b){return"string"===typeof b?b.replace(/\W+/g,"_").toLowerCase():""},initTracking:function(b,e,a,c){if(this.analyticsActive()){var d,f=window.setInterval(function(){d=$(window).scrollTop();d+$(window).height()>
b-e&&(window.clearInterval(f),analytics.track("Experiment Viewed",{experimentId:this.convertToId(this.experimentName),experimentName:this.experimentName,variationId:this.convertToId(a),variationName:a}))}.bind(this),1E3);analytics.trackLink(c,"Experiment Success",{experimentId:this.convertToId(this.experimentName),experimentName:this.experimentName,variationId:this.convertToId(a),variationName:a})}}});new f({panelData:{refcode:[{name:"referrals",style:"background-image:url(https://assets.digitalocean.com/labs/btp/referrals.png); background-color:#1b78f8; background-position:bottom center;",
darkBG:!0,content:[{title:"Your free credit awaits!",desc:"Sign up to redeem your credit, and start deploying your sites and apps within minutes.",cta:"Use Your Credit",url:"https://cloud.digitalocean.com/registrations/new"},{title:"Free credit active.",desc:"You came to digitalocean.com via someone\x26apos;s referral link in the past month,\x3cbr\x3e making you eligible for $10 credit when you sign up for an account.",cta:"Redeem Credit",url:"https://cloud.digitalocean.com/registrations/new"}]}],
customers:[{name:"highcpu",priority:.5,style:"background-image:url(https://assets.digitalocean.com/labs/btp/highcpu.png); background-color:#1b78f8; background-position:bottom center; padding-top:-10px;",darkBG:!0,content:[{title:"Introducing High CPU Droplets",desc:"Spin up droplets with a new industry-leading CPU for compute intensive tasks like high-load app-servers and queue/batch processing.",cta:"Get Access Here",url:"https://www.digitalocean.com/products/compute/high-cpu/"}]},{name:"objectstorage",
priority:.5,style:"background-image:url(https://assets.digitalocean.com/labs/btp/objectstorage.png), linear-gradient(to right, #04338b, #040434);  background-position:bottom center; padding-top:-10px;",darkBG:!0,content:[{title:"Early access to Object Storage",desc:"Store and serve a virtually unlimited amount of data. Sign up for early access and receive 1TB of free usage until October 31, 2017.",cta:"Learn More",url:"https://www.digitalocean.com/products/storage/object-storage/"}]},{name:"firewalls",
tags:["Firewall"],style:"background-image:url(https://assets.digitalocean.com/labs/btp/firewalls.png); background-color:#1b78f8; background-position:bottom center; padding-top:-10px;",darkBG:!0,content:[{title:"New on DigitalOcean: Cloud Firewalls",desc:"Secure your infrastructure and define what services are visible on your Droplets. Cloud Firewalls are free and perfect for staging and production deployments.",cta:"Get started with Firewalls",url:"https://cloud.digitalocean.com/networking/firewalls"}]},
{name:"meetups",style:"background-image:url(https://assets.digitalocean.com/labs/btp/meetups.png); background-color:#172232; background-position:bottom center; padding-top:-10px;",darkBG:!0,content:[{title:"DigitalOcean, live from your hometown",desc:"Meet developers of all skill levels to share resources and form discussions around cloud and DevOps topics. Attend a meetup, start one in your city, or apply to speak at one near you.",cta:"Find a Meetup",url:"https://www.meetup.com/pro/digitalocean/"}]},
{name:"load-balancers",tags:["Load Balancing"],style:"background-image:url(https://assets.digitalocean.com/labs/btp/load-balancers.png); background-color:#1b78f8; background-position:bottom center;",darkBG:!0,content:[{title:"Load Balancers now available on DigitalOcean",desc:"Distribute traffic across your infrastructure, managed from the control panel or API.",cta:"Learn More",url:"https://cloud.digitalocean.com/networking/load_balancers"}]}],buildmode:[{name:"ft_test",style:"background-image:url(https://assets.digitalocean.com/labs/btp/general.png); background-color:#1b78f8; background-position:bottom center; overflow:hidden;",
darkBG:!0,content:[{title:"Get started on DigitalOcean with free $10 credit",desc:"You\u2019ve read five tutorials on DigitalOcean this week and are well on your way to managing your infrastructure. Test your newfound knowledge by trying out DigitalOcean with $10 in free credit.",cta:"Create a Free Account",url:"https://cloud.digitalocean.com/registrations/new?refcode\x3d74a1c5d63dac"},{title:"Get started on DigitalOcean with free $10 credit",desc:"Cheers to you, voracious reader of Community Tutorials. You've read five tutorials in the last week!\x3cbr/\x3eIf you haven't already spun up servers on DO, here's $10 to give it a try.",
cta:"Create an Account to Redeem Credit",url:"https://cloud.digitalocean.com/registrations/new?refcode\x3d74a1c5d63dac"}]}],regulars:[{name:"deploy",content:[{title:"Spin up an SSD cloud server in under a minute.",desc:"Simple setup. Full root access. Straightforward pricing.",cta:"Deploy Server",url:"https://cloud.digitalocean.com/registrations/new"}]},{name:"firewalls",tags:["Firewall"],style:"background-image:url(https://assets.digitalocean.com/labs/btp/firewalls.png); background-color:#1b78f8; background-position:bottom center; padding-top:-10px;",
darkBG:!0,content:[{title:"New on DigitalOcean: Cloud Firewalls",desc:"Secure your infrastructure and define what services are visible on your Droplets. Cloud Firewalls are free and perfect for staging and production deployments.",cta:"More on Cloud Firewalls",url:"https://blog.digitalocean.com/cloud-firewalls-secure-droplets-by-default/"}]},{name:"oneclicks",style:"background-image:url(https://assets.digitalocean.com/labs/btp/oneclicks.png), linear-gradient(to bottom, #4e9afb 0%,#0b7fff 100%); background-position:bottom center; padding-top:-10px;",
darkBG:!0,content:[{title:"Pre-built applications on DigitalOcean",desc:"Get straight to deploying your code using one of our pre-configured images supporting Node.js, Rails, Redis, MongoDB, Cassandra, Docker, and many more.",cta:"View One-Clicks",url:"https://www.digitalocean.com/products/one-click-apps/"}]},{name:"recommendation_algo",style:"background-image:url(https://assets.digitalocean.com/labs/btp/general.png); background-color:#1b78f8; background-position:bottom center; overflow:hidden;",
darkBG:!0,template:'\x3ca style\x3d"width:330px; height:130px; border-radius:3px; padding:12px 15px 15px; float:left; margin-bottom:100px; background-color: #f9fcff; color: #0080ff; border: 1px solid #7fc0ff; text-align:left; position:relative; {FIRST}" href\x3d"/community/tutorials/{SLUG}?utm_medium\x3dbtb_algo"\x3e\x3cstrong style\x3d"font-size:15px; line-height:1.3; width:100%; overflow: hidden; text-overflow: ellipsis; -webkit-box-orient: vertical; display: -webkit-box; -webkit-line-clamp: 2;"\x3e{TITLE}\x3c/strong\x3e\x3chr style\x3d"border-top:1px solid #0080ff; opacity:0.25;"\x3e\x3cspan style\x3d"font-size: 13px; line-height:1.3; width:100%; overflow: hidden; text-overflow: ellipsis; -webkit-box-orient: vertical; display: -webkit-box; -webkit-line-clamp: 2; max-height:2.6em;"\x3e{DESC}\x3c/span\x3e\x3cdiv style\x3d"font-size: 13px; position: absolute; left: 15px; right: 15px; bottom: 10px;"\x3e \x3cspan style\x3d"margin-right: 4px;"\x3e\x3csvg style\x3d"height: 12px; width: 12px; stroke: currentColor; position: relative; top: -1px; color: #0080ff; vertical-align: middle;"\x3e\x3cuse xmlns:xlink\x3d"http://www.w3.org/1999/xlink" xlink:href\x3d"https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-comment"\x3e\x3c/use\x3e\x3c/svg\x3e {COMMENTS}\x3c/span\x3e \x3cspan style\x3d"margin-right: 4px;"\x3e\x3csvg style\x3d"height: 12px; width: 12px; stroke: currentColor; fill:#0080ff; position: relative; top: -1px; color: #0080ff; vertical-align: middle;"\x3e\x3cuse xmlns:xlink\x3d"http://www.w3.org/1999/xlink" xlink:href\x3d"https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-heart"\x3e\x3c/use\x3e\x3c/svg\x3e {LIKES}\x3c/span\x3e\x3cspan style\x3d"float:right; opacity:0.5;"\x3e{DATE}\x3c/span\x3e\x3c/div\x3e\x3c/a\x3e',
template_short:'\x3ca style\x3d"width:330px; height:40px; border-radius:3px; padding:12px 15px 15px; float:left; margin-bottom:20px; background-color: #f9fcff; color: #0080ff; border: 1px solid #7fc0ff; text-align:left; position:relative; {FIRST}" href\x3d"{SLUG}?utm_medium\x3dbtb_algo"\x3e\x3cstrong style\x3d"font-size:15px; line-height:1.3; width:100%; overflow: hidden; text-overflow: ellipsis; -webkit-box-orient: vertical; display: -webkit-box; -webkit-line-clamp: 2;"\x3e{TITLE}\x3c/strong\x3e\x3c/a\x3e',
content:[{title:"Related Tutorials:",desc:"",cta:"View Related Tutorial",url:""}]},{name:"meetups",style:"background-image:url(https://assets.digitalocean.com/labs/btp/meetups.png); background-color:#172232; background-position:bottom center; padding-top:-10px;",darkBG:!0,content:[{title:"DigitalOcean, live from your hometown",desc:"Meet developers of all skill levels to share resources and form discussions around cloud and DevOps topics. Attend a meetup, start one in your city, or apply to speak at one near you.",
cta:"Find a Meetup",url:"https://www.meetup.com/pro/digitalocean/"}]},{name:"highcpu",style:"background-image:url(https://assets.digitalocean.com/labs/btp/highcpu.png); background-color:#1b78f8; background-position:bottom center; padding-top:-10px;",darkBG:!0,content:[{title:"Introducing High CPU Droplets",desc:"Spin up servers with a new industry-leading CPU for compute intensive tasks like high-load app-servers and queue/batch processing.",cta:"Get Access Here",url:"https://www.digitalocean.com/products/compute/high-cpu/"}]},
{name:"objectstorage",style:"background-image:url(https://assets.digitalocean.com/labs/btp/objectstorage.png), linear-gradient(to right, #04338b, #040434); background-position:bottom center; padding-top:-10px;",darkBG:!0,content:[{title:"Introducing Object Storage",desc:"Store and serve a virtually unlimited amount of data. Sign up for early access and receive 1TB of free usage until October 31, 2017.",cta:"Learn More",url:"https://www.digitalocean.com/products/storage/object-storage/"}]}],everyone_else:[{name:"objectstorage",
priority:.75,style:"background-image:url(https://assets.digitalocean.com/labs/btp/objectstorage.png), linear-gradient(to right, #04338b, #040434); background-position:bottom center; padding-top:-10px;",darkBG:!0,content:[{title:"Introducing Object Storage",desc:"Store and serve a virtually unlimited amount of data. Sign up for early access and receive 1TB of free usage until October 31, 2017.",cta:"Learn More",url:"https://www.digitalocean.com/products/storage/object-storage/"}]},{name:"firewalls",
tags:["Firewall"],style:"background-image:url(https://assets.digitalocean.com/labs/btp/firewalls.png); background-color:#1b78f8; background-position:bottom center; padding-top:-10px;",darkBG:!0,content:[{title:"New on DigitalOcean: Cloud Firewalls",desc:"Secure your infrastructure and define what services are visible on your Droplets. Cloud Firewalls are free and perfect for staging and production deployments.",cta:"More on Cloud Firewalls",url:"https://blog.digitalocean.com/cloud-firewalls-secure-droplets-by-default/"}]},
{name:"wallpapers",style:"background-image:url(https://assets.digitalocean.com/labs/btp/wallpapers.png); background-color:#1b78f8; background-position:bottom center;",darkBG:!0,content:[{title:"A work of art on your desktop",desc:"Like our tutorial illustrations? Choose the right one for your workspace from among dozens of original DigitalOcean illustrations.",cta:"Find a Wallpaper",url:"https://imgur.com/a/q6i58"}]},{name:"load-balancers",style:"background-image:url(https://assets.digitalocean.com/labs/btp/load-balancers.png); background-color:#1b78f8; background-position:bottom center;",
darkBG:!0,content:[{title:"Load Balancers now available on DigitalOcean",desc:"Distribute traffic across your infrastructure, managed from the control panel or API.",cta:"Learn More",url:"https://www.digitalocean.com/products/load-balancer/"}]},{name:"recommendation_algo",style:"background-image:url(https://assets.digitalocean.com/labs/btp/general.png); background-color:#1b78f8; background-position:bottom center; overflow:hidden;",darkBG:!0,template:'\x3ca style\x3d"width:330px; height:130px; border-radius:3px; padding:12px 15px 15px; float:left; margin-bottom:100px; background-color: #f9fcff; color: #0080ff; border: 1px solid #7fc0ff; text-align:left; position:relative; {FIRST}" href\x3d"/community/tutorials/{SLUG}?utm_medium\x3dbtb_algo"\x3e\x3cstrong style\x3d"font-size:15px; line-height:1.3; width:100%; overflow: hidden; text-overflow: ellipsis; -webkit-box-orient: vertical; display: -webkit-box; -webkit-line-clamp: 2;"\x3e{TITLE}\x3c/strong\x3e\x3chr style\x3d"border-top:1px solid #0080ff; opacity:0.25;"\x3e\x3cspan style\x3d"font-size: 13px; line-height:1.3; width:100%; overflow: hidden; text-overflow: ellipsis; -webkit-box-orient: vertical; display: -webkit-box; -webkit-line-clamp: 2; max-height:2.6em;"\x3e{DESC}\x3c/span\x3e\x3cdiv style\x3d"font-size: 13px; position: absolute; left: 15px; right: 15px; bottom: 10px;"\x3e \x3cspan style\x3d"margin-right: 4px;"\x3e\x3csvg style\x3d"height: 12px; width: 12px; stroke: currentColor; position: relative; top: -1px; color: #0080ff; vertical-align: middle;"\x3e\x3cuse xmlns:xlink\x3d"http://www.w3.org/1999/xlink" xlink:href\x3d"https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-comment"\x3e\x3c/use\x3e\x3c/svg\x3e {COMMENTS}\x3c/span\x3e \x3cspan style\x3d"margin-right: 4px;"\x3e\x3csvg style\x3d"height: 12px; width: 12px; stroke: currentColor; fill:#0080ff; position: relative; top: -1px; color: #0080ff; vertical-align: middle;"\x3e\x3cuse xmlns:xlink\x3d"http://www.w3.org/1999/xlink" xlink:href\x3d"https://www.digitalocean.com/assets/community/icon-sprite-d76eb75d70ccf8ffb4c0b47b7dbc88ca.svg#icon-heart"\x3e\x3c/use\x3e\x3c/svg\x3e {LIKES}\x3c/span\x3e\x3cspan style\x3d"float:right; opacity:0.5;"\x3e{DATE}\x3c/span\x3e\x3c/div\x3e\x3c/a\x3e',
template_short:'\x3ca style\x3d"width:330px; height:40px; border-radius:3px; padding:12px 15px 15px; float:left; margin-bottom:20px; background-color: #f9fcff; color: #0080ff; border: 1px solid #7fc0ff; text-align:left; position:relative; {FIRST}" href\x3d"{SLUG}?utm_medium\x3dbtb_algo"\x3e\x3cstrong style\x3d"font-size:15px; line-height:1.3; width:100%; overflow: hidden; text-overflow: ellipsis; -webkit-box-orient: vertical; display: -webkit-box; -webkit-line-clamp: 2;"\x3e{TITLE}\x3c/strong\x3e\x3c/a\x3e',
content:[{title:"Related Tutorials:",desc:"",cta:"View Related Tutorial",url:""}]},{name:"monitoring",tags:["monitoring"],style:"background-image:url(https://assets.digitalocean.com/labs/btp/monitoring.png); background-color:#1b78f8; background-position:bottom center; padding-top:-10px;",darkBG:!0,content:[{title:"Free Performance Monitoring and Alerting",desc:"Know how your Droplets are performing over time and get notified whenever critical issues arise in your infrastructure for free with Monitoring on DigitalOcean.",
cta:"Learn More",url:"https://www.digitalocean.com/products/monitoring/"},{title:"DigitalOcean Monitoring",desc:"Collect metrics, monitor Droplet performance, and receive alerts when \x3cbr\x3eproblems arise in your infrastructure\u2014no configuration required. Coming 2017.",cta:"Read More",url:"https://www.digitalocean.com/products/monitoring/"}]},{name:"d4d",style:"background-image:url(https://assets.digitalocean.com/labs/btp/d4d.png); background-color:#1b78f8; background-position:bottom center; padding-top:-10px;",
darkBG:!0,content:[{title:"Need free Droplets for a presentation? Let\u2019s talk.",desc:"Receive free infrastructure credits to power your next tech talk or live demo. ",cta:"Learn More",url:"https://www.digitalocean.com/droplets-for-demos/"},{title:"Open Source Presentation Grants",desc:"Receive free infrastructure credits to power your next tech talk or live demo. ",cta:"Learn More",url:"https://www.digitalocean.com/droplets-for-demos/"}]}],inactive:[{tags:["disabled"],style:"background-image:url(https://assets.digitalocean.com/labs/btp/hatch.png); background-color:#ffffff; background-position:bottom center; padding-top:-10px;",
content:[{title:"It\u2019s Hatchening!",desc:"Gain a stronger foothold as you scale your startup with 12 months of infrastructure credit, technical support, resources, and access to exclusive perks from the Hatch community.",cta:"Read More",url:"https://www.digitalocean.com/hatch/"}]},{name:"write4do",style:"background-image:url(https://assets.digitalocean.com/labs/btp/write4do.png); background-color:#1b78f8; background-position:bottom center;",darkBG:!0,content:[{title:"Write for DigitalOcean",desc:"Share your technical expertise with an audience of millions.",
cta:"Learn More",url:""}]}]}})}();10<wait_count++&&window.clearInterval(window.jQWait)},100);</script><script type="text/javascript" id="">(function(){try{analytics&&analytics.ready(function(){var c=analytics.user().traits(),a=c.recent||[],d=[$("body").data("tutorial-id")||"",Math.round(new Date/864E5)],e=a.length,b;for(b=0;b<e;b++)if(a[b]instanceof Array&&a[b][0]===d[0]){a.splice(b,1);break}a.unshift(d);5<=a.length&&a.pop();c.recent=a;analytics.user().traits(c)})}catch(c){}})();</script><script type="text/javascript" id="">try{document.addEventListener("copy",function(a){window.getSelection&&$(window.getSelection().anchorNode).parents("pre").length&&analytics.track("Web Interaction",{action:"Code Copy",name:window.getSelection().toString().substring(0,64)+(64<window.getSelection().toString().length?"\u2026":"")})})}catch(a){};</script><script type="text/javascript" id="">try{var t_id=document.querySelector("body").getAttribute("data-tutorial-id");if(t_id&&0==parseInt(t_id,10)%2){if("/community/tutorials/an-introduction-to-haproxy-and-load-balancing-concepts"===window.location.pathname){var amp=document.createElement("link");amp.setAttribute("rel","amphtml");amp.setAttribute("href","https://assets.digitalocean.com/labs/amp/an-introduction-to-haproxy-and-load-balancing-concepts.html");document.head.appendChild(amp)}var xhr=new XMLHttpRequest;xhr.open("GET","https://assets.digitalocean.com/labs/tutorial_recommendations/"+
window.location.pathname.replace("/community/tutorials/","")+".json");xhr.onload=function(){if(200===xhr.status){var a=document.createElement("script");a.setAttribute("type","application/ld+json");a.innerHTML=xhr.responseText;document.body.appendChild(a)}};xhr.send()}}catch(a){};</script><div id="mktoStyleLoaded" style="display: none; border-top-color: rgb(18, 52, 86);"></div><form novalidate="novalidate" class="mktoForm mktoHasWidth mktoLayoutLeft" style="font-family: Helvetica, Arial, sans-serif; font-size: 13px; color: rgb(51, 51, 51); visibility: hidden; position: absolute; top: -500px; left: -1000px; width: 1280px;"></form><iframe name="mktoFormsXDIframe0.7941683676184104" id="MktoForms2XDIframe" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/XDFrame.html" style="display: none;"></iframe><div id="fb-root" class=" fb_reset"><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div><iframe name="fb_xdm_frame_https" frameborder="0" allowtransparency="true" allowfullscreen="true" scrolling="no" id="fb_xdm_frame_https" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tabindex="-1" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/XBwzv5Yrm_1.html" style="border: none;"></iframe></div></div><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div></div></div></div><script type="text/javascript" id="">(function(){function b(){!1===c&&window.Munchkin&&(c=!0,window.Munchkin.init("937-EID-756",{disableClickDelay:!0,clickTime:0,asyncOnly:!0}))}var c=!1,a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src="//munchkin.marketo.net/munchkin.js";a.onreadystatechange=function(){"complete"!=this.readyState&&"loaded"!=this.readyState||b()};a.onload=b;document.getElementsByTagName("head")[0].appendChild(a)})();</script><script type="text/javascript" id="">(function(a,b,c,d,e){a=b.createElement(c);b=b.getElementsByTagName(c)[0];a.async=1;a.id=e;a.src=d;b.parentNode.insertBefore(a,b)})(window,document,"script","https://scripts.demandbase.com/014ab3bd.min.js","demandbase_js_lib");</script><img style="display:none" alt="Demandbase pixel" id="db_pixel_ad" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/pixel"><img style="display:none" alt="Demandbase pixel" id="db_pixel_rt" src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/pixel(1)"><iframe src="./Understanding Nginx HTTP Proxying, Load Balancing, Buffering, and Caching _ DigitalOcean_files/ect.html" id="db_ect" height="0" width="0" style="display: none;"></iframe></body></html>