<!DOCTYPE html>
<html lang="zh-tw"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="這邊的第一個Spring Web MVC程式將使用Tomcat 5.5來示範，這次為了資源管理上的方便，直接使用spring.jar，以及其相依的commons-logging.jar，請將這兩個ja...">

<meta property="og:locale" content="zh_TW">
<meta property="og:title" content="第一個 Spring MVC 程式">
<meta property="og:type" content="article">
<meta property="og:url" content="https://openhome.cc/Gossip/SpringGossip/FirstSpringMVC.html">
<meta property="og:image" content="https://openhome.cc/Gossip/images/caterpillar_small.jpg">
<meta property="og:site_name" content="OPENHOME.CC">
<meta property="og:description" content="這邊的第一個Spring Web MVC程式將使用Tomcat 5.5來示範，這次為了資源管理上的方便，直接使用spring.jar，以及其相依的commons-logging.jar，請將這兩個ja...">


    <title>第一個 Spring MVC 程式</title>

<link rel="stylesheet" href="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/pure-min.css">

    <!--[if lte IE 8]>
        <link rel="stylesheet" href="../css/layouts/side-menu-old-ie.css">
    <![endif]-->
    <!--[if gt IE 8]><!-->
        <link rel="stylesheet" href="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/side-menu.css">
    <!--<![endif]-->
  

     <link rel="stylesheet" href="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/caterpillar.css">
     <script async="" src="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/async-ads.js"></script><script src="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/ca-pub-9750319131714390.js"></script><script async="" src="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/analytics.js"></script><script type="text/javascript" async="" src="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/cse.js"></script>
<!-- 網頁層級廣告 --><script async="" src="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/adsbygoogle.js"></script><script>(adsbygoogle =window.adsbygoogle || []).push({google_ad_client: "ca-pub-9750319131714390",enable_page_level_ads: true });</script><link rel="stylesheet" type="text/css" href="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/prettify.htm"><script src="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/jsapi" type="text/javascript"></script><link type="text/css" href="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/defaultzh_TW.css" rel="stylesheet"><link type="text/css" href="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/default.css" rel="stylesheet"><script type="text/javascript" src="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/defaultzh_TW.js"></script><style type="text/css">
.gsc-control-cse {
font-family: Arial, sans-serif;
border-color: #FFFFFF;
background-color: #FFFFFF;
}
.gsc-control-cse .gsc-table-result {
font-family: Arial, sans-serif;
}
input.gsc-input {
border-color: #BCCDF0;
}
input.gsc-search-button {
border-color: #666666;
background-color: #CECECE;
}
.gsc-tabHeader.gsc-tabhInactive {
border-color: #E9E9E9;
background-color: #E9E9E9;
}
.gsc-tabHeader.gsc-tabhActive {
border-top-color: #FF9900;
border-left-color: #E9E9E9;
border-right-color: #E9E9E9;
background-color: #FFFFFF;
}
.gsc-tabsArea {
border-color: #E9E9E9;
}
.gsc-webResult.gsc-result,
.gsc-results .gsc-imageResult {
border-color: #336699;
background-color: #FFFFFF;
}
.gsc-webResult.gsc-result:hover,
.gsc-imageResult:hover {
border-color: #0000CC;
background-color: #FFFFFF;
}
.gsc-webResult.gsc-result.gsc-promotion:hover {
border-color: #0000CC;
background-color: #FFFFFF;
}
.gs-webResult.gs-result a.gs-title:link,
.gs-webResult.gs-result a.gs-title:link b,
.gs-imageResult a.gs-title:link,
.gs-imageResult a.gs-title:link b {
color: #0000FF;
}
.gs-webResult.gs-result a.gs-title:visited,
.gs-webResult.gs-result a.gs-title:visited b,
.gs-imageResult a.gs-title:visited,
.gs-imageResult a.gs-title:visited b {
color: #663399;
}
.gs-webResult.gs-result a.gs-title:hover,
.gs-webResult.gs-result a.gs-title:hover b,
.gs-imageResult a.gs-title:hover,
.gs-imageResult a.gs-title:hover b {
color: #0000CC;
}
.gs-webResult.gs-result a.gs-title:active,
.gs-webResult.gs-result a.gs-title:active b,
.gs-imageResult a.gs-title:active,
.gs-imageResult a.gs-title:active b {
color: #0000CC;
}
.gsc-cursor-page {
color: #0000FF;
}
a.gsc-trailing-more-results:link {
color: #0000FF;
}
.gs-webResult .gs-snippet,
.gs-imageResult .gs-snippet,
.gs-fileFormatType {
color: #000000;
}
.gs-webResult div.gs-visibleUrl,
.gs-imageResult div.gs-visibleUrl {
color: #008000;
}
.gs-webResult div.gs-visibleUrl-short {
color: #008000;
}
.gs-webResult div.gs-visibleUrl-short {
display: none;
}
.gs-webResult div.gs-visibleUrl-long {
display: block;
}
.gs-promotion div.gs-visibleUrl-short {
display: none;
}
.gs-promotion div.gs-visibleUrl-long {
display: block;
}
.gsc-cursor-box {
border-color: #336699;
}
.gsc-results .gsc-cursor-box .gsc-cursor-page {
border-color: #E9E9E9;
background-color: #FFFFFF;
color: #0000FF;
}
.gsc-results .gsc-cursor-box .gsc-cursor-current-page {
border-color: #FF9900;
background-color: #FFFFFF;
color: #663399;
}
.gsc-webResult.gsc-result.gsc-promotion {
border-color: #336699;
background-color: #FFFFFF;
}
.gsc-completion-title {
color: #0000FF;
}
.gsc-completion-snippet {
color: #000000;
}
.gs-promotion a.gs-title:link,
.gs-promotion a.gs-title:link *,
.gs-promotion .gs-snippet a:link {
color: #0000FF;
}
.gs-promotion a.gs-title:visited,
.gs-promotion a.gs-title:visited *,
.gs-promotion .gs-snippet a:visited {
color: #663399;
}
.gs-promotion a.gs-title:hover,
.gs-promotion a.gs-title:hover *,
.gs-promotion .gs-snippet a:hover {
color: #0000FF;
}
.gs-promotion a.gs-title:active,
.gs-promotion a.gs-title:active *,
.gs-promotion .gs-snippet a:active {
color: #0000FF;
}
.gs-promotion .gs-snippet,
.gs-promotion .gs-title .gs-promotion-title-right,
.gs-promotion .gs-title .gs-promotion-title-right * {
color: #000000;
}
.gs-promotion .gs-visibleUrl,
.gs-promotion .gs-visibleUrl-short {
color: #008000;
}</style><style type="text/css">.gscb_a{display:inline-block;font:27px/13px arial,sans-serif}.gsst_a .gscb_a{color:#a1b9ed;cursor:pointer}.gsst_a:hover .gscb_a,.gsst_a:focus .gscb_a{color:#36c}.gsst_a{display:inline-block}.gsst_a{cursor:pointer;padding:0 4px}.gsst_a:hover{text-decoration:none!important}.gsst_b{font-size:16px;padding:0 2px;position:relative;user-select:none;-moz-user-select:none;white-space:nowrap}.gsst_e{opacity:0.55;}.gsst_a:hover .gsst_e,.gsst_a:focus .gsst_e{opacity:0.72;}.gsst_a:active .gsst_e{opacity:1;}.gsst_f{background:white;text-align:left}.gsst_g{background-color:white;border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-moz-box-shadow:0 2px 4px rgba(0,0,0,0.2);margin:-1px -3px;padding:0 6px}.gsst_h{background-color:white;height:1px;margin-bottom:-1px;position:relative;top:-1px}.gsib_a{width:100%;padding:4px 6px 0}.gsib_a,.gsib_b{vertical-align:top}.gssb_c{border:0;position:absolute;z-index:989}.gssb_e{border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-moz-box-shadow:0 2px 4px rgba(0,0,0,0.2);cursor:default}.gssb_f{visibility:hidden;white-space:nowrap}.gssb_k{border:0;display:block;position:absolute;top:0;z-index:988}.gsdd_a{border:none!important}.gsq_a{padding:0}.gsq_a{padding:0}.gscsep_a{display:none}.gssb_a{padding:0 7px}.gssb_a,.gssb_a td{white-space:nowrap;overflow:hidden;line-height:22px}#gssb_b{font-size:11px;color:#36c;text-decoration:none}#gssb_b:hover{font-size:11px;color:#36c;text-decoration:underline}.gssb_g{text-align:center;padding:8px 0 7px;position:relative}.gssb_h{font-size:15px;height:28px;margin:0.2em}.gssb_i{background:#eee}.gss_ifl{visibility:hidden;padding-left:5px}.gssb_i .gss_ifl{visibility:visible}a.gssb_j{font-size:13px;color:#36c;text-decoration:none;line-height:100%}a.gssb_j:hover{text-decoration:underline}.gssb_l{height:1px;background-color:#e5e5e5}.gssb_m{color:#000;background:#fff}.gsfe_a{border:1px solid #b9b9b9;border-top-color:#a0a0a0;box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);-moz-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);-webkit-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);}.gsfe_b{border:1px solid #4d90fe;outline:none;box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);-moz-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);-webkit-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);}.gssb_a{padding:0 7px}.gssb_e{border:0}.gssb_l{margin:5px 0}#gsc-i-id1::-webkit-input-placeholder{font-size:14px}#gsc-i-id1:-moz-placeholder{font-size:14px}#gsc-i-id1::-moz-placeholder{font-size:14px}#gsc-i-id1:-ms-input-placeholder{font-size:14px}#gsc-i-id1:focus::-webkit-input-placeholder{color:transparent}#gsc-i-id1:focus:-moz-placeholder{color:transparent}#gsc-i-id1:focus::-moz-placeholder{color:transparent}#gsc-i-id1:focus:-ms-input-placeholder{color:transparent}.gssb_c .gsc-completion-container{position:static}.gssb_c{z-index:5000}.gsc-completion-container table{background:transparent;font-size:inherit;font-family:inherit}.gssb_c > tbody > tr,.gssb_c > tbody > tr > td,.gssb_d,.gssb_d > tbody > tr,.gssb_d > tbody > tr > td,.gssb_e,.gssb_e > tbody > tr,.gssb_e > tbody > tr > td{padding:0;margin:0;border:0}.gssb_a table,.gssb_a table tr,.gssb_a table tr td{padding:0;margin:0;border:0}</style></head>
<body>

<div id="layout">
    <!-- Menu toggle -->
    <a href="#menu" id="menuLink" class="menu-link">
        <!-- Hamburger icon --><span></span>
        
    </a>
    <div id="menu">
        <div class="pure-menu">
            <a class="pure-menu-heading" href="https://openhome.cc/Gossip/SpringGossip/index.html">回 Spring 目錄</a>
            <ul class="pure-menu-list">
                <br><div class="social" style="text-align: center;"><a href="http://twitter.com/caterpillar"><img title="Twitter" alt="Twitter" src="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/twitter.png"></a> <a href="http://www.facebook.com/openhome.cc"><img title="Facebook" alt="Facebook" src="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/facebook.png"></a> <a href="https://plus.google.com/+JustinSDK/"><img title="Google+" alt="Google+" src="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/google.png"></a></div><br><div id="search box"><script>(function() {var cx = 'partner-pub-9750319131714390:3926766884';var gcse = document.createElement('script');gcse.type = 'text/javascript';gcse.async = true;gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') + '//www.google.com/cse/cse.js?cx=' + cx;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(gcse, s);})();</script><div id="___gcse_0"><div class="gsc-control-searchbox-only gsc-control-searchbox-only-zh_TW" dir="ltr"><form class="gsc-search-box" accept-charset="utf-8"><table class="gsc-search-box" cellspacing="0" cellpadding="0"><tbody><tr><td class="gsc-input"><input autocomplete="off" size="10" class=" gsc-input" name="search" title="搜尋" id="gsc-i-id1" x-webkit-speech="" x-webkit-grammar="builtin:search" dir="ltr" spellcheck="false" style="outline: medium none; background: rgb(255, 255, 255) url(&quot;https://www.google.com/cse/static/images/1x/googlelogo_lightgrey_46x16dp.png&quot;) no-repeat scroll left center; text-indent: 48px;" placeholder="自訂搜尋" type="text" lang="zh_TW"><input name="bgresponse" id="bgresponse" type="hidden"></td><td class="gsc-search-button"><input value="搜尋" class="gsc-search-button" title="搜尋" type="button"></td><td class="gsc-clear-button"><div class="gsc-clear-button" title="清除結果">&nbsp;</div></td></tr></tbody></table><table class="gsc-branding" cellspacing="0" cellpadding="0"><tbody><tr><td class="gsc-branding-user-defined"></td><td class="gsc-branding-text"><div class="gsc-branding-text">技術提供：</div></td><td class="gsc-branding-img"><img src="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/googlelogo_grey_46x15dp.png" class="gsc-branding-img" srcset="https://www.google.com/cse/static/images/2x/googlelogo_grey_46x15dp.png 2x"></td></tr></tbody></table></form></div></div></div><br><div class="ad" style="text-align: center;"><script async="" src="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/adsbygoogle.js"></script>
<!-- 2015 新版型 160 x 600 廣告 -->
<ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="3747048883" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px;background-color:transparent"><ins id="aswift_1_anchor" style="display:block;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;width:160px;height:600px;" width="160" height="600" frameborder="0"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
            </ul>
        </div>
    </div>

    <div id="main">
        <div class="header">
            <h1>第一個 Spring MVC 程式</h1>
        </div>

        <div class="content"><br><div class="ad-3" style="text-align: center;"><script async="" src="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/adsbygoogle.js"></script><!-- 2015 新版型回應式廣告 --><ins class="adsbygoogle" style="display: block; height: 90px;" data-ad-client="ca-pub-9750319131714390" data-ad-slot="7104125683" data-ad-format="auto" data-adsbygoogle-status="done"><ins id="aswift_2_expand" style="display:inline-table;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:800px;background-color:transparent"><ins id="aswift_2_anchor" style="display:block;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:800px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_2" name="aswift_2" style="left:0;position:absolute;top:0;width:800px;height:90px;" width="800" height="90" frameborder="0"></iframe></ins></ins></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div> 
            
      這邊的第一個Spring Web MVC程式將使用Tomcat 5.5來示範，這次為了資源管理上的方便，直接使用spring.jar，以及其相依的commons-logging.jar，請將這兩個jar放到WEB-INF/lib下。<br>

      <br>

在Web MVC架構中，使用者並不直接連接至所需的資源，而必須先連接至前端控制器（Front
controller），由前端控制器判斷使用者的請求要分派（Dispatch）給哪一個控制物件（Controller）來處理請求，藉此執到控制使
用者可請求的資源之目的。<br>

      <br>

在Spring的Web
MVC框架中，擔任前端控制器角色的是org.springframework.web.servlet.DispatcherServlet，
DispatcherServlet負責將客戶的請求分派給對應於請求的控制物件，所以使用Spring Web
MVC的第一步，就是在web.xml中定義 DispatcherServlet：<br>

      
      
      <ul>

        <li>web.xml</li>

      
      </ul>

      
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="pun">&lt;?</span><span class="pln">xml version</span><span class="pun">=</span><span class="str">"1.0"</span><span class="pln"> encoding</span><span class="pun">=</span><span class="str">"UTF-8"</span><span class="pun">?&gt;</span><br><span class="tag">&lt;web-app</span><span class="pln"> </span><span class="atn">xmlns</span><span class="pun">=</span><span class="atv">"http://java.sun.com/xml/ns/j2ee"</span><br><span class="pln">  </span><span class="atn">xmlns:xsi</span><span class="pun">=</span><span class="atv">"http://www.w3.org/2001/XMLSchema-instance"</span><br><span class="pln">  </span><span class="atn">xsi:schemaLocation</span><span class="pun">=</span><span class="atv">"http://java.sun.com/xml/ns/j2ee </span><br><span class="atv">    → http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"</span><br><span class="pln">  </span><span class="atn">version</span><span class="pun">=</span><span class="atv">"2.4"</span><span class="tag">&gt;</span><br><br><span class="pln">    </span><span class="tag">&lt;session-config&gt;</span><br><span class="pln">        </span><span class="tag">&lt;session-timeout&gt;</span><br><span class="pln">            30</span><br><span class="pln">        </span><span class="tag">&lt;/session-timeout&gt;</span><br><span class="pln">    </span><span class="tag">&lt;/session-config&gt;</span><br><br><span class="pln">    </span><span class="tag">&lt;servlet&gt;</span><br><span class="pln">        </span><span class="tag">&lt;servlet-name&gt;</span><span class="pln">dispatcherServlet</span><span class="tag">&lt;/servlet-name&gt;</span><br><span class="pln">        </span><span class="tag">&lt;servlet-class&gt;</span><br><span class="pln">            org.springframework.web.servlet.DispatcherServlet</span><br><span class="pln">        </span><span class="tag">&lt;/servlet-class&gt;</span><br><span class="pln">        </span><span class="tag">&lt;init-param&gt;</span><br><span class="pln">            </span><span class="tag">&lt;param-name&gt;</span><span class="pln">contextConfigLocation</span><span class="tag">&lt;/param-name&gt;</span><br><span class="pln">            </span><span class="tag">&lt;param-value&gt;</span><span class="pln">/WEB-INF/mvc-config.xml</span><span class="tag">&lt;/param-value&gt;</span><br><span class="pln">        </span><span class="tag">&lt;/init-param&gt;</span><br><span class="pln">        </span><span class="tag">&lt;load-on-startup&gt;</span><span class="pln">1</span><span class="tag">&lt;/load-on-startup&gt;</span><br><span class="pln">    </span><span class="tag">&lt;/servlet&gt;</span><br><br><span class="pln">    </span><span class="tag">&lt;servlet-mapping&gt;</span><br><span class="pln">        </span><span class="tag">&lt;servlet-name&gt;</span><span class="pln">dispatcherServlet</span><span class="tag">&lt;/servlet-name&gt;</span><br><span class="pln">        </span><span class="tag">&lt;url-pattern&gt;</span><span class="pln">*.do</span><span class="tag">&lt;/url-pattern&gt;</span><br><span class="pln">    </span><span class="tag">&lt;/servlet-mapping&gt;</span><br><span class="tag">&lt;/web-app&gt;</span></code></pre>

      <br>

在web.xml中定義了一個DispatcherServlet的實例dispatcherServlet，從設定中可以看到，所有連接至
*.do結尾的請求都會由它來處理，"contextConfigLocation"初始參數用來設定Bean定義檔的位置與名稱，如果不設置
"contextConfigLocation"初始參數，則DispatcherServlet預設會使用Servlet的名稱為前置，讀取
「Servlet名稱- servlet.xml」作為其Bean定義檔，在上面的設定中則會讀取mvc-config.xml中的定義。<br>

您也可以定義多個Bean定義檔的來源，像是：<br>

      
      
      <div style="margin-left: 40px;">...<br>

      &lt;servlet&gt;<br>

      &nbsp;&nbsp;&nbsp; &lt;servlet-name&gt;hello&lt;/servlet-name&gt;<br>

      &nbsp;&nbsp;&nbsp; &lt;servlet-class&gt;<br>

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; org.springframework.web.servlet.DispatcherServlet<br>

      &nbsp;&nbsp;&nbsp; &lt;/servlet-class&gt;<br>

      &nbsp;&nbsp;&nbsp; &lt;init-param&gt;<br>

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;<br>

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;param-value&gt;/WEB-INF/mvc-config.xml, <br>

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; → /WEB-INF/other-service.xml&lt;/param-value&gt;<br>

      &nbsp;&nbsp;&nbsp; &lt;/init-param&gt; <br>

      &nbsp;&nbsp;&nbsp; &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;<br>

      &lt;/servlet&gt;<br>

      ...<br>

      </div>

      <br>

DispatcherServlet負責轉發請求至控制物件（Controller），在Spring Web
MVC框架中，控制物件是實作org.springframework.web.servlet.mvc.Controller介面的類別之實例，
Controller介面有一個必須實作的handleRequest()方法，其定義如下所示：<br>

      
      
      <div style="margin-left: 40px;">package org.springframework.web.servlet.mvc;<br>

      <br>

      import javax.servlet.http.HttpServletRequest;<br>

      import javax.servlet.http.HttpServletResponse;<br>

      import org.springframework.web.servlet.ModelAndView;<br>

      <br>

      public interface Controller {<br>

      &nbsp;&nbsp;&nbsp; ModelAndView handleRequest(HttpServletRequest request, <br>

      &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; HttpServletResponse response) throws Exception;<br>

      }<br>

      </div>

      <br>

      <br>

當Controller收到DispatcherServlet轉發而來的請求，會執行handleRequest()方法來處理請求，處理完畢後返回一
個org.springframework.web.servlet.ModelAndView的實例，ModelAndView包括了要呈現在View
層（例如JSP網頁）的相關Model資料，以及其它有關View層的相關訊息。<br>

      <br>

在您第一個Spring Web MVC中，使用者的請求將由一個HelloController類別之實例來處理，其實作如下所示：<br>

      
      
      <ul>

        <li>HelloController.java</li>

      
      </ul>

      <span style="font-family: Courier New,Courier,monospace;"></span>
      
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="kwd">package</span><span class="pln"> onlyfun</span><span class="pun">.</span><span class="pln">caterpillar</span><span class="pun">;</span><br><br><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">servlet</span><span class="pun">.</span><span class="pln">http</span><span class="pun">.</span><span class="typ">HttpServletRequest</span><span class="pun">;</span><br><span class="kwd">import</span><span class="pln"> javax</span><span class="pun">.</span><span class="pln">servlet</span><span class="pun">.</span><span class="pln">http</span><span class="pun">.</span><span class="typ">HttpServletResponse</span><span class="pun">;</span><br><span class="kwd">import</span><span class="pln"> org</span><span class="pun">.</span><span class="pln">springframework</span><span class="pun">.</span><span class="pln">web</span><span class="pun">.</span><span class="pln">servlet</span><span class="pun">.</span><span class="pln">mvc</span><span class="pun">.</span><span class="typ">Controller</span><span class="pun">;</span><span class="pln"> </span><br><span class="kwd">import</span><span class="pln"> org</span><span class="pun">.</span><span class="pln">springframework</span><span class="pun">.</span><span class="pln">web</span><span class="pun">.</span><span class="pln">servlet</span><span class="pun">.</span><span class="typ">ModelAndView</span><span class="pun">;</span><span class="pln"> </span><br><br><span class="kwd">public</span><span class="pln"> </span><span class="kwd">class</span><span class="pln"> </span><span class="typ">HelloController</span><span class="pln"> </span><span class="kwd">implements</span><span class="pln"> </span><span class="typ">Controller</span><span class="pln"> </span><span class="pun">{</span><br><span class="pln">    </span><span class="kwd">private</span><span class="pln"> </span><span class="typ">String</span><span class="pln"> viewPage</span><span class="pun">;</span><br><span class="pln">    </span><br><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="typ">ModelAndView</span><span class="pln"> handleRequest</span><span class="pun">(</span><span class="typ">HttpServletRequest</span><span class="pln"> req</span><span class="pun">,</span><span class="pln"> </span><br><span class="pln">                                            </span><span class="typ">HttpServletResponse</span><span class="pln"> res</span><span class="pun">)</span><span class="pln"> </span><br><span class="pln">                                                     </span><span class="kwd">throws</span><span class="pln"> </span><span class="typ">Exception</span><span class="pln"> </span><span class="pun">{</span><br><span class="pln">        </span><span class="typ">String</span><span class="pln"> user </span><span class="pun">=</span><span class="pln"> req</span><span class="pun">.</span><span class="pln">getParameter</span><span class="pun">(</span><span class="str">"user"</span><span class="pun">);</span><br><span class="pln">        </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">ModelAndView</span><span class="pun">(</span><span class="pln">viewPage</span><span class="pun">,</span><span class="pln"> </span><span class="str">"user"</span><span class="pun">,</span><span class="pln"> user</span><span class="pun">);</span><br><span class="pln">    </span><span class="pun">}</span><br><span class="pln">    </span><br><span class="pln">    </span><span class="kwd">public</span><span class="pln"> </span><span class="kwd">void</span><span class="pln"> setViewPage</span><span class="pun">(</span><span class="typ">String</span><span class="pln"> viewPage</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><br><span class="pln">        </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">viewPage </span><span class="pun">=</span><span class="pln"> viewPage</span><span class="pun">;</span><br><span class="pln">    </span><span class="pun">}</span><br><span class="pun">}</span></code></pre>

      <br>

在這個Controller中，取得了來自使用者的user請求參數，並設定在ModelAndView的實例中，在這個例子中，建構
ModelAndView的第一個引數為要呈現的目標網頁（或資源）路徑，第二個引數是設定用來取得Model物件的鍵（Key），而第三個引數為要給
View層呈現資料用的Model物件。<br>

      <br>

在Web
MVC架構下，控制物件的作用為收集使用者的請求，進行與Web層相關的動作，您不應當在控制物件中執行商務邏輯，也不應當讓Servlet相關的API
侵入至商務層，這會讓商務層的物件與Servlet API產生耦合，例如讓HttpServletRequest物件直接設定至商務層物件之中。<br>

      <br>

使用Spring Web
MVC的好處是，Spring的Controller在其IoC容器管理下，可以如同一般的Bean來加以管理，並利用其依賴注入來完成相關物件的注入，
以這邊的例子來說，具體而言，您可以在XML檔案中設定Controller請求處理完畢之後，所要呈現資料的網頁路徑，來看一下Bean定義檔的內容，
依web.xml中的設定，請在WEB-INF目錄下建立mvc-config.xml檔案：<br>

      
      
      <ul>

        <li>mvc-config.xml</li>

      
      </ul>

      
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="pun">&lt;?</span><span class="pln">xml version</span><span class="pun">=</span><span class="str">"1.0"</span><span class="pln"> encoding</span><span class="pun">=</span><span class="str">"UTF-8"</span><span class="pun">?&gt;</span><br><span class="dec">&lt;!DOCTYPE beans PUBLIC </span><br><span class="dec"> "-//SPRING/DTD BEAN/EN" </span><br><span class="dec"> "http://www.springframework.org/dtd/spring-beans.dtd"&gt;</span><span class="pln"> </span><br><br><span class="tag">&lt;beans&gt;</span><span class="pln">   </span><br><span class="pln">    </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"viewResolver"</span><br><span class="pln">          </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"org.springframework.web.servlet.</span><br><span class="atv">                   → view.InternalResourceViewResolver"</span><span class="tag">&gt;</span><span class="pln"> </span><br><span class="pln">        </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"prefix"</span><span class="tag">&gt;</span><br><span class="pln">            </span><span class="tag">&lt;value&gt;</span><span class="pln">/WEB-INF/jsp/</span><span class="tag">&lt;/value&gt;</span><br><span class="pln">        </span><span class="tag">&lt;/property&gt;</span><br><span class="pln">        </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"suffix"</span><span class="tag">&gt;</span><br><span class="pln">            </span><span class="tag">&lt;value&gt;</span><span class="pln">.jsp</span><span class="tag">&lt;/value&gt;</span><br><span class="pln">        </span><span class="tag">&lt;/property&gt;</span><br><span class="pln">    </span><span class="tag">&lt;/bean&gt;</span><br><span class="pln">    </span><br><span class="pln">    </span><span class="tag">&lt;bean</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"/hello.do"</span><span class="pln"> </span><br><span class="pln">          </span><span class="atn">class</span><span class="pun">=</span><span class="atv">"onlyfun.caterpillar.HelloController"</span><span class="tag">&gt;</span><span class="pln"> </span><br><span class="pln">        </span><span class="tag">&lt;property</span><span class="pln"> </span><span class="atn">name</span><span class="pun">=</span><span class="atv">"viewPage"</span><span class="tag">&gt;</span><span class="pln"> </span><br><span class="pln">            </span><span class="tag">&lt;value&gt;</span><span class="pln">hello</span><span class="tag">&lt;/value&gt;</span><span class="pln"> </span><br><span class="pln">        </span><span class="tag">&lt;/property&gt;</span><span class="pln"> </span><br><span class="pln">    </span><span class="tag">&lt;/bean&gt;</span><br><span class="tag">&lt;/beans&gt;</span></code></pre>

      <br>

實際上DispatcherServlet必須根據一個HandlerMapping物件來決定請求由哪一個Controller來處理，
DispatcherServlet預設使用
org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping，也就是根據
Bean在定義時的"name"屬性及使用者請求的URL來決定使用哪一個Controller實例，例如在這個例子中，請求/hello.do時，
DispatcherServlet根據"hello"（即不包括.do）名稱決定要使用"name"為"hello"的Bean實例，所以就是將請求交
由HelloController的實例來處理。<br>

      <br>

當Controller返回ModelAndView後，DispatcherServlet會交由ViewResolver物件來作View層的相關解
析，因而您需要設置一個ViewResolver實例，在這個範例中將以JSP作為View層技術，所以使用
org.springframework.web.servlet.view.InternalResourceViewResolver，
InternalResourceViewResolver需要設置一個"viewClass"，預設是
org.springframework.web.servlet.view.InternalResourceView，這個類別支援Servlet技
術的相關資源（像是JSP、Servlet）。<br>

      <br>

InternalResourceViewResolver的"prefix"、"suffix"屬性會與ModelAndView返回的路徑資訊結合，
例如若路徑資訊返回為"hello"字串，則與以上的例子設定結合，實際的路徑就是/WEB-INF/jsp/hello.jsp。<br>

最後可以簡單的在/WEB-INF/jsp/中寫一個測試的hello.jsp：<br>

      
      
      <ul>

        <li>hello.jsp</li>

      
      </ul>

      
      <pre class="prettyprint prettyprinted" style=""><code lang="java"><span class="pun">&lt;%</span><span class="lit">@page</span><span class="pln"> contentType</span><span class="pun">=</span><span class="str">"text/html"</span><span class="pln">%&gt;</span><br><span class="pun">&lt;%</span><span class="lit">@page</span><span class="pln"> pageEncoding</span><span class="pun">=</span><span class="str">"UTF-8"</span><span class="pln">%&gt;</span><br><br><span class="tag">&lt;html&gt;</span><br><span class="pln">    </span><span class="tag">&lt;head&gt;</span><br><span class="pln">        </span><span class="tag">&lt;meta</span><span class="pln"> </span><span class="atn">http-equiv</span><span class="pun">=</span><span class="atv">"Content-Type"</span><span class="pln"> </span><br><span class="pln">              </span><span class="atn">content</span><span class="pun">=</span><span class="atv">"text/html; charset=UTF-8"</span><span class="tag">&gt;</span><br><span class="pln">        </span><span class="tag">&lt;title&gt;</span><span class="pln">First Spring MVC</span><span class="tag">&lt;/title&gt;</span><br><span class="pln">    </span><span class="tag">&lt;/head&gt;</span><br><span class="pln">    </span><span class="tag">&lt;body&gt;</span><br><span class="pln">        </span><span class="tag">&lt;h1&gt;</span><span class="pln">Hello, \${user}!!</span><span class="tag">&lt;/h1&gt;</span><br><span class="pln">    </span><span class="tag">&lt;/body&gt;</span><br><span class="tag">&lt;/html&gt;</span></code></pre>

      <br>

在ModelAndView中設置的Model物件，經由InternalResourceViewResolver及
InternalResourceView的解析，將設定為JSP技術中可存取的屬性（Attribute），因而可以使用JSP技術中的
Expression
Language來取得資料，依以上所撰寫的程式，如果您在請求hello.do時附帶了user參數，則最後的JSP會出現您所給的user訊息。<br>

      <br>


      



<br><br><div class="ad336-280" style="text-align: center;"><script async="" src="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/adsbygoogle.js"></script><!-- 2015 新版型廣告 336 x 280 --><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-9750319131714390" data-ad-slot="9976409681" data-adsbygoogle-status="done"><ins id="aswift_3_expand" style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><ins id="aswift_3_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_3" name="aswift_3" style="left:0;position:absolute;top:0;width:336px;height:280px;" width="336" height="280" frameborder="0"></iframe></ins></ins></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div><br><div class="recommend" style="text-align: center;"><hr><script async="" src="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/adsbygoogle.js"></script><!-- 自動大小回應相符內容 --><ins class="adsbygoogle" style="display: block; height: 480px;" data-ad-client="ca-pub-9750319131714390" data-ad-slot="4953478487" data-ad-format="autorelaxed" data-adsbygoogle-status="done"><ins id="aswift_4_expand" style="display:inline-table;border:none;height:480px;margin:0;padding:0;position:relative;visibility:visible;width:800px;background-color:transparent"><ins id="aswift_4_anchor" style="display:block;border:none;height:480px;margin:0;padding:0;position:relative;visibility:visible;width:800px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_4" name="aswift_4" style="left:0;position:absolute;top:0;width:800px;height:480px;" width="800" height="480" frameborder="0"></iframe></ins></ins></ins><script>(adsbygoogle = window.adsbygoogle || []).push({});</script></div></div></div></div>
<script src="%E7%AC%AC%E4%B8%80%E5%80%8B%20Spring%20MVC%20%E7%A8%8B%E5%BC%8F_files/ui.js"></script>

<div class="analytics">
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-143766-1', 'auto');
  ga('send', 'pageview');

</script>
</div>
<ins class="adsbygoogle" style="display: none; width: auto; height: auto;" data-adsbygoogle-status="done"><ins id="aswift_0_expand" style="display:inline-table;border:none;height:0px;margin:0;padding:0;position:relative;visibility:visible;width:0px;background-color:transparent"><ins id="aswift_0_anchor" style="display:block;border:none;height:0px;margin:0;padding:0;position:relative;visibility:visible;width:0px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;width:0px;height:0px;" width="0" height="0" frameborder="0"></iframe></ins></ins></ins><table style="width: 131px; display: none; top: 138px; left: 0px; position: absolute;" class="gstl_50 gssb_c" cellspacing="0" cellpadding="0"><tbody><tr><td class="gssb_f"></td><td class="gssb_e" style="width: 100%;"></td></tr></tbody></table><iframe id="google_osd_static_frame_2622889025861" name="google_osd_static_frame" style="display: none; width: 0px; height: 0px;"></iframe></body></html>