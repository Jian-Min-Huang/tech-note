<!DOCTYPE html>
<html class="v2" dir="ltr" xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://www.google.com/2005/gml/b" xmlns:data="http://www.google.com/2005/gml/data" xmlns:expr="http://www.google.com/2005/gml/expr"><head>
<link type="text/css" rel="stylesheet" href="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/1691512649-css_bundle_v2.css">
<meta content="IE=EmulateIE7" http-equiv="X-UA-Compatible">
<meta content="width=1100" name="viewport">
<meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
<meta content="blogger" name="generator">
<link href="http://blogger.gtwang.org/favicon.ico" rel="icon" type="image/x-icon">
<link href="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/asynchronous-servlets-with-tomcat7_007.htm" rel="canonical">
<link rel="alternate" type="application/atom+xml" title="G. T. Wang - Atom" href="http://blogger.gtwang.org/feeds/posts/default">
<link rel="alternate" type="application/rss+xml" title="G. T. Wang - RSS" href="http://blogger.gtwang.org/feeds/posts/default?alt=rss">
<link rel="service.post" type="application/atom+xml" title="G. T. Wang - Atom" href="https://www.blogger.com/feeds/5628310816558079036/posts/default">

<link rel="alternate" type="application/atom+xml" title="G. T. Wang - Atom" href="http://blogger.gtwang.org/feeds/8500965175470979360/comments/default">
<!--[if IE]><script type="text/javascript" src="https://www.blogger.com/static/v1/jsbin/3095787282-ieretrofit.js"></script>
<![endif]-->
<link href="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/java_logo.gif" rel="image_src">
<meta content="http://blogger.gtwang.org/2013/05/asynchronous-servlets-with-tomcat7.html" property="og:url">
<meta content="使用 Tomcat 7 與 Java Servlet 3.0 API 實作 Asynchronous Servlets：提升伺服器效率的方案" property="og:title">
<meta content="G. T. Wang 部落格，分享 GNU/Linux 與 Open Source 技術、教學文件、程式設計技巧、統計研究與生活點滴記錄" property="og:description">
<meta content="http://2.bp.blogspot.com/-DoO_bohvDno/UZH17_sZbSI/AAAAAAAANEY/bOoB8PGdrow/w1200-h630-p-k-no-nu/java_logo.gif" property="og:image">
<!--[if IE]> <script> (function() { var html5 = ("abbr,article,aside,audio,canvas,datalist,details," + "figure,footer,header,hgroup,mark,menu,meter,nav,output," + "progress,section,time,video").split(','); for (var i = 0; i < html5.length; i++) { document.createElement(html5[i]); } try { document.execCommand('BackgroundImageCache', false, true); } catch(e) {} })(); </script> <![endif]-->
<title>使用 Tomcat 7 與 Java Servlet 3.0 API 實作 Asynchronous Servlets：提升伺服器效率的方案 - G. T. Wang</title>
<meta content="Your Blog Keywords Here" name="keywords">
<link href="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/font-awesome.css" rel="stylesheet">
<link href="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/css.css" rel="stylesheet" type="text/css">
<style id="page-skin-1" type="text/css"><!--
body {
font-family: 'Lato', sans-serif;
font-size: 14px;
line-height: 1.428571429;
color: #333;
margin: 0;
background-color: #f8f8f8;
}
a {
transition: background-color 0.3s;
-webkit-transition: background-color 0.3s;
font-weight: 400;
/* font-size: 18px; */
/*-webkit-font-smoothing: antialiased;*/
/*color: #ED702B;*/
color: #e5554e;
text-decoration: none;
background: transparent;
}
ul {
-webkit-padding-start: 0px;
}
div, ul, .gallery-caption, footer p, li a, p, span, article, nav, blockquote, dl, dt, dd, td, a, tr, th, code, caption, figcaption, input, label, textarea {
/*
font-weight: 400;
color: #636467;
font-size: 16px;
-webkit-font-smoothing: antialiased; */
}
h1 , h1 a , h1 span ,
h2 , h2 a , h2 span ,
h3 , h3 a , h3 span ,
h4 , h4 a , h4 span ,
h5 , h5 a , h5 span ,
h6 , h6 a , h6 span
{
color: #333;
font-family: 'Lato', sans-serif;
font-weight: 700;
text-decoration: none;
padding: 0px;
margin-top: 0px;
line-height: 100%;
}
h2, h2 a {
font-size: 28px;
}
h3, h3 a {
font-size: 22px;
}
h4, h4 a {
font-size: 20px;
}
a:hover {
text-decoration: none;
color: #333;
}
.section {
margin: 0!important;
}
.head h1, .head h1 a {
margin: 0;
color: #ffffff;
font-size: 26px;
line-height: 40px;
font-family: 'Lato', sans-serif;
font-weight: normal;
}
.head h1 a:hover {
color: #e5554e;
-webkit-transition: color 0.3s;
-moz-transition: color 0.3s;
-ms-transition: color 0.3s;
-o-transition: color 0.3s;
transition: color 0.3s;
}
.header-wrapper {
width: 100%;
height: 60px;
background-color: #453D3F;
position: relative;
/*border-bottom: 4px solid #EADBC4;*/
margin-bottom: 20px;
}
#head {
max-width: 100%;
float: left;
clear: both;
border: 0px;
padding: 14px 20px;
height: 32px;
}
.container {
margin-right: auto;  margin-left: auto;
width: 1170px;
z-index: 1;
clear: both;
}
div#header-main-menu {
float: right;
}
nav.menu {
float: left;
}
nav.menu ul {
padding: 0px;
margin: 0px;
}
#header-toggle-menu {
display: none;
}
nav.menu ul li {
float: left;
list-style: none;
text-transform: uppercase;
position: relative;
}
nav.menu ul li a {
color: #fff;
text-transform: uppercase;
font-size: 20px;
font-weight: 700;
-webkit-transition: color 0.3s;
-moz-transition: color 0.3s;
-ms-transition: color 0.3s;
-o-transition: color 0.3s;
transition: color 0.3s;
letter-spacing: 5px;
height: 60px;
line-height: 60px;
display: block;
padding: 0 20px;
}
nav.menu > ul > li a:hover{
background-color: #272727;
}
nav.menu > ul > li > ul {
border-top-width: 2px;
border-top-style: solid;
}
nav.menu > ul > li > ul {
border-top-color: #f4793d;
}
nav.menu ul ul {
display:none;
position: absolute;
top: 50px;
left: -30px;
z-index: 9;
width: 200px;
background: #303030;
padding: 0px;
}
nav.menu > ul > li > ul:before {
border-color: rgba(244, 121, 61, 0);
border-bottom-color: #f4793d;
border-width: 6px;
margin-left: -6px;
}
nav.menu ul > li:hover > ul {
display: block;
}
.menu&#160;ul > li > ul:hover {
display:block;
}
nav.menu ul ul li {
float: left;
clear: both;
width: 200px;
text-align: center;
float: left;
clear: both;
padding: 0px;
}
nav.menu ul ul li a {
padding-left: 12%;
padding-right: 8%;
padding-top: 12px;
padding-bottom: 12px;
width: 80%;
text-align: left;
float: left;
clear: both;
display: block;
text-transform: none;
-webkit-transition: background-color 0.3s;
-moz-transition: background-color 0.3s;
-ms-transition: background-color 0.3s;
-o-transition: background-color 0.3s;
transition: background-color 0.3s;
border-bottom: 1px solid #363636;
}
nav.menu ul ul li a:hover {
color: #fff !important;
}
nav.menu ul ul li a:hover {
background-color: #363636;
}
.ad-wrapper {
background-color: #ffffff;
margin: auto;
padding: 40px;
text-align: left;
overflow: hidden;
}
#banner {
width: 100%;
box-sizing: border-box;
}
.container-wrapper {
padding-top: 20px;
}
.wrap2 {
width: 1170px;
margin: 0 auto;
}
.main-wrapper {
width: 67%;
float: left;
position: relative;
min-height: 1px;
}
.post-body img {
max-width: 650px;
height: auto;
}
.post.hentry {
padding: 40px;
margin-bottom: 45px;
background: #fff;
clear: both;
float: left;
width: 100%;
box-sizing: border-box;
}
.post.hentry.lasthentry {
margin-bottom: 40px;
}
.post-outer {
overflow: hidden;
}
h3.post-title {
margin-bottom:10px;
line-height: 120%;
}
h2.post-title {
width: 100%;  text-align: left;  margin-bottom: 30px;  line-height: 120%;  font-size: 32px;
}
.post-title a {
font-weight: 700;  color: #333;
font-size: 32px;
}
.post-title a:hover {
/*color: #f4793d !important;*/
color: #e5554e;
}
#main {
font-family: 'Lato', sans-serif;
text-decoration: none;
padding: 0px;
line-height: 100%;
}
.post-body {
color: #333;
font-family: 'Lato', sans-serif;
font-size: 18px;
line-height: 28px;
font-weight: 400;
word-wrap: break-word;
/*text-align: justify;*/
}
.post-footer-line {
overflow: hidden;
}
.post-meta {
width: 100%;
text-align: left;
margin-bottom: 20px;
float: left;
clear: both;
}
.post-meta span {
color: #c1c0c0;
line-height: 18px;
margin-right: 15px;
font-size: 14px !important;
float: left;
}
.post-meta span a, .post-meta span i {
color: #c1c0c0 !important;
}
.post-meta span i {
float: left;
margin-top: 3px;
margin-right: 10px;
}
.post-meta span a {
margin-top: 0px !important;
float: left;
font-size: 14px;
line-height: 17px !important;
}
.post-meta span:hover a, .post-meta span:hover i {
color: #f4793d !important;
}
.blog-feeds {
display: none;
}
nav.menu > ul > li > ul:before {
border-color: rgba(244, 121, 61, 0);
border-bottom-color: #f4793d;
border-width: 6px;
margin-left: -6px;
}
.sub-menu:before {
border-color: transparent transparent #FCFCFC;
border-style: solid;
border-width: 15px;
content: "";
height: 0;
left: 40px;
position: absolute;
top: -13px;
width: 0;
}
.sub-menu:before {
top: -13px;
border-color: transparent transparent #DDD;
}
h1.post-title {
width: 100%;
text-align: left;
margin: 0 0 10px 0;
line-height: 120%;
font-size: 32px;
color: #333;
}
.post-meta span {
color: #c1c0c0;
line-height: 18px;
font-size: 14px !important;
}
.post-comment-link {
display: none;
}
.readmore a {
font-size: 12px;  line-height: 12px;
color: #fff;  font-weight: 700;  text-transform: uppercase;  text-align: center;  padding: 11px 13px !important;  border-radius: 3px;  -webkit-border-radius: 3px;
background-color: #f4793d;
margin-top: 10px;
}
.post-labels a {
padding: 4px;
color: #fff;
background-color: #dadada;
font-size: 14px;
}
.post-labels a:hover {
color: #fff !important;
background-color: #e5554e;
}
#blog-pager {
text-align: center;
margin-bottom: 0px;
float: left;
clear: both;
width: 100%;
margin-left: 0px !important;
padding-top: 30px;
padding-bottom: 30px;
margin: 0;
box-sizing: border-box;
}
.blog-pager a:hover {
color: #FFF;
text-decoration: none;
}
.blog-pager a:hover {
color: #FFF;
text-decoration: none;
}
.showpageArea {
float: left;
margin-left: 30px;
width: 95%;
}
.showpageOf {
display: none;
}
.showpagePoint {
padding: 10px 15px 10px 15px;
background: #f4793d;
float: left;
font-size: 14px;
font-weight: bold;
border-radius: 4px;  -webkit-border-radius: 4px;  color: #fff;
margin-right: 5px;
}
.showpageNum a,.showpage a {
padding: 10px 15px 10px 15px;
background: #303030;
float: left;
font-size: 14px;
text-decoration: none;
border-radius: 4px;  -webkit-border-radius: 4px;  color: #fff;
margin-right: 5px;
}
.showpageNum a:hover,.showpage a:hover {
background: #e5554e;
}
#comments {
float: left;  clear: both;
width: 87%;
padding-left: 50px;
padding-right: 50px;
padding-bottom: 45px;  background: #fff;  border-right: 1px solid #E9E9E9;  border-left: 1px solid #E9E9E9;  border-bottom: 1px solid #E9E9E9;
margin-top: 0;
}
.comments-content {
padding-top: 35px;
}
#comments > h4 {
color: #636467 !important;
text-transform: uppercase;  font-size: 14px;
}
.comment {
float: left;  clear: both;  margin-bottom: 35px;  width: 100%;
}
.comments .avatar-image-container {
float: left;  border-radius: 2px;
max-height: 55px;
width: 54px;
}
.comments .avatar-image-container img {
max-width: 55px;
width: 54px;
height: 54px;
}
.comments .comment-block {
margin-left: 74px;  display: block;  border-bottom: 1px solid #e9e9e9;
padding-bottom: 40px;
}
.comments .comments-content .user {
text-transform: none;
color: #636467 !important;
margin-bottom: 3px;
font-size: 14px;
font-weight: 700;
}
.comments .comments-content .user a {
color: #636467 !important;
font-weight: 700;  text-transform: uppercase;  font-size: 14px;
}
.comments .comments-content .comment-content {
margin-top: 10px;
padding-bottom: 20px;
color: #c1c0c0 !important;
font-size: 16px;  line-height: 26px;
}
.comments .comment .comment-actions a {
float: left;  color: #fff;  text-transform: uppercase;  text-align: center;  padding: 8px 8px;  border-radius: 3px;  -webkit-border-radius: 3px;  border: none;  font-size: 10px;  line-height: 10px;  background: #c1c0c0;
margin-right: 6px;
}
.comments .comment .comment-actions a:hover {
background-color: #e5554e;
}
.comment-actions {
}
.comments .comments-content .comment-replies {
margin-left: 45px;  margin-top: 30px;  width: 94%;
}
.comments .thread-toggle {
display: none;
}
.w2t-pager {
/*border-top: 2px dashed #ddd;*/
border-bottom: 1px solid #ddd;
margin-bottom: 10px;
overflow:hidden; padding:0px;}
.w2t-pager li.next { float: right; padding:0px; background:none; margin:0px;}
.w2t-pager li.next a { padding-left: 24px; }
.w2t-pager li.previous { margin:0px -2px 0px 0px; float: left;  border-right:1px solid #ddd; padding:0px; background:none;
}
.w2t-pager li.previous a { padding-right: 24px;  }
.w2t-pager li.next:hover, .w2t-pager li.previous:hover  {background:#333333; }
.w2t-pager li { width: 50%; display: inline; float: left; text-align: center; }
.w2t-pager li a { position: relative; min-height: 77px; display: block; padding: 15px 46px 15px; outline:none; text-decoration:none;}
.w2t-pager li i { color: #ccc; font-size: 18px; }
.w2t-pager li a strong { display: block; font-size: 20px; color: #ccc; letter-spacing: 0.5px; font-weight: bold; text-transform: uppercase; font-family: 'Lato', sans-serif; margin-bottom:10px;}
.w2t-pager li a span { font-size: 15px; color: #666;  font-family: 'Lato', sans-serif; margin:0px;}
.w2t-pager li a:hover span,
.w2t-pager li a:hover i { color: #ffffff; }
.w2t-pager li.previous i { float:left; margin-top:15%; margin-left:5%; }
.w2t-pager li.next i { float: right;
margin-top: 15%;
margin-right: 5%; }
.w2t-pager li.next i, .w2t-pager li.previous i ,
.w2t-pager li.next,  .w2t-pager li.previous{
-webkit-transition-property: background color; -webkit-transition-duration: 0.4s; -webkit-transition-timing-function: ease-out;
-moz-transition-property: background color; -moz-transition-duration: 0.4s; -moz-transition-timing-function: ease-out;
-o-transition-property: background color; -o-transition-duration: 0.4s; -o-transition-timing-function: ease-out;
transition-property: background color; transition-duration: 0.4s; transition-timing-function: ease-out; }
.fa-chevron-right {padding-right:0px;}
.sidebar-wrapper {
margin-bottom: 60px;
width: 30.7%;
float: right;
overflow: hidden;
}
#sidebar {
clear: both;
background-color: #fff;
/*border: 1px solid #e9e9e9;*/
float: left;
padding: 20px;
}
.sidebar .widget {
margin-bottom: 50px;  float: left;  clear: both;  width: 100%;
}
.sidebar .widget h2 {
font-size: 17px;  line-height: 100%;  font-weight: 700;  font-family: 'Lato', sans-serif;
margin-bottom: 25px;
}
.sidebar .widget a {
font-size: 16px;  line-height: 26px;
}
.sidebar .widget a:hover {
color: #333;
}
.sidebar .widget ul {
list-style: none;
padding: 0px;
margin: 0px;
float: left;
clear: both;
width: 100%;
font-size: 14px;
line-height: 18px;
}
.sidebar .widget li {
list-style: none;
list-style: none;
float: left;
clear: both;
margin-bottom: 10px;
padding-bottom: 10px;
width: 100%;
border-bottom: 1px solid #f2f2f2;
}
#search_mini_form {
float: left;  clear: both;  width: 100%;  background-color: #dadada;  border-radius: 4px;  -webkit-border-radius: 4px;  position: relative;
}
form.search-form input.s {
float: left;  clear: both;  width: 100%;  background: none;  border: none;  outline: none;  color: #fff;  padding: 12px 15px;  position: relative;  z-index: 0;
}
form.search-form input.submit {
position: absolute;  top: 12px;  right: 15px;  width: 17px;  height: 17px;
background: url(http://1.bp.blogspot.com/-tyqc87NE-7c/Uw7_8hi29fI/AAAAAAAABXo/xpCHt5tlJtc/s1600/featherimages.png) no-repeat;  outline: none;  border: none;
background-position: -10px -938px;
}
footer {
text-align: center;
float: left;
clear: both;
width: 100%;
margin: 0px;
padding: 30px 0px 15px 0px;
background-color: #303030;
}
.social-icons {
width: 100%;
margin-bottom: 10px;
}
footer .social-icons a {
margin-right: 5px;
margin-bottom: 10px;
width: 40px;
color: #888;
font-size: 32px;
display: inline-block;
position: relative;
transition: color 0.5s;
-webkit-transition: color 0.5s;
}
.social-icons a.facebook:hover{
color: #4265b9;
}
.social-icons a.twitter:hover{
color: #9ae4e8;
}
.social-icons a.linkedin:hover{
color: #005987;
}
.social-icons a.github:hover{
color: #272727;
}
.social-icons a.google:hover{
color: #d62408;
}
.social-icons a.vimeo:hover{
color: #1bb6ec;
}
.social-icons a.youtube:hover{
color: #df3333;
}
.social-icons a.skype:hover{
color: #0bbff2;
}
.social-icons a.tumblr:hover{
color: #35506b;
}
.social-icons a.instagram:hover{
color: #F95B60;
}
.social-icons a.dribbble:hover{
color: #ea4c89;
}
.social-icons a.flickr:hover{
color: #ff0084;
}
.social-icons a.pinterest:hover{
color: #c31e26;
}
.social-icons a.soundcloud:hover{
color: #fe9700;
}
footer {
margin-top: 45px;
}
footer .copyrights {
float: left;
font-size: 14px;
margin: 0px;
margin-top: 0px;
clear: both;
width: 100%;
color: #666;
}
footer .copyrights a {
font-size: 14px;
}
footer .copyrights a:hover {
color: #666;
}
/* Add by Seal */
code {
font-family: 'Droid Sans Mono', Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace;
font-size: 16px;
background: #333;
-webkit-border-radius: 0.3em;
-moz-border-radius: 0.3em;
-ms-border-radius: 0.3em;
-o-border-radius: 0.3em;
border-radius: 0.3em;
border: 1px solid #333;
margin: 1em 0;
padding: .8em 1em;
color: #EEEEEE;
overflow: auto;
display: block;
clear: both;
white-space: no-wrap;
}
pre.code {
font-family: 'Droid Sans Mono', Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace;
font-size: 16px;
-webkit-border-radius: 0.3em;
-moz-border-radius: 0.3em;
-ms-border-radius: 0.3em;
-o-border-radius: 0.3em;
border-radius: 0.3em;
border: 1px solid #333;
margin: 1em 0;
padding: .8em;
overflow: auto;
display: block;
clear: both;
white-space: pre-wrap;
/* color: #EEEEEE; */
color: #f6f3e8;
/* background-color: #333; */
background-color: #242424;
}
.pseudo-code {
font-family: 'Droid Sans Mono', Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace;
white-space: no-wrap;
padding: 1.5em 1em;
background: #EEEEEE;
display: block;
clear: both;
margin-top: 15px;
margin-bottom: 15px;
}
.caution, .notes {
display: block;
padding: 1.5em 1em;
font-style: italic;
}
.notes {
background-color: #EEF4EE;
}
.caution {
background-color: #F8EEEE;
}
.post .credit {
color: #aaa;
font-style: italic;
}
.post-body blockquote {
font-family: 'Droid Sans Mono', Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace;
background-color: #f5f5f5;
border: medium none;
margin: 1em 0;
padding: 5px 5px 5px 15px;
font-style: italic;
border-left: 5px solid #7caf3c;
font-size: 16px;
}
.post-body blockquote pre {
overflow-wrap: break-word;
}
.inline-code {
font-family: 'Droid Sans Mono', Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace;
color: #007000;
white-space: no-wrap;
}
.post-body hr {
border: none;
border-top: dashed 1px #BBBBBB;
color: #ffffff;
background-color: #ffffff;
width: 100%;
margin: 20px 0;
}
.post-body .timestamp {
font-weight: bold;
}
.post-body .step, .post-body .tip {
font-family: 'Oswald', arial, serif;
font-weight: bold;
background-color: #EFEFEF;
padding: 10px 30px;
display: inline-block;
margin: 20px 0;
text-transform: uppercase;
}
/* code */
.Identifier { color: #cae682; }
.Special { color: #e7f6da; }
.Statement { color: #8ac6f2; }
.Function { color: #cae682; }
.String { color: #95e454; font-style: italic; }
.Type { color: #cae682; }
.Comment { color: #99968b; font-style: italic; }
.PreProc { color: #e5786d; }
.Number { color: #e5786d; }
.Constant { color: #e5786d; }
.Title { color: #f6f3e8; font-weight: bold; }
#Attribution1 {display: none;}
#head p.description{display: none;}
.post .postFooterAdSense {
text-align: center;
margin-top: 40px;
}
.post .postFooterAdSenseLink {
margin: 30px auto 20px;
}
/***** Page Nav CSS *****/
.desktop-pager .home-link, .desktop-pager .blog-pager-newer-link, .desktop-pager .blog-pager-older-link {
/*background: #ED702B;*/
background: #e5554e;
color: #fff;
display: inline-block;
padding: 10px 20px;
}
.mobile-link-button {
/*background: #ED702B;*/
background: #e5554e;
padding: 10px 0;
height: 20px;
}
.mobile-link-button a {
color: #fff;
}
/*
#blog-pager {
overflow: hidden;
text-align: left;
font-weight: bold;
font-size: 14px;
}
.showpageOf {  display:none;  }
.showpagePoint {  background: #ED702B;  color: #FFFFFF;  margin: 0 5px;  padding: 10px 20px;  text-decoration: none;  border-radius: 5px;  -moz-border-radius: 5px;  -o-border-radius: 5px;  -webkit-border-radius: 5px;  }
.showpage a, .showpageNum a {  background: #3E3E3E;  color: #fff;  margin: 0 5px;  padding: 10px 20px;  text-decoration: none;  border-radius: 5px;  -moz-border-radius: 5px;  -o-border-radius: 5px;  -webkit-border-radius: 5px;  	-moz-transition: all 0.2s ease-in-out;  -webkit-transition: all 0.2s ease-in-out;  -webkit-border-radius: 5px;  transition: all 0.2s ease-in-out;  }
.showpage a:hover, .showpageNum a:hover {  background: #ED702B;  color: #fff;  text-decoration: none;  }
.home-link, #blog-pager-newer-link a, #blog-pager-older-link a {  background: #ED702B;  color: #fff;  display: inline-block;  padding: 10px 20px;  }
.home-link {  margin: 0 10px;  }
.home-link:hover, #blog-pager-newer-link a:hover, #blog-pager-older-link a:hover {   background: #3E3E3E;  color: #FFFFFF;  text-decoration: none;  }
*/
.post-footer {
margin-top: 30px;
border-top: 1px solid #eee;
padding-top: 10px;
}
.post-body h2, .post-body h3 {
margin-top: 20px;
margin-bottom: 20px;
}
/* Mobile */
.mobile-index-title {
width: 100%;
font-weight: bold;
}
.mobile-post-outer {
padding: 0 10px 10px 10px;
}
.mobile-index-thumbnail {
margin: 0 .5em 0 0;
}
.BlogArchive #ArchiveList ul li {
padding-left: 0;
text-indent: 0;
box-sizing: border-box;
}
.PopularPosts .item-thumbnail {
float: left;
margin: 0 5px 5px 0;
}
#Header1 {
margin: 0 auto;
}
.jump-link {
padding: 10px 0;
}
/***** Table CSS *****/
table.post-table {
min-width: 50%;
background-color: #f9f9f9;
border-collapse: collapse;
border: 1px solid #AAAAAA;
font-family: arial, sans-serif;
font-size: 15px;
line-height: 1.5;
margin: 1em auto;
}
table.post-table td.header, table.post-table th {
background-color: #EEEEEE;
border: 1px solid #AAAAAA;
padding: 0.2em;
text-align: center;
}
table.post-table td {
background-color: #f9f9f9;
border: 1px solid #AAAAAA;
padding: 0.2em;
}
.comment-mark {
display: inline-block;
background-color: #f39c12;
margin: 0 5px;
font-size: 80%;
color: white;
font-weight: bold;
padding: 0px 9px;
border-radius: 3px;
font-style: normal;
}

--></style>
<style>
.post.hentry{
  border-bottom: 0px;
}
/*	#blog-pager { display: none; } */
.post-feeds {
    display: none;
}
</style>
<style>
@media screen and (max-width: 1230px) {
  .container {
    width: 1000px;
  }
  .wrap2 {
    width: 1000px;
  }
  .post-body img {
    max-width: 95%;
  }
  #sidebar {
    max-width: 100%;
    width: 300px;
    padding: 20px;
  }
  .main-wrapper {
    width: 63%;
  }
  .sidebar-wrapper {
    width: 34%;
  }
}

@media screen and (max-width: 1080px) {
  .container {
    width: 940px;
  }
  .wrap2 {
    width: 940px;
  }
  .post-body img {
    max-width: 95%;
  }
  #sidebar {
    max-width: 100%;
    width: 300px;
    padding: 20px 15px;
  }
  .main-wrapper {
    width: 63%;
  }
  .sidebar-wrapper {
    width: 35%;
  }
}

@media screen and (min-width: 768px) and (max-width: 1020px) {
  .blog-feeds {
    display: none;
  }
  body {
    overflow-x: hidden;
  }
  .container {
	  max-width: 800px;
      width: 100%;
  }
  .container-wrapper {
    max-width: 100%;
  }
  .main-wrapper {
    margin: 0 auto;
    float: none;
    width: 100%;
    max-width: 800px;
  }
  .ad-wrapper {
    max-width: 800px;
  }
  .wrap2 {
    width: 100%;
    overflow: hidden;
  }
  #PopularPosts1 {
    padding: 0 10px;
	box-sizing: border-box;
  }
  .post-body img {
    max-width: 100%
  }
  #blog-pager {
    width: 100%;
  }
  #sidebar {
    max-width: 100%;
    width: 100%;
    padding: 20px 0 0 0;
	text-align: center;
  }
  .sidebar-wrapper {
    margin: 0 auto;
    float: none;
    width: 100%;
    max-width: 800px;
  }

}
@media screen and (max-width: 767px) {
  .wrap2 {
    width: 100%;
  }
  #PopularPosts1 {
    padding: 0 10px;
	box-sizing: border-box;
  }
  .main-wrapper {
    width: 100%;
  }
  #sidebar {
    max-width: 100%;
    width: 100%;
    padding: 20px 0 0 0;
	text-align: center;
  }
  .sidebar-wrapper {
    width: 100%;
    padding: 0 20px;
    box-sizing: border-box;
  }
  .post-body img {
    max-width: 80%;
  }
  header .top-content {
    float: left;
    clear: both;
    width: 100%;
  }
  .container {
    max-width: 800px;
    width: 100%;
  }
  .container-wrapper {
    padding-top: 0;
  }
}
@media screen and (max-width: 500px) {
  .post.hentry {
    padding: 20px;
  }
  .ad-wrapper {
    padding: 20px;
  }
  .sidebar-wrapper {
    padding: 0 10px;
  }
  #main {
    width: 100%;
  }
  #head {
    float: none;
	clear: none;
	display: inline-block;
  }
  #Header1 {
    display: inline-block;
  }
  div#header-main-menu {
    float: none;
	display: none;
  }
  nav.menu {
    float: none;
  }
  .post-meta {
    display: none;
  }
  .header-wrapper {
    height: auto;
  }
  .header-inner {
    height: 32px;
	display: inline-block;
  }
  .head h1, .head h1 a {
    line-height: 50px;
  }
  nav.menu ul li {
    float: none;
	border-top: 1px solid #555;
  }
  #header-toggle-menu:before {
    content: "\f0c9";
    font-family: FontAwesome;
	cursor: pointer;
  }
  #header-toggle-menu:hover {
    background-color: #272727;
  }
  #header-toggle-menu {
    display: block;
	font-size: 32px;
	color: #fff;
	padding: 0 20px;
	float: right;
	height: 60px;
	line-height: 60px;
	cursor: pointer;
  }
}
</style>
<!-- Begin: AdSense -->
<script src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/cbgapi.loaded_3" async=""></script><script src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/cbgapi.loaded_2" async=""></script><script src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/cbgapi.loaded_1" async=""></script><script src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/cbgapi.loaded_0" async=""></script><script src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/ca-pub-7794009487786811.js"></script><script async="" src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/analytics.js"></script><script async="" src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/adsbygoogle.js"></script>
<!-- End: AdSense -->
<!-- Begin: jQuery -->
<script src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/jquery.js"></script>
<!-- End: jQuery -->
<!-- Begin: Analytics -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-50330039-1', 'auto');
  ga('send', 'pageview');

</script>
<!-- End: Analytics -->
<link href="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/authorization.css" rel="stylesheet">
</head>
<body>
<div class="header-wrapper">
<div class="header container">
<div id="header-toggle-menu"></div>
<div class="head section" id="head"><div class="widget Header" data-version="1" id="Header1">
<div id="header-inner">
<a href="http://blogger.gtwang.org/">
<img alt="G. T. Wang" id="Header1_headerimg" src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/gtwang-logo-2.png" height="32px; ">
</a>
</div>
</div>
<div class="widget Attribution" data-version="1" id="Attribution1">
<div class="widget-content" style="text-align: center;">
技術提供：<a href="https://www.blogger.com/" target="_blank">Blogger</a>.
</div>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=5628310816558079036&amp;widgetType=Attribution&amp;widgetId=Attribution1&amp;action=editWidget&amp;sectionId=head" onclick='return _WidgetManager._PopupConfig(document.getElementById("Attribution1"));' target="configAttribution1" title="編輯">
<img alt="" src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/icon18_wrench_allbkg.png" width="18" height="18">
</a>
</span>
</span>
<div class="clear"></div>
</div>
</div>
<div id="header-main-menu">
<nav class="menu">
<ul>
<li><a href="http://blog.gtwang.org/"><img src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/gtwang-logo-blue-32.png" style="margin-top: 12px; margin-bottom: -9px;" border="0"> 新網站</a></li>
<li><a href="http://blog.gtwang.org/category/iot/">物聯網</a></li>
<li><a href="http://blog.gtwang.org/statistics/">統計</a></li>
</ul>
</nav>
</div>
</div>
</div>
<!-- Begin: Banner -->
<!-- <div id='banner'> <div class='container'> <div class='ad-wrapper'> -->
<!-- Begin: AdSense -->
<!-- GTWang Top Banner -->
<!-- <ins class='adsbygoogle' data-ad-client='ca-pub-7794009487786811' data-ad-format='horizontal' data-ad-slot='1391833737' style='display:block'/> <script>(adsbygoogle = window.adsbygoogle || []).push({});</script> -->
<!-- End: AdSense -->
<!-- </div> </div></div> -->
<!-- End: Banner -->
<div class="container-wrapper">
<div class="wrap2">
<div class="main-wrapper">
<div class="main section" id="main"><div class="widget Blog" data-version="1" id="Blog1">
<div class="blog-posts hfeed">
<!--Can't find substitution for tag [defaultAdStart]-->

          <div class="date-outer">
        
<h2 class="date-header"><span></span></h2>

          <div class="date-posts">
        
<div class="post-outer">
<div class="post hentry" itemprop="blogPost" itemscope="itemscope" itemtype="http://schema.org/BlogPosting">
<meta content="http://2.bp.blogspot.com/-DoO_bohvDno/UZH17_sZbSI/AAAAAAAANEY/bOoB8PGdrow/s1600/java_logo.gif" itemprop="image_url">
<meta content="5628310816558079036" itemprop="blogId">
<meta content="8500965175470979360" itemprop="postId">
<a name="8500965175470979360"></a>
<h1 class="post-title entry-title" itemprop="name">
使用 Tomcat 7 與 Java Servlet 3.0 API 實作 Asynchronous Servlets：提升伺服器效率的方案</h1>
<div class="post-meta">
<span class="date-span"><i class="fa fa-lg fa-clock-o"></i><span content="2013/05/15" itemprop="datePublished">2013/05/15</span></span>
</div>
<div class="post-header">
<div class="post-header-line-1"></div>
</div>
<div style="text-align: center; padding: 60px 0 40px 0;">
<ins class="adsbygoogle" data-ad-client="ca-pub-7794009487786811" data-ad-format="rectangle" data-ad-slot="6709601337" style="display: block; height: 280px;" data-adsbygoogle-status="done"><ins id="aswift_0_expand" style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:720px;background-color:transparent"><ins id="aswift_0_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:720px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;width:720px;height:280px;" width="720" height="280" frameborder="0"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>
<div style="margin-bottom: 20px;">
<ins class="adsbygoogle" data-ad-client="ca-pub-7794009487786811" data-ad-slot="3372337736" style="display:inline-block;width:200px;height:90px" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:200px;background-color:transparent"><ins id="aswift_1_anchor" style="display:block;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:200px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;width:200px;height:90px;" width="200" height="90" frameborder="0"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>
<div class="post-body entry-content" id="post-body-8500965175470979360" itemprop="description articleBody">
<div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/-DoO_bohvDno/UZH17_sZbSI/AAAAAAAANEY/bOoB8PGdrow/s1600/java_logo.gif" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"><img src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/java_logo.gif" border="0"></a></div>在 Java Servlet 3.0 標準推出之前，如果想要實作 asynchronous 的 servlet 必須使用像 <a href="http://en.wikipedia.org/wiki/Comet_%28programming%29#First_Comet_applications" target="_blank">Comet</a>
 這樣的架構，而現在 Servlet 3.0 API 直接支援 asynchronous 與 synchronous 
兩種模式，而因為這是公開的標準，所以寫好的 Servlet 可以很方便的移植到各種符合 Servlet 3.0 的 app server 
中（例如 Tomcat 7 或是 GlassFish 3.x）。<br>
<br>
在使用 synchronous servlets 時，處理 client HTTP request 的執行序（thread）會跟處理 
request 的過程綁在一起，而在處理工作量比較大、等待時間比較久的 request 時（通常在等待外部的 IO 
或是其他耗時的動作），該執行序就只能等待工作完成，才能執行下一步，這樣的狀況如果在 request 
數量很多的時候，就有可能會造成伺服器的執行序不足的問題，進而影響伺服器整體的效能。<br>
<br>
這種情況主要是由於伺服器上的執行序都在等待外部的工作完成（其實這時候它們都在休息），但是從 client 來的 request 數量又太多時，就會很容易把有限的執行序都佔滿，造成伺服器滿載的狀況，但是其實伺服器的執行序都在休息！<br>
<br>
Asynchronous servlets 基本上就是為了處理這樣的狀況而設計的，它讓處理 request 
的執行序要等待外部工作的時候，可以去處理其他的 request，等到外部工作完成之後，伺服器會找另外一個執行序來把處理完成的外部工作結果送回 
client，在這種架構下，client 不會感覺有任何不同，因為這些執行序與工作的分配都是在伺服器上面發生的，也只跟伺服器本身有關，所有的 
request 資料還是跟以前一樣。<br>
<br>
要達到這樣的工作處理流程，最關鍵的部分就是在外部工作完成時，要如何通知伺服器來領回處理完成的結果，這裡是它所使用的方式是透過 callback 函數的方式（這個 callback 函數是由伺服器本身提供）。<br>
<a name="more"></a><br>
<h2>Pseudo Code</h2>以下是伺服器處理 request 的 pseudo code：<br>
<ol><li>client 的 request 透過 HTTP 協定送到伺服器上，然後 request 被伺服器配送（dispatch）給某一個 servlet 處理。</li>
<li>伺服器上的某個執行序會執行 servlet 的 <span class="inline-code">service()</span> 函數來處理 request。</li>
<li><span class="inline-code">service()</span> 函數必須建立一個 <span class="inline-code">AsyncContext</span> 物件（使用 <span class="inline-code">startAsync()</span> 函數）。</li>
<li><span class="inline-code">service()</span> 函數必須建立一個 <span class="inline-code">Runnable</span> 物件，並傳遞給另一個執行序的 <span class="inline-code">Executor</span> 以執行真正要做的工作。<span class="inline-code">Runnable</span> 物件中會包含一個 <span class="inline-code">AsyncContext</span> 的 reference（因為在工作執行完成時，要通知伺服器領回）。</li>
<li><span class="inline-code">service()</span> 函數執行結束。（這看起來不太直覺，但是在 asynchronous 的架構就是這樣）</li>
</ol>在這個時候 <span class="inline-code">service()</span> 函數雖然執行結束了，但是因為真正的工作還在另外一個執行序中（<span class="inline-code">Executor</span> 物件）處理，所以 client 事實上還在等待，等到真正的工作完成時，伺服器就會接著下面的動作：<br>
<ol><li>當 <span class="inline-code">Executor</span> 的工作完成時，會通知 <span class="inline-code">AsyncContext</span>：它會將結果寫進 <span class="inline-code">HttpResponse</span> 中，然後呼叫 <span class="inline-code">AsyncContext</span> 的 <span class="inline-code">complete()</span> 函數，這樣就會促使伺服器把處理完成的結果送回 client。</li>
</ol><br>
<h2>出問題時怎麼辦？</h2>如果在 <span class="inline-code">Runnable</span> 中所執行的工作出錯時，這時候 <span class="inline-code">Runnable</span> 還沒把結果傳回給 <span class="inline-code">Executor</span>，client 在這種情況下只會收到某種一般的網路錯誤訊息，如果想要自己處理可能發生的錯誤，提供詳細的錯誤訊息，可以用下面的方式：<br>
<ol><li>設置好 timeout 的時間上限，如果 <span class="inline-code">Runnable</span> 在設定的 timeout 時間內沒有正常完成工作的話，就會發出 timeout 的錯誤。</li>
<li>自己加入專門處理 timeout 錯誤的 listener 來處理這樣的錯誤。</li>
</ol>這樣的話，如果 <span class="inline-code">Runnable</span> 在處理工作時出現錯誤，超過我們指定的 timeout 時間沒有完成時，則我們自己撰寫的 listener 就會被呼叫，通知你發生 timeout 錯誤了，這時候你就可以在 listener 中產生要給使用者看的錯誤訊息。如果這時候 <span class="inline-code">Runnable</span> 還繼續嘗試寫入 <span class="inline-code">HttpResponse</span> 物件時或是呼叫 <span class="inline-code">AsyncContext.complete()</span> 函數，都會產生例外（exception），基本上在這裡應該要把之前所產生的輸出全部丟棄，只輸出錯誤訊息。<br>
<br>
<h2>Asynchronous Servlet 範例程式</h2>以下是兩個 asynchronous servlets 範例程式，一個是比較簡單的範例，示範最基本的 asynchronous servlet 的撰寫方式。而另一個則是比較複雜的範例，發生 timeout 錯誤時，該怎麼處理。<br>
<br>
基本上只要符合 Java Servlet 3.0 規格的伺服器都應該可以執行這裡的範例程式，而這裡的伺服器環境是使用 Tomcat 7。<br>
<br>
<h3>Example 1</h3>這個範例是示範基本的 asynchronous servlets 與 web.xml 內容（這也是　Servlet 3.0 的內容之一）。以下是伺服器端的 servlet 程式碼：<br>
<pre class="code"><span class="PreProc">@javax.servlet.annotation.WebServlet</span>(
  <span class="Comment">// servlet name</span>
  name = <span class="Constant">"simple"</span>,
  <span class="Comment">// servlet url pattern</span>
  value = {<span class="Constant">"/simple"</span>},
  <span class="Comment">// async support needed</span>
  asyncSupported = <span class="Constant">true</span>
)
<span class="Type">public</span> <span class="Type">class</span> SimpleAsyncServlet <span class="Type">extends</span> HttpServlet {

  <span class="Comment">/**</span>
<span class="Comment">   *</span><span class="Special"> Simply spawn a new thread (from the app server's pool) for every new async request.</span>
<span class="Comment">   * Will consume a lot more threads for many concurrent requests.</span>
<span class="Comment">   */</span>
  <span class="Type">public</span> <span class="Type">void</span> service(ServletRequest req, <span class="Type">final</span> ServletResponse res)
      <span class="Type">throws</span> ServletException, IOException {

    <span class="Comment">// create the async context, otherwise getAsyncContext() will be null</span>
    <span class="Type">final</span> AsyncContext ctx = req.startAsync();

    <span class="Comment">// set the timeout</span>
    ctx.setTimeout(<span class="Constant">30000</span>);

    <span class="Comment">// attach listener to respond to lifecycle events of this AsyncContext</span>
    ctx.addListener(<span class="Statement">new</span> AsyncListener() {
      <span class="Type">public</span> <span class="Type">void</span> onComplete(AsyncEvent event) <span class="Type">throws</span> IOException {
        log(<span class="Constant">"onComplete called"</span>);
      }
      <span class="Type">public</span> <span class="Type">void</span> onTimeout(AsyncEvent event) <span class="Type">throws</span> IOException {
        log(<span class="Constant">"onTimeout called"</span>);
      }
      <span class="Type">public</span> <span class="Type">void</span> onError(AsyncEvent event) <span class="Type">throws</span> IOException {
        log(<span class="Constant">"onError called"</span>);
      }
      <span class="Type">public</span> <span class="Type">void</span> onStartAsync(AsyncEvent event) <span class="Type">throws</span> IOException {
        log(<span class="Constant">"onStartAsync called"</span>);
      }
    });

    <span class="Comment">// spawn some task in a background thread</span>
    ctx.start(<span class="Statement">new</span> Runnable() {
      <span class="Type">public</span> <span class="Type">void</span> run() {

        <span class="Statement">try</span> {
          ctx.getResponse().getWriter().write(
              MessageFormat.format(<span class="Constant">"&lt;h1&gt;Processing task in bgt_id:[{0}]&lt;/h1&gt;"</span>,
                                   Thread.currentThread().getId()));
        }
        <span class="Statement">catch</span> (IOException e) {
          log(<span class="Constant">"Problem processing task"</span>, e);
        }

        ctx.complete();
      }
    });

  }

}</pre>這段程式碼有一些需要注意的地方：<br>
<ol><li>你可以使用 annotation 指定 servlet 名稱與其 URL 位址，而不用額外撰寫 web.xml 的內容。</li>
<li>這裡必須在 annotation 中加入 <span class="inline-code">asyncSupported=true</span> 告訴伺服器這個 servlet 需要 asynchronous 模式。</li>
<li>在 <span class="inline-code">service()</span> 函數中，timeout 的時間設定為 30 秒，所以如果 <span class="inline-code">Runnable</span> 在 30 秒之內做完所有的工作並且呼叫 <span class="inline-code">complete()</span>，就不會有 timeout 錯誤產生。</li>
<li><span class="inline-code">Runnable</span> 物件將真正要做的主要工作（也是最耗時的部分）包裝起來，交給另外一個執行序執行。</li>
<li>在這理 <span class="inline-code">Runnable</span> 所負責的工作是取得目前執行序的 ID，然後交給伺服器傳回到 client 端。</li>
<li>這裡的 AsyncContext listener 並沒有做什麼事情，只是單純將訊息寫入伺服器的記錄中而已。</li>
</ol><br>
以下是 client 端的 Java 測試程式碼：<br>
<pre class="code"><span class="Type">public</span> <span class="Type">class</span> LoadTester {
  <span class="Type">public</span> <span class="Type">static</span> <span class="Type">final</span> AtomicInteger counter = <span class="Statement">new</span> AtomicInteger(<span class="Constant">0</span>);
  <span class="Type">public</span> <span class="Type">static</span> <span class="Type">final</span> <span class="Type">int</span> maxThreadCount = <span class="Constant">100</span>;

  <span class="Type">public</span> <span class="Type">static</span> <span class="Type">void</span> main(String[] args) <span class="Type">throws</span> InterruptedException {
    <span class="Statement">new</span> LoadTester();
  }

  <span class="Type">public</span> LoadTester() <span class="Type">throws</span> InterruptedException {
    <span class="Comment">// call simple servlet</span>
    ExecutorService exec1 = Executors.newCachedThreadPool();
    <span class="Statement">for</span> (<span class="Type">int</span> i = <span class="Constant">0</span>; i &lt; maxThreadCount; i++) {
      exec1.submit(<span class="Statement">new</span> UrlReaderTask(<span class="Constant">"http://localhost:8080/test/simple"</span>));
    }
    exec1.shutdown();

    Thread.currentThread().sleep(<span class="Constant">5000</span>);
    System.out.println(<span class="Constant">"....NEXT...."</span>);

    <span class="Comment">// call complex servlet</span>
    counter.set(<span class="Constant">0</span>);
    ExecutorService exec2 = Executors.newCachedThreadPool();
    <span class="Statement">for</span> (<span class="Type">int</span> i = <span class="Constant">0</span>; i &lt; maxThreadCount; i++) {
      exec2.submit(<span class="Statement">new</span> UrlReaderTask(<span class="Constant">"http://localhost:8080/test/complex"</span>));
    }
    exec2.awaitTermination(<span class="Constant">1</span>, TimeUnit.DAYS);
  }

  <span class="Type">public</span> <span class="Type">class</span> UrlReaderTask <span class="Type">implements</span> Runnable {
    <span class="Type">private</span> String endpoint;
    <span class="Type">public</span> UrlReaderTask(String s) {
      endpoint = s;
    }
    <span class="Type">public</span> <span class="Type">void</span> run() {
      <span class="Statement">try</span> {
        actuallyrun();
      }
      <span class="Statement">catch</span> (Exception e) {
        System.err.println(e.toString());
      }
    }
    <span class="Type">public</span> <span class="Type">void</span> actuallyrun() <span class="Type">throws</span> Exception {
      <span class="Type">int</span> count = counter.addAndGet(<span class="Constant">1</span>);
      BufferedReader in = <span class="Statement">new</span> BufferedReader(
          <span class="Statement">new</span> InputStreamReader(<span class="Statement">new</span> URL(endpoint).openStream()));
      String inputLine;
      <span class="Statement">while</span> ((inputLine = in.readLine()) != <span class="Constant">null</span>) {
        System.out.println(MessageFormat.format(<span class="Constant">"thread[{0}] : {1} : {2}"</span>,
                                                count, inputLine, endpoint));
      }
      in.close();
    }
  }
} <span class="Comment">//end class ComplexLoadTester</span></pre>這個簡單的 Java 程式會產生 100 個執行序，同時建立 HTTP 的連線連到我們寫的 asynchronous servlets，然後輸出從伺服器上取得的執行序 ID 資訊。<br>
<br>
在這個範例中，我們取得的執行序 ID 會比較雜亂，因為這些執行序是來自於 Tomcat 7 伺服器的 thread pool。<br>
<br>
<h3>Example 2</h3>這個比較複雜的範例是將上面的範例再做一些改變：<br>
<br>
<ol><li>這個範例中，servlet 使用 fixed thread pool 管理自己的 thread pool，而 thread pool 的大小在這裡是使用 annotation 透過 servlet 的 init parameter 將預設值設定為 3。</li>
<li>在前 4 個 requests 中會模擬出錯的狀況，在 <span class="inline-code">service()</span> 中產生例外（exception）。</li>
<li>在模擬耗時的工作部分，我們使用 <span class="inline-code">sleep()</span> 函數讓程式休息 0 到 5 秒（隨機產生），而 <span class="inline-code">AsyncContext</span>
 的 timeout 的時間上限則設為 60 秒，所以大約最後的 20 筆 requests 會出現 timeout 的錯誤，因為我們總共只有 3
 個執行序可以同時處理 100 筆 requests，排在後面的 requests 就會來不及在 60 秒之內處理完。</li>
<li>如果在 timeout 錯誤發生時，<span class="inline-code">AsyncContext</span> 的 listener 必須要自己呼叫 <span class="inline-code">AsyncContext.complete()</span> 函數。 </li>
<li>一旦 timeout 錯誤發生，伺服器就會將 <span class="inline-code">AsyncContext</span> 中的 <span class="inline-code">HttpRequest</span> 與 <span class="inline-code">HttpResponse</span> 物件設為 invalid，透過這樣的方式通知正在執行的工作說 <span class="inline-code">AsyncContext</span> 已經是 invalid 的狀態了，這也是為什麼在 <span class="inline-code">Runnable</span> 中執行完成後，在寫入 response 之前，要先檢查它是不是 <span class="inline-code">null</span>，這個動作請記得一定要做，因為在 timeout 錯誤發生時，<span class="inline-code">Runnable</span> 這邊正在執行的工作可能無法得知 timeout 的錯誤，只能靠檢查 request 與 response 是否為 <span class="inline-code">null</span> 的方式來判斷，如果檢查出來是 <span class="inline-code">null</span>，則所有正在執行的工作都可以終止了，因為這個時候 <span class="inline-code">AsyncContext</span> 的 listener 或伺服器已經將 timeout 的錯誤訊息傳給 client 端了，縱使你把所有的工作算完也沒有用了。</li>
</ol>以下是這個範例的程式碼：<br>
<pre class="code"><span class="PreProc">@javax.servlet.annotation.WebServlet</span>(
    <span class="Comment">// servlet name</span>
    name = <span class="Constant">"complex"</span>,
    <span class="Comment">// servlet url pattern</span>
    value = {<span class="Constant">"/complex"</span>},
    <span class="Comment">// async support needed</span>
    asyncSupported = <span class="Constant">true</span>,
    <span class="Comment">// servlet init params</span>
    initParams = {
        <span class="PreProc">@WebInitParam</span>(name = <span class="Constant">"threadpoolsize"</span>, value = <span class="Constant">"3"</span>)
    }
)
<span class="Type">public</span> <span class="Type">class</span> ComplexAsyncServlet <span class="Type">extends</span> HttpServlet {
  <span class="Type">public</span> <span class="Type">static</span> <span class="Type">final</span> AtomicInteger counter = <span class="Statement">new</span> AtomicInteger(<span class="Constant">0</span>);
  <span class="Type">public</span> <span class="Type">static</span> <span class="Type">final</span> <span class="Type">int</span> CALLBACK_TIMEOUT = <span class="Constant">60000</span>;
  <span class="Type">public</span> <span class="Type">static</span> <span class="Type">final</span> <span class="Type">int</span> MAX_SIMULATED_TASK_LENGTH_MS = <span class="Constant">5000</span>;

  <span class="Comment">/**</span><span class="Special"> executor svc </span><span class="Comment">*/</span>
  <span class="Type">private</span> ExecutorService exec;

  <span class="Comment">/**</span><span class="Special"> create the executor </span><span class="Comment">*/</span>
  <span class="Type">public</span> <span class="Type">void</span> init() <span class="Type">throws</span> ServletException {
    <span class="Type">int</span> size = Integer.parseInt(
        getInitParameter(<span class="Constant">"threadpoolsize"</span>));
    exec = Executors.newFixedThreadPool(size);
  }

  <span class="Comment">/**</span><span class="Special"> destroy the executor </span><span class="Comment">*/</span>
  <span class="Type">public</span> <span class="Type">void</span> destroy() {
    exec.shutdown();
  }

  <span class="Comment">/**</span>
<span class="Comment">   *</span><span class="Special"> Spawn the task on the provided </span><span class="Special">{@link #exec}</span><span class="Special"> object.</span>
<span class="Comment">   * This limits the max number of threads in the</span>
<span class="Comment">   * pool that can be spawned and puts a ceiling on</span>
<span class="Comment">   * the max number of threads that can be used to</span>
<span class="Comment">   * the init param "threadpoolsize".</span>
<span class="Comment">   */</span>
  <span class="Type">public</span> <span class="Type">void</span> service(<span class="Type">final</span> ServletRequest req, <span class="Type">final</span> ServletResponse res)
      <span class="Type">throws</span> ServletException, IOException {
    <span class="Comment">// create the async context, otherwise getAsyncContext() will be null</span>
    <span class="Type">final</span> AsyncContext ctx = req.startAsync();
    <span class="Comment">// set the timeout</span>
    ctx.setTimeout(CALLBACK_TIMEOUT);
    <span class="Comment">// attach listener to respond to lifecycle events of this AsyncContext</span>
    ctx.addListener(<span class="Statement">new</span> AsyncListener() {
      <span class="Comment">/** complete() has already been called on the async context, nothing to do */</span>
      <span class="Type">public</span> <span class="Type">void</span> onComplete(AsyncEvent event) <span class="Type">throws</span> IOException { }
      <span class="Comment">/** timeout has occured in async task... handle it */</span>
      <span class="Type">public</span> <span class="Type">void</span> onTimeout(AsyncEvent event) <span class="Type">throws</span> IOException {
        log(<span class="Constant">"onTimeout called"</span>);
        log(event.toString());
        ctx.getResponse().getWriter().write(<span class="Constant">"TIMEOUT"</span>);
        ctx.complete();
      }
      <span class="Comment">/** THIS NEVER GETS CALLED - error has occured in async task... handle it */</span>
      <span class="Type">public</span> <span class="Type">void</span> onError(AsyncEvent event) <span class="Type">throws</span> IOException {
        log(<span class="Constant">"onError called"</span>);
        log(event.toString());
        ctx.getResponse().getWriter().write(<span class="Constant">"ERROR"</span>);
        ctx.complete();
      }
      <span class="Comment">/** async context has started, nothing to do */</span>
      <span class="Type">public</span> <span class="Type">void</span> onStartAsync(AsyncEvent event) <span class="Type">throws</span> IOException { }
    });
    <span class="Comment">// simulate error - this does not cause onError - causes network error on client side</span>
    <span class="Statement">if</span> (counter.addAndGet(<span class="Constant">1</span>) &lt; <span class="Constant">5</span>) {
      <span class="Statement">throw</span> <span class="Statement">new</span> IndexOutOfBoundsException(<span class="Constant">"Simulated error"</span>);
    } <span class="Statement">else</span> {
      <span class="Comment">// spawn some task to be run in executor</span>
      enqueLongRunningTask(ctx);
    }
  }

  <span class="Comment">/**</span>
<span class="Comment">   *</span><span class="Special"> if something goes wrong in the task, it simply causes timeout condition</span>
<span class="Comment">   *</span><span class="Special"> that causes the async context listener to be invoked (after the fact)</span>
<span class="Comment">   *</span><span class="Special"> </span><span class="Identifier">&lt;</span><span class="Statement">p</span><span class="Identifier">/&gt;</span>
<span class="Comment">   *</span><span class="Special"> if the </span><span class="Special">{@link AsyncContext#getResponse()}</span><span class="Special"> is null, that means this</span>
<span class="Comment">   *</span><span class="Special"> context has already timedout (and context listener has been invoked).</span>
<span class="Comment">   */</span>
  <span class="Type">private</span> <span class="Type">void</span> enqueLongRunningTask(<span class="Type">final</span> AsyncContext ctx) {
    exec.execute(<span class="Statement">new</span> Runnable() {
      <span class="Type">public</span> <span class="Type">void</span> run() {
        <span class="Statement">try</span> {
          <span class="Comment">// simulate random delay</span>
          <span class="Type">int</span> delay = <span class="Statement">new</span> Random().nextInt(MAX_SIMULATED_TASK_LENGTH_MS);
          Thread.currentThread().sleep(delay);
          <span class="Comment">// response is null if the context has already timedout</span>
          <span class="Comment">// (at this point the app server has called the listener already)</span>
          ServletResponse response = ctx.getResponse();
          <span class="Statement">if</span> (response != <span class="Constant">null</span>) {
            response.getWriter().write(
                MessageFormat.format(
                    <span class="Constant">"&lt;h1&gt;Processing task in bgt_id:[{0}], delay:{1}&lt;/h1&gt;"</span>,
                        Thread.currentThread().getId(), delay)
            );
            ctx.complete();
          }
          <span class="Statement">else</span> {
            <span class="Statement">throw</span> <span class="Statement">new</span> IllegalStateException(
                <span class="Constant">"Response object from context is null!"</span>);
          }
        }
        <span class="Statement">catch</span> (Exception e) {
          log(<span class="Constant">"Problem processing task"</span>, e);
          e.printStackTrace();
        }
      }
    });
  }
}</pre>這個範例的 client 程式是與上一個範例共用的，也就是說我們是使用一個 client 程式同時測試兩個不同的 servlets。<br>
<br>
當你使用 client 程式同時產生 100 筆 requests 來測試這個比較複雜的範例的時候，有幾個地方是需要注意的：<br>
<ol><li>這個較複雜的範例最多只會同時使用 3 條執行序來處理 100 筆 requests。</li>
<li>在這個比較複雜的 servlet 中每一筆 request 最多會花費五秒鐘來處理，大約有 20% 的 requests 會發生 
timeout 錯誤（因為 timeout 時間上限設為 60 秒，所有的 requests 都是一起進入伺服器中的，然後排在伺服器中的 
queue 中等待處理）。</li>
<li>縱使 100 筆 requests 可以一起進入伺服器，但是在同一個時間只有 3 個執行序在處理工作。</li>
<li>在 timeout 錯誤發生之後，即使 AsyncContext 的 listener 已經呼叫 complete() 並將錯誤訊息送給
 client 了，但是 Runnable 還是會繼續執行它的工作，直到最後產生錯誤之後將結果丟棄，這個情況是程式設計者在撰寫 
asynchronous servlet 時需要謹記在心的，如果 timeout 錯誤發生後，還讓這樣的工作在背後跑，是會浪費 CPU 
與記憶體的資源的（在 Java 
中的執行序並沒有優先權的設定，所有的執行序都會一起執行），所以最好在撰寫這樣的程式時，要在執行工作時，順便檢查一下是否有 timeout 
的情況，以避免這樣的狀況發生。</li>
<li>當伺服處理器前四筆 requests 時，會產生我們設定好的錯誤例外，這時候在 client 端也會產生對應的網路例外。</li>
</ol><br>
<h2>到底要不要使用 Asynchronous Servlet？</h2>asynchronous servlet 
所帶給伺服器的效能提昇是顯而易見的，而且基本上只要你對於 asynchronous 的處理流程夠了解，Servlet API 3.0 所提供的 
asynchronous API 應該是很容易使用的，所以如果你的伺服器端會常常處理耗時的工作，就可以改用這樣的架構。<br>
<br>
但如果你沒有搞清楚 asynchronous 的處理方式，則面對這些不太直覺的 callback 使用方式，可能會讓你更頭痛，縱使使用 
asynchronous servlet 
可以讓伺服器的效能提昇，但是程式開發者還是要很了解這個架構的運行方式，以免為了提昇效能反而造成程式出錯。<br>
<br>
<br>
除了 asynchronous 之外，Tomcat 7 與 Servlet API 3.0 也使用一些 annotations 可以讓設定 
servlet 更容易，並且還可以動態載入 servlet（loading servlets 
programmatically），有興趣的人可以自己查詢相關的資料。<br>
<br>
參考資料：<a href="http://developerlife.com/tutorials/?p=1437" target="_blank">Developer Life</a>、<a href="http://rameshpvk.blogspot.tw/2012/11/comparing-servlet-30-asynchronous.html" target="_blank">Ramesh PVK</a>、<a href="http://jcp.org/aboutJava/communityprocess/final/jsr315/" target="_blank">JSR-000315 Java Servlet 3.0</a>
<div style="clear: both;"></div>
</div>
<div class="postFooterAdSenseLink">
<ins class="adsbygoogle" data-ad-client="ca-pub-7794009487786811" data-ad-slot="1309325334" style="display:inline-block;width:200px;height:90px" data-adsbygoogle-status="done"><ins id="aswift_2_expand" style="display:inline-table;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:200px;background-color:transparent"><ins id="aswift_2_anchor" style="display:block;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:200px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_2" name="aswift_2" style="left:0;position:absolute;top:0;width:200px;height:90px;" width="200" height="90" frameborder="0"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>
<div class="postFooterAdSense">
<ins class="adsbygoogle" data-ad-client="ca-pub-7794009487786811" data-ad-format="rectangle" data-ad-slot="5977993731" style="display: block; height: 280px;" data-adsbygoogle-status="done"><ins id="aswift_3_expand" style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:720px;background-color:transparent"><ins id="aswift_3_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:720px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_3" name="aswift_3" style="left:0;position:absolute;top:0;width:720px;height:280px;" width="720" height="280" frameborder="0"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>
<div class="notes" style="margin-top:30px;font-size: 18px;  background-color: #F7F7dd;"><span>➤</span> 本站已經搬家了，欲查看最新的文章，請至 <a href="http://blog.gtwang.org/">G. T. Wang 新網站</a>。</div>
<div style="margin-top:30px;">
<ins class="adsbygoogle" data-ad-client="ca-pub-7794009487786811" data-ad-format="autorelaxed" data-ad-slot="1433404134" style="display: block; height: 432px;" data-adsbygoogle-status="done"><ins id="aswift_4_expand" style="display:inline-table;border:none;height:432px;margin:0;padding:0;position:relative;visibility:visible;width:720px;background-color:transparent"><ins id="aswift_4_anchor" style="display:block;border:none;height:432px;margin:0;padding:0;position:relative;visibility:visible;width:720px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_4" name="aswift_4" style="left:0;position:absolute;top:0;width:720px;height:432px;" width="720" height="432" frameborder="0"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>
<div style="clear: both;"></div>
<div class="post-footer">
<div class="post-footer-line post-footer-line-1">
<div class="post-share-buttons goog-inline-block">
<a class="goog-inline-block share-button sb-email" href="https://www.blogger.com/share-post.g?blogID=5628310816558079036&amp;postID=8500965175470979360&amp;target=email" target="_blank" title="以電子郵件傳送這篇文章"><span class="share-button-link-text">以電子郵件傳送這篇文章</span></a><a class="goog-inline-block share-button sb-blog" href="https://www.blogger.com/share-post.g?blogID=5628310816558079036&amp;postID=8500965175470979360&amp;target=blog" onclick='window.open(this.href, "_blank", "height=270,width=475"); return false;' target="_blank" title="BlogThis！"><span class="share-button-link-text">BlogThis！</span></a><a class="goog-inline-block share-button sb-twitter" href="https://www.blogger.com/share-post.g?blogID=5628310816558079036&amp;postID=8500965175470979360&amp;target=twitter" target="_blank" title="分享至 Twitter"><span class="share-button-link-text">分享至 Twitter</span></a><a class="goog-inline-block share-button sb-facebook" href="https://www.blogger.com/share-post.g?blogID=5628310816558079036&amp;postID=8500965175470979360&amp;target=facebook" onclick='window.open(this.href, "_blank", "height=430,width=640"); return false;' target="_blank" title="分享至 Facebook"><span class="share-button-link-text">分享至 Facebook</span></a><a class="goog-inline-block share-button sb-pinterest" href="https://www.blogger.com/share-post.g?blogID=5628310816558079036&amp;postID=8500965175470979360&amp;target=pinterest" target="_blank" title="分享到 Pinterest"><span class="share-button-link-text">分享到 Pinterest</span></a><div class="goog-inline-block dummy-container"><div style="text-indent: 0px; margin: 0px; padding: 0px; background: transparent none repeat scroll 0% 0%; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 300px; height: 20px;" id="___plusone_0"><iframe ng-non-bindable="" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="position: static; top: 0px; width: 300px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 20px;" tabindex="0" vspace="0" id="I0_1495544755681" name="I0_1495544755681" src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/fastbutton.htm" data-gapiattached="true" title="+1" width="100%" frameborder="0"></iframe></div></div>
</div>
</div>
<div class="post-footer-line post-footer-line-2">
<span style="color:#666;font-size:14px;margin:0;">LABEL:</span><span class="post-labels">
<a href="http://blogger.gtwang.org/search/label/%E5%B7%B2%E8%BD%89%E7%A7%BB%E7%BD%AE%20WP" rel="tag">已轉移置 WP</a>,
<a href="http://blogger.gtwang.org/search/label/%E6%95%99%E5%AD%B8" rel="tag">教學</a>,
<a href="http://blogger.gtwang.org/search/label/%E7%A8%8B%E5%BC%8F" rel="tag">程式</a>,
<a href="http://blogger.gtwang.org/search/label/%E9%9B%B2%E7%AB%AF" rel="tag">雲端</a>,
<a href="http://blogger.gtwang.org/search/label/Java" rel="tag">Java</a>,
<a href="http://blogger.gtwang.org/search/label/Servlet" rel="tag">Servlet</a>
</span>
</div>
<div class="post-footer-line post-footer-line-3">
<span class="post-location">
</span>
</div>
</div>
</div>
<script src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/plusone.js" type="text/javascript" gapi_processed="true"></script>
<div class="cmt_iframe_holder" data-href="http://blogger.gtwang.org/2013/05/asynchronous-servlets-with-tomcat7.html" data-viewtype="" id="gpluscomments" style="text-indent: 0px; margin: 0px; padding: 0px; background: transparent none repeat scroll 0% 0%; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 801px; height: 600px;"><iframe ng-non-bindable="" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="position: static; top: 0px; width: 801px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 600px;" tabindex="0" vspace="0" id="I1_1495544756223" name="I1_1495544756223" src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/comments.htm" data-gapiattached="true" title="評論這個項目" width="100%" frameborder="0"></iframe></div>
</div>

        </div></div>
      
<!--Can't find substitution for tag [adEnd]-->
</div>
<div class="blog-pager desktop-pager" id="blog-pager">
<span id="blog-pager-newer-link">
<a class="blog-pager-newer-link" href="http://blogger.gtwang.org/2013/05/Java-Servlet-HttpSessionListener-usage.html" id="Blog1_blog-pager-newer-link" title="較新的文章">較新的文章</a>
</span>
<span id="blog-pager-older-link">
<a class="blog-pager-older-link" href="http://blogger.gtwang.org/2013/05/argument-list-too-long-error-solution.html" id="Blog1_blog-pager-older-link" title="較舊的文章">較舊的文章</a>
</span>
<a class="home-link" href="http://blogger.gtwang.org/">首頁</a>
</div>
<div class="clear"></div>
<div class="post-feeds">
<div class="feed-links">
訂閱：
<a class="feed-link" href="http://blogger.gtwang.org/feeds/8500965175470979360/comments/default" target="_blank" type="application/atom+xml">張貼留言 (Atom)</a>
</div>
</div>
<script type="text/javascript">window.___gcfg = {'lang': 'zh_TW'};</script>
</div></div>
</div>
<div class="sidebar-wrapper">
<div class="sidebar section" id="sidebar"><div class="widget HTML" data-version="1" id="HTML3">
<div class="widget-content">
<div style="text-align:center">
<!-- GTWang 側邊欄300x250 -->
<ins class="adsbygoogle" style="display: inline-block; width: 300px; height: 250px;" data-ad-client="ca-pub-7794009487786811" data-ad-slot="8257292931" data-adsbygoogle-status="done"><ins id="aswift_5_expand" style="display:inline-table;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><ins id="aswift_5_anchor" style="display:block;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_5" name="aswift_5" style="left:0;position:absolute;top:0;width:300px;height:250px;" width="300" height="250" frameborder="0"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>

<div style="margin-top:40px;">
<!-- GTWang 側邊連結200x90 -->
<ins class="adsbygoogle" style="display:inline-block;width:200px;height:90px" data-ad-client="ca-pub-7794009487786811" data-ad-slot="8093018933" data-adsbygoogle-status="done"><ins id="aswift_6_expand" style="display:inline-table;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:200px;background-color:transparent"><ins id="aswift_6_anchor" style="display:block;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:200px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_6" name="aswift_6" style="left:0;position:absolute;top:0;width:200px;height:90px;" width="200" height="90" frameborder="0"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
</div>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=5628310816558079036&amp;widgetType=HTML&amp;widgetId=HTML3&amp;action=editWidget&amp;sectionId=sidebar" onclick='return _WidgetManager._PopupConfig(document.getElementById("HTML3"));' target="configHTML3" title="編輯">
<img alt="" src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/icon18_wrench_allbkg.png" width="18" height="18">
</a>
</span>
</span>
<div class="clear"></div>
</div><div class="widget PopularPosts" data-version="1" id="PopularPosts1">
<h2>熱門文章</h2>
<div class="widget-content popular-posts">
<ul>
<li>
<a href="http://blogger.gtwang.org/2011/11/blog-post.html">各種避邪植物（抹草、榕樹葉、芙蓉葉）</a>
</li>
<li>
<a href="http://blogger.gtwang.org/2015/02/artemisias.html">艾草薰香避邪，適用於貴氣的嬰兒或小朋友</a>
</li>
<li>
<a href="http://blogger.gtwang.org/2015/02/ywrobot-arduino-lcm-1602-iic-v1-lcd-display.html">Arduino 使用 1602 IIC（I2C） LCD 點陣液晶模組</a>
</li>
<li>
<a href="http://blogger.gtwang.org/2015/02/how-to-check-motherboard-model-in-windows.html">如何在 Windows 中查詢主機板的型號？不用拆機殼</a>
</li>
<li>
<a href="http://blogger.gtwang.org/2014/12/raspberry-pi-keyboard-config.html">Raspberry Pi 更改鍵盤設定</a>
</li>
</ul>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=5628310816558079036&amp;widgetType=PopularPosts&amp;widgetId=PopularPosts1&amp;action=editWidget&amp;sectionId=sidebar" onclick='return _WidgetManager._PopupConfig(document.getElementById("PopularPosts1"));' target="configPopularPosts1" title="編輯">
<img alt="" src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/icon18_wrench_allbkg.png" width="18" height="18">
</a>
</span>
</span>
<div class="clear"></div>
</div>
</div><div class="widget HTML" data-version="1" id="HTML2">
<div class="widget-content">
<!-- 在您要顯示&#12300;小工具&#12301;的位置放上這個標記&#12290; -->
<div style="text-indent: 0px; margin: 0px; padding: 0px; background: transparent none repeat scroll 0% 0%; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 300px; height: 354px;" id="___page_0"><iframe ng-non-bindable="" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="position: static; top: 0px; width: 300px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 354px;" tabindex="0" vspace="0" id="I0_1495544755891" name="I0_1495544755891" src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/page.htm" data-gapiattached="true" title="+Badge" width="100%" frameborder="0"></iframe></div>
</div>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=5628310816558079036&amp;widgetType=HTML&amp;widgetId=HTML2&amp;action=editWidget&amp;sectionId=sidebar" onclick='return _WidgetManager._PopupConfig(document.getElementById("HTML2"));' target="configHTML2" title="編輯">
<img alt="" src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/icon18_wrench_allbkg.png" width="18" height="18">
</a>
</span>
</span>
<div class="clear"></div>
</div><div class="widget Stats" data-version="1" id="Stats1">
<h2>總瀏覽量</h2>
<div class="widget-content">
<div id="Stats1_content" style="">
<span class="counter-wrapper text-counter-wrapper" id="Stats1_totalCount">4,310,967</span>
<div class="clear"></div>
<span class="widget-item-control">
<span class="item-control blog-admin">
<a class="quickedit" href="http://www.blogger.com/rearrange?blogID=5628310816558079036&amp;widgetType=Stats&amp;widgetId=Stats1&amp;action=editWidget&amp;sectionId=sidebar" onclick='return _WidgetManager._PopupConfig(document.getElementById("Stats1"));' target="configStats1" title="編輯">
<img alt="" src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/icon18_wrench_allbkg.png" width="18" height="18">
</a>
</span>
</span>
<div class="clear"></div>
</div>
</div>
</div></div>
</div>
</div></div>
<footer>
<div class="footer container">
<div class="social-icons">
<a class="facebook" href="https://www.facebook.com/pages/G-T-Wang/489529864441673" target="_blank"><i class="fa fa-facebook"></i></a>
<a class="google" href="https://plus.google.com/+SealmemoryBlogspotTwMain" rel="publisher" target="_blank"><i class="fa fa-google-plus"></i></a>
<!-- <a class='twitter' href='http://twitter.com/twitter'/> <a class='linkedin' href='#'/> <a class='dribbble' href='#'/> <a class='flickr' href='#'/> <a class='skype' href='#'/> <a class='pinterest' href='#'/> <a class='vimeo' href='#'/> <a class='tumblr' href='#'/> <a class='youtube' href='#'/> <a class='soundcloud' href='#'/> <a class='instagram' href='#'/> <a class='github' href='#'/> -->
</div>
<div class="copyrights">
											Copyright © <script type="text/javascript">var creditsyear = new Date();document.write(creditsyear.getFullYear());</script>2017
<a href="http://blogger.gtwang.org/">G. T. Wang</a><br>Author: <a href="https://plus.google.com/+GuoZhaoWang?rel=author" target="_blank">+GuoZhaoWang</a>
</div>
</div>
</footer>
<script>
$(function() {
	$("#header-toggle-menu").click(function() {
		$("#header-main-menu").slideToggle();
	});
});
</script>
<script src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/plusone.js" type="text/javascript" gapi_processed="true"></script>

<script type="text/javascript" src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/1411214009-widgets.js"></script>
<script type="text/javascript">
window['__wavt'] = 'AOuZoY446nNN1y39RjwQAPz3re49QZvVxQ:1495544705564';_WidgetManager._Init('//www.blogger.com/rearrange?blogID\x3d5628310816558079036','//blogger.gtwang.org/2013/05/asynchronous-servlets-with-tomcat7.html','5628310816558079036');
_WidgetManager._SetDataContext([{'name': 'blog', 'data': {'blogId': '5628310816558079036', 'title': 'G. T. Wang', 'url': 'http://blogger.gtwang.org/2013/05/asynchronous-servlets-with-tomcat7.html', 'canonicalUrl': 'http://blogger.gtwang.org/2013/05/asynchronous-servlets-with-tomcat7.html', 'homepageUrl': 'http://blogger.gtwang.org/', 'searchUrl': 'http://blogger.gtwang.org/search', 'canonicalHomepageUrl': 'http://blogger.gtwang.org/', 'blogspotFaviconUrl': 'http://blogger.gtwang.org/favicon.ico', 'bloggerUrl': 'https://www.blogger.com', 'hasCustomDomain': true, 'httpsEnabled': false, 'enabledCommentProfileImages': true, 'gPlusViewType': 'FILTERED_POSTMOD', 'adultContent': false, 'analyticsAccountNumber': '', 'encoding': 'UTF-8', 'locale': 'zh-TW', 'localeUnderscoreDelimited': 'zh_tw', 'languageDirection': 'ltr', 'isPrivate': false, 'isMobile': false, 'isMobileRequest': false, 'mobileClass': '', 'isPrivateBlog': false, 'feedLinks': '\x3clink rel\x3d\x22alternate\x22 type\x3d\x22application/atom+xml\x22 title\x3d\x22G. T. Wang - Atom\x22 href\x3d\x22http://blogger.gtwang.org/feeds/posts/default\x22 /\x3e\n\x3clink rel\x3d\x22alternate\x22 type\x3d\x22application/rss+xml\x22 title\x3d\x22G. T. Wang - RSS\x22 href\x3d\x22http://blogger.gtwang.org/feeds/posts/default?alt\x3drss\x22 /\x3e\n\x3clink rel\x3d\x22service.post\x22 type\x3d\x22application/atom+xml\x22 title\x3d\x22G. T. Wang - Atom\x22 href\x3d\x22https://www.blogger.com/feeds/5628310816558079036/posts/default\x22 /\x3e\n\n\x3clink rel\x3d\x22alternate\x22 type\x3d\x22application/atom+xml\x22 title\x3d\x22G. T. Wang - Atom\x22 href\x3d\x22http://blogger.gtwang.org/feeds/8500965175470979360/comments/default\x22 /\x3e\n', 'meTag': '', 'openIdOpTag': '', 'mobileHeadScript': '', 'adsenseClientId': 'ca-pub-7794009487786811', 'adsenseHostId': 'ca-host-pub-1556223355139109', 'ieCssRetrofitLinks': '\x3c!--[if IE]\x3e\x3cscript type\x3d\x22text/javascript\x22 src\x3d\x22https://www.blogger.com/static/v1/jsbin/3095787282-ieretrofit.js\x22\x3e\x3c/script\x3e\n\x3c![endif]--\x3e', 'view': '', 'dynamicViewsCommentsSrc': '//www.blogblog.com/dynamicviews/4224c15c4e7c9321/js/comments.js', 'dynamicViewsScriptSrc': '//www.blogblog.com/dynamicviews/5a8b61d3f476b831', 'plusOneApiSrc': 'https://apis.google.com/js/plusone.js', 'sharing': {'platforms': [{'name': '取得連結', 'key': 'link', 'shareMessage': '取得連結', 'target': ''}, {'name': 'Facebook', 'key': 'facebook', 'shareMessage': '分享到 Facebook', 'target': 'facebook'}, {'name': 'BlogThis&#65281;', 'key': 'blogThis', 'shareMessage': 'BlogThis&#65281;', 'target': 'blog'}, {'name': 'Twitter', 'key': 'twitter', 'shareMessage': '分享到 Twitter', 'target': 'twitter'}, {'name': 'Pinterest', 'key': 'pinterest', 'shareMessage': '分享到 Pinterest', 'target': 'pinterest'}, {'name': 'Google+', 'key': 'googlePlus', 'shareMessage': '分享到 Google+', 'target': 'googleplus'}, {'name': '以電子郵件傳送', 'key': 'email', 'shareMessage': '以電子郵件傳送', 'target': 'email'}], 'googlePlusShareButtonWidth': 300, 'googlePlusBootstrap': '\x3cscript type\x3d\x22text/javascript\x22\x3ewindow.___gcfg \x3d {\x27lang\x27: \x27zh_TW\x27};\x3c/script\x3e'}, 'jumpLinkMessage': '繼續閱讀 &#187;', 'pageType': 'item', 'postId': '8500965175470979360', 'postImageThumbnailUrl': 'http://2.bp.blogspot.com/-DoO_bohvDno/UZH17_sZbSI/AAAAAAAANEY/bOoB8PGdrow/s72-c/java_logo.gif', 'postImageUrl': 'http://2.bp.blogspot.com/-DoO_bohvDno/UZH17_sZbSI/AAAAAAAANEY/bOoB8PGdrow/s1600/java_logo.gif', 'pageName': '使用 Tomcat 7 與 Java Servlet 3.0 API 實作 Asynchronous Servlets&#65306;提升伺服器效率的方案', 'pageTitle': 'G. T. Wang: 使用 Tomcat 7 與 Java Servlet 3.0 API 實作 Asynchronous Servlets&#65306;提升伺服器效率的方案', 'metaDescription': ''}}, {'name': 'features', 'data': {'unsupported_browser_message': 'false', 'lightbox_img_parsing': 'false', 'sharing_get_link_dialog': 'false'}}, {'name': 'messages', 'data': {'linkCopiedToClipboard': '已將連結複製到剪貼簿&#65281;', 'postLink': '文章連結'}}, {'name': 'template', 'data': {'name': 'custom', 'localizedName': '自訂', 'isResponsive': false, 'isAlternateRendering': false, 'isCustom': true}}, {'name': 'view', 'data': {'classic': {'name': 'classic', 'url': '?view\x3dclassic'}, 'flipcard': {'name': 'flipcard', 'url': '?view\x3dflipcard'}, 'magazine': {'name': 'magazine', 'url': '?view\x3dmagazine'}, 'mosaic': {'name': 'mosaic', 'url': '?view\x3dmosaic'}, 'sidebar': {'name': 'sidebar', 'url': '?view\x3dsidebar'}, 'snapshot': {'name': 'snapshot', 'url': '?view\x3dsnapshot'}, 'timeslide': {'name': 'timeslide', 'url': '?view\x3dtimeslide'}, 'isMobile': false, 'title': '使用 Tomcat 7 與 Java Servlet 3.0 API 實作 Asynchronous Servlets&#65306;提升伺服器效率的方案', 'description': 'G. T. Wang 部落格&#65292;分享 GNU/Linux 與 Open Source 技術&#12289;教學文件&#12289;程式設計技巧&#12289;統計研究與生活點滴記錄', 'featuredImage': 'http://2.bp.blogspot.com/-DoO_bohvDno/UZH17_sZbSI/AAAAAAAANEY/bOoB8PGdrow/s1600/java_logo.gif', 'url': 'http://blogger.gtwang.org/2013/05/asynchronous-servlets-with-tomcat7.html', 'type': 'item', 'isSingleItem': true, 'isMultipleItems': false, 'isError': false, 'isPage': false, 'isPost': true, 'isHomepage': false, 'isArchive': false, 'isLabelSearch': false, 'postId': 8500965175470979360}}]);
_WidgetManager._RegisterWidget('_HeaderView', new _WidgetInfo('Header1', 'head', null, document.getElementById('Header1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_AttributionView', new _WidgetInfo('Attribution1', 'head', null, document.getElementById('Attribution1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_BlogView', new _WidgetInfo('Blog1', 'main', null, document.getElementById('Blog1'), {'cmtInteractionsEnabled': false, 'legacyCommentModerationUrl': 'https://www.blogger.com/moderate-legacy-comment.g?blogID\x3d5628310816558079036', 'iframeCommentsId': 'gpluscomments', 'viewType': 'FILTERED_POSTMOD'}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML3', 'sidebar', null, document.getElementById('HTML3'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_PopularPostsView', new _WidgetInfo('PopularPosts1', 'sidebar', null, document.getElementById('PopularPosts1'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_HTMLView', new _WidgetInfo('HTML2', 'sidebar', null, document.getElementById('HTML2'), {}, 'displayModeFull'));
_WidgetManager._RegisterWidget('_StatsView', new _WidgetInfo('Stats1', 'sidebar', null, document.getElementById('Stats1'), {'title': '總瀏覽量', 'showGraphicalCounter': false, 'showAnimatedCounter': false, 'showSparkline': false, 'statsUrl': '//blogger.gtwang.org/b/stats?style\x3dBLACK_TRANSPARENT\x26timeRange\x3dALL_TIME\x26token\x3dHaYgN1wBAAA.93MJuLezY4YhAiwVzoFkFQnaGmGJK4G8RmGfX6wzCQs.lH4MDodXkMw1NbpbbtYglA'}, 'displayModeFull'));
</script>

<iframe name="oauth2relay425831306" id="oauth2relay425831306" src="%E4%BD%BF%E7%94%A8%20Tomcat%207%20%E8%88%87%20Java%20Servlet%203.0%20API%20%E5%AF%A6%E4%BD%9C%20Asynchronous%20Servlets%EF%BC%9A%E6%8F%90%E5%8D%87%E4%BC%BA%E6%9C%8D%E5%99%A8%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%A1%88%20-%20G.%20T.%20Wang_files/postmessageRelay.htm" style="width: 1px; height: 1px; position: absolute; top: -100px;" tabindex="-1" aria-hidden="true"></iframe></body></html>