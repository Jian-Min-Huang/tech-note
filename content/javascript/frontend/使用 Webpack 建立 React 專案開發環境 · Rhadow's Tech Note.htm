<!DOCTYPE html>
<!-- saved from url=(0053)https://rhadow.github.io/2015/04/02/webpack-workflow/ -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en-us"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <link href="http://gmpg.org/xfn/11" rel="profile">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  

  <!-- Enable responsiveness on mobile devices-->
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">

  <!-- SEO -->
  
  <meta http-equiv="content-type" content="text/html">
  <meta name="author" content="Howard Chang">
  <meta name="copyright" content="Howard Chang">
  <meta name="google-site-verification" content="Y6EHO_vACb33JR6CLegTUED-tf0hwqt3auuO2yHTwwg">
  <meta name="keywords" content="ReactJS,Flux,AngularJS,CSS,Git,HTML5,JavaScript,Front end engineering,SublimeText,Node,Unit Testing,前端工程研究, ImmutableJS, Jest, 教學">

  <link rel="contents" title="Archive" href="https://rhadow.github.io/Archive">
  <link rel="start" title="Rhadow&#39;s Tech Note" href="https://rhadow.github.io/">

  
    <meta property="og:title" content="使用 Webpack 建立 React 專案開發環境">
    <meta property="og:type" content="article">
    <meta property="og:url" content="https://rhadow.github.io/2015/04/02/webpack-workflow/">
    <meta property="og:image" content="https://rhadow.github.io/public/logo.png">
    <meta property="og:description" content="Webpack 包含了許多好用的 loader 可以協助開發者在開發過程中省去不少麻煩。而 LiveReload 更是節省時間不可或缺的功能。本篇將透過一個簡單的範例介紹如何使用 webpack-dev-server 與 react-hot-loader 來讓開發 React 專案更為快速方便。如果你是剛開始使用 Webpack 的開發者，建議先讀完 Webpack howto 或 如何使用 Webpack 模組整合工具...">
    <meta name="description" content="Webpack 包含了許多好用的 loader 可以協助開發者在開發過程中省去不少麻煩。而 LiveReload 更是節省時間不可或缺的功能。本篇將透過一個簡單的範例介紹如何使用 webpack-dev-server 與 react-hot-loader 來讓開發 React 專案更為快速方便。如果你是剛開始使用 Webpack 的開發者，建議先讀完 Webpack howto 或 如何使用 Webpack 模組整合工具...">
  

  <title>
    
      使用 Webpack 建立 React 專案開發環境 · Rhadow's Tech Note
    
  </title>

  <!-- CSS -->
  <link rel="stylesheet" href="./使用 Webpack 建立 React 專案開發環境 · Rhadow&#39;s Tech Note_files/poole.css">
  <link rel="stylesheet" href="./使用 Webpack 建立 React 專案開發環境 · Rhadow&#39;s Tech Note_files/syntax.css">
  <link rel="stylesheet" href="./使用 Webpack 建立 React 專案開發環境 · Rhadow&#39;s Tech Note_files/hyde.css">
  <link rel="stylesheet" href="./使用 Webpack 建立 React 專案開發環境 · Rhadow&#39;s Tech Note_files/custom.min.css">
  <link href="./使用 Webpack 建立 React 專案開發環境 · Rhadow&#39;s Tech Note_files/font-awesome.min.css" rel="stylesheet" type="text/css">

  <!-- Icons -->
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="https://rhadow.github.io/public/apple-touch-icon-144-precomposed.png">
  <link rel="shortcut icon" href="https://rhadow.github.io/public/favicon.ico">

  <!-- RSS -->
  <link rel="alternate" type="application/rss+xml" title="RSS" href="https://rhadow.github.io/atom.xml">
<script id="facebook-jssdk" src="./使用 Webpack 建立 React 專案開發環境 · Rhadow&#39;s Tech Note_files/sdk.js"></script><script async="" src="./使用 Webpack 建立 React 專案開發環境 · Rhadow&#39;s Tech Note_files/analytics.js"></script><script type="text/javascript" async="" src="./使用 Webpack 建立 React 專案開發環境 · Rhadow&#39;s Tech Note_files/embed.js"></script><script async="" type="text/javascript" src="./使用 Webpack 建立 React 專案開發環境 · Rhadow&#39;s Tech Note_files/count.js"></script><link rel="preload" as="style" href="https://c.disquscdn.com/next/embed/styles/lounge.b86d4f6eedbae580658ac980cc1aa322.css"><link rel="preload" as="script" href="https://c.disquscdn.com/next/embed/common.bundle.8edffe1405dcc2d5eb5ee9d96a2866d1.js"><link rel="preload" as="script" href="https://c.disquscdn.com/next/embed/lounge.bundle.329e132f404e98b8a5595dd712187b0e.js"><link rel="preload" as="script" href="https://disqus.com/next/config.js"><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 1px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck.RTL {right: .7em; left: auto}
.MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: #606872; color: white}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type="text/css">.MathJax_Preview .MJXf-math {color: inherit!important}
</style><style type="text/css">.MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><style type="text/css">.fb_hidden{position:absolute;top:-10000px;z-index:10001}.fb_reposition{overflow:hidden;position:relative}.fb_invisible{display:none}.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:"lucida grande", tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}.fb_reset>div{overflow:hidden}.fb_link img{border:none}@keyframes fb_transform{from{opacity:0;transform:scale(.95)}to{opacity:1;transform:scale(1)}}.fb_animate{animation:fb_transform .3s forwards}
.fb_dialog{background:rgba(82, 82, 82, .7);position:absolute;top:-10000px;z-index:10001}.fb_reset .fb_dialog_legacy{overflow:visible}.fb_dialog_advanced{padding:10px;-moz-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}.fb_dialog_content{background:#fff;color:#333}.fb_dialog_close_icon{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px}.fb_dialog_mobile .fb_dialog_close_icon{top:5px;left:5px;right:auto}.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}.fb_dialog_close_icon:hover{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent}.fb_dialog_close_icon:active{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent}.fb_dialog_loader{background-color:#f6f7f9;border:1px solid #606060;font-size:24px;padding:20px}.fb_dialog_top_left,.fb_dialog_top_right,.fb_dialog_bottom_left,.fb_dialog_bottom_right{height:10px;width:10px;overflow:hidden;position:absolute}.fb_dialog_top_left{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 0;left:-10px;top:-10px}.fb_dialog_top_right{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -10px;right:-10px;top:-10px}.fb_dialog_bottom_left{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -20px;bottom:-10px;left:-10px}.fb_dialog_bottom_right{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -30px;right:-10px;bottom:-10px}.fb_dialog_vert_left,.fb_dialog_vert_right,.fb_dialog_horiz_top,.fb_dialog_horiz_bottom{position:absolute;background:#525252;filter:alpha(opacity=70);opacity:.7}.fb_dialog_vert_left,.fb_dialog_vert_right{width:10px;height:100%}.fb_dialog_vert_left{margin-left:-10px}.fb_dialog_vert_right{right:0;margin-right:-10px}.fb_dialog_horiz_top,.fb_dialog_horiz_bottom{width:100%;height:10px}.fb_dialog_horiz_top{margin-top:-10px}.fb_dialog_horiz_bottom{bottom:0;margin-bottom:-10px}.fb_dialog_iframe{line-height:0}.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #365899;color:#fff;font-size:14px;font-weight:bold;margin:0}.fb_dialog_content .dialog_title>span{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yd/r/Cou7n-nqK52.gif) no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}body.fb_hidden{-webkit-transform:none;height:100%;margin:0;overflow:visible;position:absolute;top:-10000px;left:0;width:100%}.fb_dialog.fb_dialog_mobile.loading{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ya/r/3rhSv5V8j3o.gif) white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}.fb_dialog.fb_dialog_mobile.loading.centered{width:auto;height:auto;min-height:initial;min-width:initial;background:none}.fb_dialog.fb_dialog_mobile.loading.centered #fb_dialog_loader_spinner{width:100%}.fb_dialog.fb_dialog_mobile.loading.centered .fb_dialog_content{background:none}.loading.centered #fb_dialog_loader_close{color:#fff;display:block;padding-top:20px;clear:both;font-size:18px}#fb-root #fb_dialog_ipad_overlay{background:rgba(0, 0, 0, .45);position:absolute;bottom:0;left:0;right:0;top:0;width:100%;min-height:100%;z-index:10000}#fb-root #fb_dialog_ipad_overlay.hidden{display:none}.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}.fb_dialog_content .dialog_header{-webkit-box-shadow:white 0 1px 1px -1px inset;background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#738ABA), to(#2C4987));border-bottom:1px solid;border-color:#1d4088;color:#fff;font:14px Helvetica, sans-serif;font-weight:bold;text-overflow:ellipsis;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0;vertical-align:middle;white-space:nowrap}.fb_dialog_content .dialog_header table{-webkit-font-smoothing:subpixel-antialiased;height:43px;width:100%}.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px}.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px}.fb_dialog_content .touchable_button{background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#4966A6), color-stop(.5, #355492), to(#2A4887));border:1px solid #29487d;-webkit-background-clip:padding-box;-webkit-border-radius:3px;-webkit-box-shadow:rgba(0, 0, 0, .117188) 0 1px 1px inset, rgba(255, 255, 255, .167969) 0 1px 0;display:inline-block;margin-top:3px;max-width:85px;line-height:18px;padding:4px 12px;position:relative}.fb_dialog_content .dialog_header .touchable_button input{border:none;background:none;color:#fff;font:12px Helvetica, sans-serif;font-weight:bold;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}.fb_dialog_content .dialog_content{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #555;border-bottom:0;border-top:0;height:150px}.fb_dialog_content .dialog_footer{background:#f6f7f9;border:1px solid #555;border-top-color:#ccc;height:40px}#fb_dialog_loader_close{float:left}.fb_dialog.fb_dialog_mobile .fb_dialog_close_button{text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}#fb_dialog_loader_spinner{animation:rotateSpinner 1.2s linear infinite;background-color:transparent;background-image:url(https://static.xx.fbcdn.net/rsrc.php/v3/yD/r/t-wz8gw1xG1.png);background-repeat:no-repeat;background-position:50% 50%;height:24px;width:24px}@keyframes rotateSpinner{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}
.fb_iframe_widget{display:inline-block;position:relative}.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}.fb_iframe_widget iframe{position:absolute}.fb_iframe_widget_fluid_desktop,.fb_iframe_widget_fluid_desktop span,.fb_iframe_widget_fluid_desktop iframe{max-width:100%}.fb_iframe_widget_fluid_desktop iframe{min-width:220px;position:relative}.fb_iframe_widget_lift{z-index:1}.fb_hide_iframes iframe{position:relative;left:-10000px}.fb_iframe_widget_loader{position:relative;display:inline-block}.fb_iframe_widget_fluid{display:inline}.fb_iframe_widget_fluid span{width:100%}.fb_iframe_widget_loader iframe{min-height:32px;z-index:2;zoom:1}.fb_iframe_widget_loader .FB_Loader{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/y9/r/jKEcVPZFk-2.gif) no-repeat;height:32px;width:32px;margin-left:-16px;position:absolute;left:50%;z-index:4}
.fb_mobile_overlay_active{height:100%;overflow:hidden;position:fixed;width:100%}.fb_shrink_active{opacity:1;transform:scale(1, 1);transition-duration:200ms;transition-timing-function:ease-out}.fb_shrink_active:active{opacity:.5;transform:scale(.75, .75)}</style></head>


<body class="theme-base-chocolate"><div id="MathJax_Message" style="display: none;"></div>
    <div class="navbar">
    <h1>
        <a class="home-logo" href="https://rhadow.github.io/">
            Rhadow's Tech Note
        </a>
    </h1>

    <nav>
        <a href="https://rhadow.github.io/">Home</a>
        
        
            
                
            
        
            
                
            
        
            
                
                    <a href="https://rhadow.github.io/Archive/">Archives</a>
                
            
        
            
                
                    <a href="https://rhadow.github.io/TagCloud/">Tag Cloud</a>
                
            
        
            
                
                    <a href="https://rhadow.github.io/about/">About</a>
                
            
        
            
        
            
                
            
        
            
                
            
        
            
                
            
        
            
        
            
                
            
        
            
                
            
        
            
                
            
        
    </nav>
</div>
 <div class="sidebar">
  <div class="container sidebar-sticky">
    <div class="sidebar-about">
      <h1>
        <a href="https://rhadow.github.io/">
          Rhadow's Tech Note
        </a>
      </h1>
      <p class="lead">News, articles and reviews of a variety of web development frameworks and modules.</p>
    </div>

    <nav class="sidebar-nav">
      <a class="sidebar-nav-item" href="https://rhadow.github.io/">Home</a>
      

      
      
        
          
        
      
        
          
        
      
        
          
            <a class="sidebar-nav-item" href="https://rhadow.github.io/Archive/">Archives</a>
          
        
      
        
          
            <a class="sidebar-nav-item" href="https://rhadow.github.io/TagCloud/">Tag Cloud</a>
          
        
      
        
          
            <a class="sidebar-nav-item" href="https://rhadow.github.io/about/">About</a>
          
        
      
        
      
        
          
        
      
        
          
        
      
        
          
        
      
        
      
        
          
        
      
        
          
        
      
        
          
        
      
      <a class="sidebar-nav-item" href="https://rhadow.github.io/json-resume">Resume</a>
      <span class="sidebar-nav-item">
        <ul class="list-inline text-center">
          
          <li>
              <a href="https://twitter.com/Rhadow3433">
                  <span class="fa-stack fa-lg">
                      <i class="fa fa-circle fa-stack-2x"></i>
                      <i class="fa fa-twitter fa-stack-1x"></i>
                  </span>
              </a>
          </li>
          
          
          
          <li>
              <a href="https://github.com/Rhadow">
                  <span class="fa-stack fa-lg">
                      <i class="fa fa-circle fa-stack-2x"></i>
                      <i class="fa fa-github fa-stack-1x"></i>
                  </span>
              </a>
          </li>
          
        </ul>
      </span>
    </nav>
    <p class="copyright">
        © Copyright 2017 | Rhadow's Tech Blog | All rights reserved
    </p>
  </div>
</div>

    <div class="content container">
        <div class="post">
  <h1 class="post-title">使用 Webpack 建立 React 專案開發環境</h1>
  <span class="post-date">02 Apr 2015</span>
  <p>Webpack 包含了許多好用的 loader 可以協助開發者在開發過程中省去不少麻煩。而 LiveReload 更是節省時間不可或缺的功能。本篇將透過一個簡單的範例介紹如何使用 webpack-dev-server 與 react-hot-loader 來讓開發 React 專案更為快速方便。如果你是剛開始使用 Webpack 的開發者，建議先讀完 <a href="https://github.com/petehunt/webpack-howto">Webpack howto</a> 或 <a href="https://rhadow.github.io/2015/03/23/webpackIntro/">如何使用 Webpack 模組整合工具</a> 熟悉 Webpack 後再來使用各式各樣的 loader。</p>

<p><strong>2016-02-24 更新： 由於版本問題造成大家無法成功使用文章中的程式碼感到抱歉，以下已將版本號補上。最新的開發環境建議參考 <a href="https://github.com/gaearon/react-transform-boilerplate">react-transform-boilerplate</a>。</strong></p>

<h2 id="webpack-dev-server-與-react-hot-loader-是什麼">webpack-dev-server 與 react-hot-loader 是什麼</h2>

<p><a href="https://github.com/webpack/webpack-dev-server">webpack-dev-server</a> 是個小型的 node.js express server，主要用來跑專案內的檔案，同時提供 LiveReload 的功能。<a href="https://github.com/gaearon/react-hot-loader">react-hot-loader</a> 則是可以在不改變 React 元件的 state 下，將更改過程式碼的元件直接更新到畫面上。</p>

<h2 id="準備">準備</h2>

<p>在專案目錄內先使用 <code class="highlighter-rouge">npm init</code> 產生 <code class="highlighter-rouge">package.json</code> 再透過 <code class="highlighter-rouge">npm install webpack@1.12.14 webpack-dev-server@1.14.1 react-hot-loader@1.3.0 babel-loader@5.4.0 react@0.13.3 --save-dev</code> 指令安裝 webpack，webpack-dev-server，react-hot-loader，react 和 babel-loader，並在專案目錄下加入檔案與資料夾並整理如以下結構:</p>

<ul>
  <li>/app
    <ul>
      <li>main.js</li>
      <li>TestOne.js</li>
      <li>TestTwo.js</li>
    </ul>
  </li>
  <li>/build
    <ul>
      <li>bundle.js (會透過 webpack 自動生成)</li>
      <li>index.html</li>
    </ul>
  </li>
  <li>package.json</li>
  <li>webpack.config.js</li>
</ul>

<p>順帶一提，babel-loader 是用來解譯 jsx 與 ES6 語法的 loader。</p>

<p>接著，將以下程式碼貼到對應的檔案內容內:</p>

<p>main.js</p>

<div class="language-js highlighter-rouge"><pre class="highlight"><code><span class="cm">/* main.js */</span>

<span class="s1">'use strict'</span><span class="p">;</span>

<span class="kd">var</span> <span class="nx">React</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'react'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">TestOne</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'./TestOne.js'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">TestTwo</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'./TestTwo.js'</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">Main</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">createClass</span><span class="p">({</span>
    <span class="na">getInitialState</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">{</span>
          <span class="na">switch</span><span class="p">:</span> <span class="kc">true</span>
        <span class="p">};</span>
    <span class="p">},</span>
    <span class="nx">_toggle</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span>
            <span class="na">switch</span><span class="p">:</span> <span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="k">switch</span>
        <span class="p">});</span>
    <span class="p">},</span>
    <span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">(</span>
            <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
                <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">"button"</span> <span class="nx">onClick</span><span class="o">=</span><span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">_toggle</span><span class="p">}</span> <span class="nx">value</span><span class="o">=</span><span class="s2">"Press Me!"</span><span class="o">/&gt;</span>
                <span class="p">{</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="k">switch</span> <span class="p">?</span> <span class="o">&lt;</span><span class="nx">TestOne</span> <span class="o">/&gt;</span> <span class="p">:</span> <span class="o">&lt;</span><span class="nx">TestTwo</span> <span class="o">/&gt;</span><span class="p">}</span>
            <span class="o">&lt;</span><span class="sr">/div&gt;     </span><span class="err"> 
</span>        <span class="p">);</span>
    <span class="p">}</span>
<span class="p">});</span>

<span class="nx">React</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="o">&lt;</span><span class="nx">Main</span> <span class="o">/&gt;</span><span class="p">,</span> <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">);</span>
</code></pre>
</div>

<p>TestOne.js</p>

<div class="language-js highlighter-rouge"><pre class="highlight"><code><span class="cm">/* TestOne.js */</span>

<span class="s1">'use strict'</span><span class="p">;</span>

<span class="kd">var</span> <span class="nx">React</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'react'</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">TestOne</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">createClass</span><span class="p">({</span>
    <span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">(</span>
            <span class="cm">/* jshint ignore: start*/</span>
            <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span><span class="nx">Hello</span> <span class="nx">I</span> <span class="nx">am</span> <span class="nx">TestOne</span> <span class="nx">Component</span><span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span>            <span class="cm">/* jshint ignore: end*/</span>
        <span class="p">);</span>
    <span class="p">}</span>
<span class="p">});</span>

<span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">TestOne</span><span class="p">;</span>
</code></pre>
</div>

<p>TestTwo.js</p>

<div class="language-js highlighter-rouge"><pre class="highlight"><code><span class="cm">/* TestTwo.js */</span>

<span class="s1">'use strict'</span><span class="p">;</span>

<span class="kd">var</span> <span class="nx">React</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'react'</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">TestTwo</span> <span class="o">=</span> <span class="nx">React</span><span class="p">.</span><span class="nx">createClass</span><span class="p">({</span>
    <span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">(</span>
            <span class="cm">/* jshint ignore: start*/</span>
            <span class="o">&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="nx">Hello</span> <span class="nx">I</span> <span class="nx">am</span> <span class="nx">TestTwo</span> <span class="nx">Component</span><span class="o">&lt;</span><span class="sr">/h1</span><span class="err">&gt;
</span>            <span class="cm">/* jshint ignore: end*/</span>
        <span class="p">);</span>
    <span class="p">}</span>
<span class="p">});</span>

<span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">TestTwo</span><span class="p">;</span>
</code></pre>
</div>

<p>index.html</p>

<div class="language-html highlighter-rouge"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>

<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/head&gt;</span>

<span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"bundle.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;/body&gt;</span>

<span class="nt">&lt;/html&gt;</span>
</code></pre>
</div>

<p>webpack.config.js</p>

<div class="language-js highlighter-rouge"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">path</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'path'</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">config</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">entry</span><span class="p">:</span> <span class="p">[</span><span class="nx">path</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">__dirname</span><span class="p">,</span> <span class="s1">'app/main.js'</span><span class="p">)],</span>
    <span class="na">output</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">path</span><span class="p">:</span> <span class="nx">path</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">__dirname</span><span class="p">,</span> <span class="s1">'build'</span><span class="p">),</span>
        <span class="na">filename</span><span class="p">:</span> <span class="s1">'bundle.js'</span>
    <span class="p">},</span>
    <span class="na">module</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">loaders</span><span class="p">:</span> <span class="p">[{</span>
            <span class="na">test</span><span class="p">:</span> <span class="sr">/</span><span class="se">\.</span><span class="sr">js$/</span><span class="p">,</span>
            <span class="na">loaders</span><span class="p">:</span> <span class="p">[</span><span class="s1">'babel'</span><span class="p">]</span>
        <span class="p">}]</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">config</span><span class="p">;</span>

</code></pre>
</div>

<p>最後在 <code class="highlighter-rouge">package.json</code> 內做修改:</p>

<div class="language-js highlighter-rouge"><pre class="highlight"><code><span class="s2">"scripts"</span><span class="err">:</span> <span class="p">{</span>
    <span class="s2">"test"</span><span class="err">:</span> <span class="s2">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span><span class="p">,</span>
    <span class="s2">"build"</span><span class="err">:</span> <span class="s2">"webpack"</span> <span class="c1">//新加入這行</span>
<span class="p">},</span>
</code></pre>
</div>
<p>當執行 <code class="highlighter-rouge">npm run build</code> 後，系統會執行 <code class="highlighter-rouge">webpack</code> 的指令並打包，開啟 index.html 後就能看到程式正確執行。</p>

<h2 id="使用-webpack-dev-server-實現-livereload">使用 webpack-dev-server 實現 LiveReload</h2>

<p>現階段每當我們更改程式碼並想要看到結果時，就必須要輸入 <code class="highlighter-rouge">npm run build</code> 一次，還要到瀏覽器點重新整理才能看到變動後的成果。還好，webpack-dev-server 為我們省去了這個麻煩。</p>

<p>首先，先到 <code class="highlighter-rouge">package.json</code> 內加入一個新 <code class="highlighter-rouge">dev</code> 的指令:</p>

<div class="language-js highlighter-rouge"><pre class="highlight"><code><span class="s2">"scripts"</span><span class="err">:</span> <span class="p">{</span>
    <span class="s2">"test"</span><span class="err">:</span> <span class="s2">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span><span class="p">,</span>
    <span class="s2">"build"</span><span class="err">:</span> <span class="s2">"webpack"</span><span class="p">,</span>
    <span class="s2">"dev"</span><span class="err">:</span> <span class="s2">"webpack-dev-server --devtool eval --progress --colors --hot --content-base build"</span>
<span class="p">}</span>
</code></pre>
</div>
<p><code class="highlighter-rouge">dev</code>內的指令解釋如下:</p>

<ul>
  <li><code class="highlighter-rouge">webpack-dev-server</code> 會在 localhost:8080 建立起專案的 server</li>
  <li><code class="highlighter-rouge">--devtool eval</code> 會顯示出發生錯誤的行數與檔案名稱</li>
  <li><code class="highlighter-rouge">--progress</code> 會顯示出打包的過程</li>
  <li><code class="highlighter-rouge">--colors</code> 會幫 webpack 顯示的訊息加入顏色</li>
  <li><code class="highlighter-rouge">--content-based build</code> 指向專案最終輸出的資料夾</li>
</ul>

<p>接著更新 <code class="highlighter-rouge">index.html</code> :</p>

<div class="language-html highlighter-rouge"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>

<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/head&gt;</span>

<span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"http://localhost:8080/webpack-dev-server.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"bundle.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;/body&gt;</span>

<span class="nt">&lt;/html&gt;</span>
</code></pre>
</div>

<p>再來到 <code class="highlighter-rouge">webpack.config.js</code> 的 <code class="highlighter-rouge">entry</code> 屬性內加入 <code class="highlighter-rouge">'webpack/hot/dev-server'</code>如下:</p>

<div class="language-js highlighter-rouge"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">path</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'path'</span><span class="p">);</span>

<span class="kd">var</span> <span class="nx">config</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">entry</span><span class="p">:</span> <span class="p">[</span><span class="s1">'webpack/hot/dev-server'</span><span class="p">,</span> <span class="nx">path</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">__dirname</span><span class="p">,</span> <span class="s1">'app/main.js'</span><span class="p">)],</span>
    <span class="na">output</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">path</span><span class="p">:</span> <span class="nx">path</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">__dirname</span><span class="p">,</span> <span class="s1">'build'</span><span class="p">),</span>
        <span class="na">filename</span><span class="p">:</span> <span class="s1">'bundle.js'</span>
    <span class="p">},</span>
    <span class="na">module</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">loaders</span><span class="p">:</span> <span class="p">[{</span>
            <span class="na">test</span><span class="p">:</span> <span class="sr">/</span><span class="se">\.</span><span class="sr">js$/</span><span class="p">,</span>
            <span class="na">loaders</span><span class="p">:</span> <span class="p">[</span><span class="s1">'babel'</span><span class="p">]</span>
        <span class="p">}]</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">config</span><span class="p">;</span>
</code></pre>
</div>

<p>這樣就完成 LiveReload 的功能囉，各位可以在執行 <code class="highlighter-rouge">npm run dev</code> 後到 <a href="http://localhost:8080/">http://localhost:8080/</a> 檢查是否有正確跑起來，也可以試著在程式碼內做些改變，並觀察畫面是否有跟著變動。</p>

<h2 id="加入-react-hot-loader">加入 react-hot-loader</h2>

<p>如果你有跟著以上每一步做的話，程式跑起來後應該會有一個按鈕和 “Hello, I’m TestOne Component” 的字出現在畫面上。
重複點擊按鈕，”Hello, I’m TestOne Component” 和 “Hello, I’m TestTwo Component” 會輪流出現在畫面上。</p>

<p>現在請將畫面切到顯示 “Hello, I’m TestTwo Component” ，並到 <code class="highlighter-rouge">TestTwo.js</code> 將 “Hello, I’m TestTwo Component” 改為 “Hello” 後儲存。完成後，會發現瀏覽器畫面會回到最初的 “Hello, I’m TestOne Component”，這是因為 LiveReload 會重新整理畫面並將 React 元件的 state 重設回到初始值。</p>

<p>react-hot-loader 的功用就是在不清除 state 的狀態下更新畫面，讓我們趕快來看看該如何達成這個效果吧。</p>

<p>首先，修改 <code class="highlighter-rouge">webpack.config.js</code> 內的 <code class="highlighter-rouge">entry</code> 屬性如下:</p>

<div class="language-js highlighter-rouge"><pre class="highlight"><code><span class="nx">entry</span><span class="err">:</span> <span class="p">[</span>
    <span class="s1">'webpack-dev-server/client?http://localhost:8080'</span><span class="p">,</span>
    <span class="s1">'webpack/hot/only-dev-server'</span><span class="p">,</span>
    <span class="nx">path</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">__dirname</span><span class="p">,</span> <span class="s1">'app/main.js'</span><span class="p">)</span>
<span class="p">]</span>
</code></pre>
</div>

<p>再來修改 <code class="highlighter-rouge">module</code> 屬性如下:</p>

<div class="language-js highlighter-rouge"><pre class="highlight"><code><span class="nx">module</span><span class="err">:</span> <span class="p">{</span>
    <span class="nl">loaders</span><span class="p">:</span> <span class="p">[{</span>
        <span class="na">test</span><span class="p">:</span> <span class="sr">/</span><span class="se">\.</span><span class="sr">js$/</span><span class="p">,</span>
        <span class="na">loaders</span><span class="p">:</span> <span class="p">[</span><span class="s1">'react-hot'</span><span class="p">,</span> <span class="s1">'babel'</span><span class="p">],</span>
        <span class="na">include</span><span class="p">:</span> <span class="nx">path</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">__dirname</span><span class="p">,</span> <span class="s1">'app'</span><span class="p">)</span>
    <span class="p">}]</span>
<span class="p">},</span>
</code></pre>
</div>

<p>這部分要特別注意的地方是一定要加入 <code class="highlighter-rouge">include: path.join(__dirname, 'app')</code>，不然 webpack 會把 <code class="highlighter-rouge">node_modules</code> 內的 js 檔都透過 react-hot-loader 跑一遍，會因此導致 Cannot read property ‘NODE_ENV’ of undefined 錯誤造成程式無法正常運作。</p>

<p>最後一步，在 <code class="highlighter-rouge">webpack.config.js</code> 內加入以下屬性，別忘了要先宣告 <code class="highlighter-rouge">var webpack = require('webpack');</code>:</p>

<div class="language-js highlighter-rouge"><pre class="highlight"><code><span class="nx">plugins</span><span class="err">:</span> <span class="p">[</span>
    <span class="c1">//new webpack.HotModuleReplacementPlugin(),</span>
    <span class="k">new</span> <span class="nx">webpack</span><span class="p">.</span><span class="nx">NoErrorsPlugin</span><span class="p">()</span>
<span class="p">]</span>
</code></pre>
</div>

<p>這邊的 <code class="highlighter-rouge">webpack.NoErrorsPlugin()</code> 是選擇性的，主要的功能是當更改完的程式碼有語法錯誤時不要重新整理。
當錯誤修好後，畫面會自動重新整理。</p>

<p><code class="highlighter-rouge">new webpack.HotModuleReplacementPlugin()</code> 則是當不使用 webpack-dev-server 的 inline-mode 時才需要加入。本例是使用 inline-mode，你可以試著把註解掉的部分加回程式裡，當元件在做更新時，會出現 <code class="highlighter-rouge">Uncaught RangeError: Maximum call stack size exceeded</code> 的錯誤訊息。inline-mode 詳情請參考 <a href="http://webpack.github.io/docs/webpack-dev-server.html">webpack-dev-server 說明</a>。</p>

<p>現在執行 <code class="highlighter-rouge">npm run dev</code> 後再一次做本段落最開始的實驗，就會發現更改程式碼後，畫面不會再回到首頁了。</p>

<h2 id="總結">總結</h2>

<p>最近使用 webpack 的開發者越來越多，如果想深入了解的話不妨多搜尋一下網路上的教學，會發現它能夠完成的事情其實很多。如果在實作以上範例有碰到問題或有更好的建議的話，歡迎各位留言討論。</p>

  <div class="post-tag">
    <span class="fa-stack fa-sm">
      <i class="fa fa-tags fa-stack-1x"></i>
    </span>
    :  <a class="tag-wrapper" href="https://rhadow.github.io/tags/Webpack" title="View posts tagged with &quot;Webpack&quot;"><span class="tags">Webpack</span></a>    <a class="tag-wrapper" href="https://rhadow.github.io/tags/React" title="View posts tagged with &quot;React&quot;"><span class="tags">React</span></a>   
  </div>
  <div class="fb-like social-plugins fb_iframe_widget" data-layout="button" data-action="like" data-share="true" fb-xfbml-state="rendered" fb-iframe-plugin-query="action=like&amp;app_id=636566956443735&amp;container_width=720&amp;href=https%3A%2F%2Frhadow.github.io%2F2015%2F04%2F02%2Fwebpack-workflow%2F&amp;layout=button&amp;locale=en_US&amp;sdk=joey&amp;share=true"><span style="vertical-align: bottom; width: 101px; height: 20px;"><iframe name="f147766cec3d528" width="1000px" height="1000px" frameborder="0" allowtransparency="true" allowfullscreen="true" scrolling="no" title="fb:like Facebook Social Plugin" src="./使用 Webpack 建立 React 專案開發環境 · Rhadow&#39;s Tech Note_files/like.html" style="border: none; visibility: visible; width: 101px; height: 20px;" class=""></iframe></span></div>

</div>


<div class="message">
  <img class="profile" src="./使用 Webpack 建立 React 專案開發環境 · Rhadow&#39;s Tech Note_files/profile.png" alt="profile-image">
  <div class="intro-message">
      Hello, I'm Rhadow. Currently working as front-end developer and focusing on developing web apps using React, Flux-architecture and Node.
  </div>
</div>



<div class="related">
  <h2>Related Posts</h2>
  <ul class="related-posts">
    
      <li>
        <h3>
          <a href="https://rhadow.github.io/2016/04/25/elm-architecture-and-address/">
            Elm Architecture 裡的 Address 由來
            <small>25 Apr 2016</small>
          </a>
        </h3>
      </li>
    
      <li>
        <h3>
          <a href="https://rhadow.github.io/2016/04/23/elm-introduction/">
            Elm 簡介
            <small>23 Apr 2016</small>
          </a>
        </h3>
      </li>
    
      <li>
        <h3>
          <a href="https://rhadow.github.io/2016/02/24/ml-lecture-2/">
            機器學習基石-第二講筆記
            <small>24 Feb 2016</small>
          </a>
        </h3>
      </li>
    
  </ul>
</div>
 
<div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1">
    <div id="disqus_thread"><iframe id="dsq-app1778" name="dsq-app1778" allowtransparency="true" frameborder="0" scrolling="no" tabindex="0" title="Disqus" width="100%" src="./使用 Webpack 建立 React 專案開發環境 · Rhadow&#39;s Tech Note_files/saved_resource.html" style="width: 1px !important; min-width: 100% !important; border: none !important; overflow: hidden !important; height: 3193px !important;" horizontalscrolling="no" verticalscrolling="no"></iframe></div>
    <script type="text/javascript">
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'rhadowtechnote'; // required: replace example with your forum shortname
    var disqus_identifier = '/2015/04/02/webpack-workflow/';
    var disqus_url = 'https://rhadow.github.com/2015/04/02/webpack-workflow/';

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script');
        dsq.type = 'text/javascript';
        dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
    </script>
    <noscript>Please enable JavaScript to view the &lt;a href="http://disqus.com/?ref_noscript"&gt;comments powered by Disqus.&lt;/a&gt;
    </noscript>
    
</div>


    </div>
    <script type="text/javascript">
/* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
var disqus_shortname = 'rhadowtechnote'; // required: replace example with your forum shortname
var disqus_identifier = '/2015/04/02/webpack-workflow/';
var disqus_url = 'https://rhadow.github.com/2015/04/02/webpack-workflow/';

/* * * DON'T EDIT BELOW THIS LINE * * */
(function() {
    var s = document.createElement('script');
    s.async = true;
    s.type = 'text/javascript';
    s.src = '//' + disqus_shortname + '.disqus.com/count.js';
    (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
}());
</script>
 <script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-59285222-1', 'auto');
  ga('send', 'pageview');

</script>

<script src="./使用 Webpack 建立 React 專案開發環境 · Rhadow&#39;s Tech Note_files/MathJax.js" id=""></script>
<script>
window.fbAsyncInit = function() {
    FB.init({
        appId: '636566956443735',
        xfbml: true,
        version: 'v2.3'
    });
};

(function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) {
        return;
    }
    js = d.createElement(s);
    js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));
</script>


<div id="fb-root" class=" fb_reset"><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div><iframe name="fb_xdm_frame_https" frameborder="0" allowtransparency="true" allowfullscreen="true" scrolling="no" id="fb_xdm_frame_https" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tabindex="-1" src="./使用 Webpack 建立 React 專案開發環境 · Rhadow&#39;s Tech Note_files/lY4eZXm_YWu.html" style="border: none;"></iframe></div></div><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div></div></div></div><iframe style="display: none;" src="./使用 Webpack 建立 React 專案開發環境 · Rhadow&#39;s Tech Note_files/saved_resource(1).html"></iframe></body></html>